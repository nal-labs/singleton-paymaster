[012] 00000000: PUSH1 0x80                     // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000002: PUSH1 0x40                     // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000004: MSTORE                         // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000005: CALLVALUE                      // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000006: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000007: ISZERO                         // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000008: PUSH2 0xf                      // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 0000000b: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000000c: PUSH0                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000000d: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000000e: REVERT                         // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 0000000f: JUMPDEST                       // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000010: POP                            // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000011: PUSH1 0x4                      // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000013: CALLDATASIZE                   // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000014: LT                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000015: PUSH2 0x11f                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000018: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000019: PUSH0                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 0000001a: CALLDATALOAD                   // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 0000001b: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 0000001d: SHR                            // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 0000001e: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 0000001f: PUSH4 0x66d9a9a0               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000024: GT                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000025: PUSH2 0xab                     // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[012] 00000028: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 00000029: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 0000002a: PUSH4 0xb5508aa9               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 0000002f: GT                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 00000030: PUSH2 0x6f                     // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 00000033: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000034: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000035: PUSH4 0xb5508aa9               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000003a: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000003b: PUSH2 0x24f                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000003e: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000003f: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000040: PUSH4 0xba414fa6               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000045: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000046: PUSH2 0x26d                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000049: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000004a: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000004b: PUSH4 0xe20c9f71               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000050: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000051: PUSH2 0x28b                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000054: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000055: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000056: PUSH4 0xf5398f57               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000005b: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000005c: PUSH2 0x2a9                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000005f: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      00000060: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      00000061: PUSH4 0xfa7626d4               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      00000066: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      00000067: PUSH2 0x2b3                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000006a: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000006b: PUSH2 0x11f                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000006e: JUMP                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000006f: JUMPDEST                       // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000070: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000071: PUSH4 0x66d9a9a0               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000076: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000077: PUSH2 0x1cd                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000007a: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000007b: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000007c: PUSH4 0x85226c81               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000081: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000082: PUSH2 0x1eb                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000085: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000086: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000087: PUSH4 0x916a17c6               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000008c: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000008d: PUSH2 0x209                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000090: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000091: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000092: PUSH4 0xb02b0826               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000097: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000098: PUSH2 0x227                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000009b: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000009c: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000009d: PUSH4 0xb0464fdc               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      000000a2: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      000000a3: PUSH2 0x231                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      000000a6: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      000000a7: PUSH2 0x11f                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      000000aa: JUMP                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[010] 000000ab: JUMPDEST                       // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[010] 000000ac: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[010] 000000ad: PUSH4 0x1ee633c5               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[010] 000000b2: GT                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[010] 000000b3: PUSH2 0xf2                     // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[010] 000000b6: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 000000b7: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 000000b8: PUSH4 0x1ee633c5               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 000000bd: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 000000be: PUSH2 0x15f                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[002] 000000c1: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000c2: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000c3: PUSH4 0x2ade3880               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000c8: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000c9: PUSH2 0x169                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000cc: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000cd: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000ce: PUSH4 0x3e5e3c23               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000d3: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000d4: PUSH2 0x187                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000d7: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000d8: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000d9: PUSH4 0x3f7286f4               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000de: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000df: PUSH2 0x1a5                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000e2: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000e3: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000e4: PUSH4 0x575fc5d5               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000e9: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000ea: PUSH2 0x1c3                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 000000ed: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      000000ee: PUSH2 0x11f                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      000000f1: JUMP                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[008] 000000f2: JUMPDEST                       // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[008] 000000f3: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[008] 000000f4: PUSH4 0x981f473                // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[008] 000000f9: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[008] 000000fa: PUSH2 0x123                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[008] 000000fd: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[007] 000000fe: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[007] 000000ff: PUSH4 0xa9254e4                // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[007] 00000104: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[007] 00000105: PUSH2 0x12d                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[007] 00000108: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000109: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000010a: PUSH4 0x1ad3d7ff               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 0000010f: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000110: PUSH2 0x137                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000113: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      00000114: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      00000115: PUSH4 0x1ed7831c               // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000011a: EQ                             // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000011b: PUSH2 0x141                    // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000011e: JUMPI                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      0000011f: JUMPDEST                       // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      00000120: PUSH0                          // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      00000121: DUP1                           // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
      00000122: REVERT                         // test/BasePaymaster.t.sol: 19:1-97:2 (981-4332)
[001] 00000123: JUMPDEST                       // test/BasePaymaster.t.sol: 47:5-49:6 (1911-2019)
[001] 00000124: PUSH2 0x12b                    // test/BasePaymaster.t.sol: 47:5-49:6 (1911-2019)
[001] 00000127: PUSH2 0x2d1                    // test/BasePaymaster.t.sol: 47:5-49:6 (1911-2019)
[001] 0000012a: JUMP                           // test/BasePaymaster.t.sol: 47:5-49:6 (1911-2019)
[001] 0000012b: JUMPDEST                       // test/BasePaymaster.t.sol: 47:5-49:6 (1911-2019)
[001] 0000012c: STOP                           // test/BasePaymaster.t.sol: 47:5-49:6 (1911-2019)
[006] 0000012d: JUMPDEST                       // test/BasePaymaster.t.sol: 33:5-45:6 (1338-1905)
[006] 0000012e: PUSH2 0x135                    // test/BasePaymaster.t.sol: 33:5-45:6 (1338-1905)
[006] 00000131: PUSH2 0x308                    // test/BasePaymaster.t.sol: 33:5-45:6 (1338-1905)
[006] 00000134: JUMP                           // test/BasePaymaster.t.sol: 33:5-45:6 (1338-1905)
[006] 00000135: JUMPDEST                       // test/BasePaymaster.t.sol: 33:5-45:6 (1338-1905)
[006] 00000136: STOP                           // test/BasePaymaster.t.sol: 33:5-45:6 (1338-1905)
[001] 00000137: JUMPDEST                       // test/BasePaymaster.t.sol: 75:5-88:6 (3302-4059)
[001] 00000138: PUSH2 0x13f                    // test/BasePaymaster.t.sol: 75:5-88:6 (3302-4059)
[001] 0000013b: PUSH2 0x894                    // test/BasePaymaster.t.sol: 75:5-88:6 (3302-4059)
[001] 0000013e: JUMP                           // test/BasePaymaster.t.sol: 75:5-88:6 (3302-4059)
[001] 0000013f: JUMPDEST                       // test/BasePaymaster.t.sol: 75:5-88:6 (3302-4059)
[001] 00000140: STOP                           // test/BasePaymaster.t.sol: 75:5-88:6 (3302-4059)
      00000141: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000142: PUSH2 0x149                    // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000145: PUSH2 0xe2f                    // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000148: JUMP                           // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000149: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000014a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000014c: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000014d: PUSH2 0x156                    // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000150: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000151: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000152: PUSH2 0x279a                   // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000155: JUMP                           // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000156: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000157: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000159: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000015a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000015b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000015c: SUB                            // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000015d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000015e: RETURN                         // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
[001] 0000015f: JUMPDEST                       // test/BasePaymaster.t.sol: 51:5-54:6 (2025-2302)
[001] 00000160: PUSH2 0x167                    // test/BasePaymaster.t.sol: 51:5-54:6 (2025-2302)
[001] 00000163: PUSH2 0xeba                    // test/BasePaymaster.t.sol: 51:5-54:6 (2025-2302)
[001] 00000166: JUMP                           // test/BasePaymaster.t.sol: 51:5-54:6 (2025-2302)
[001] 00000167: JUMPDEST                       // test/BasePaymaster.t.sol: 51:5-54:6 (2025-2302)
[001] 00000168: STOP                           // test/BasePaymaster.t.sol: 51:5-54:6 (2025-2302)
      00000169: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000016a: PUSH2 0x171                    // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000016d: PUSH2 0x1093                   // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000170: JUMP                           // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000171: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000172: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000174: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000175: PUSH2 0x17e                    // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000178: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000179: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000017a: PUSH2 0x29da                   // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000017d: JUMP                           // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000017e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000017f: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000181: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000182: DUP1                           // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000183: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000184: SUB                            // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000185: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000186: RETURN                         // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000187: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000188: PUSH2 0x18f                    // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000018b: PUSH2 0x1217                   // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000018e: JUMP                           // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000018f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000190: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000192: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000193: PUSH2 0x19c                    // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000196: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000197: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000198: PUSH2 0x279a                   // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000019b: JUMP                           // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000019c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000019d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000019f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      000001a0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      000001a1: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      000001a2: SUB                            // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      000001a3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      000001a4: RETURN                         // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      000001a5: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001a6: PUSH2 0x1ad                    // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001a9: PUSH2 0x12a2                   // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001ac: JUMP                           // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001ad: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001ae: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001b0: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001b1: PUSH2 0x1ba                    // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001b4: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001b5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001b6: PUSH2 0x279a                   // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001b9: JUMP                           // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001ba: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001bb: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001bd: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001be: DUP1                           // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001bf: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001c0: SUB                            // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001c1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000001c2: RETURN                         // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
[001] 000001c3: JUMPDEST                       // test/BasePaymaster.t.sol: 90:5-96:6 (4065-4330)
[001] 000001c4: PUSH2 0x1cb                    // test/BasePaymaster.t.sol: 90:5-96:6 (4065-4330)
[001] 000001c7: PUSH2 0x132d                   // test/BasePaymaster.t.sol: 90:5-96:6 (4065-4330)
[001] 000001ca: JUMP                           // test/BasePaymaster.t.sol: 90:5-96:6 (4065-4330)
[001] 000001cb: JUMPDEST                       // test/BasePaymaster.t.sol: 90:5-96:6 (4065-4330)
[001] 000001cc: STOP                           // test/BasePaymaster.t.sol: 90:5-96:6 (4065-4330)
      000001cd: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001ce: PUSH2 0x1d5                    // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001d1: PUSH2 0x166f                   // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001d4: JUMP                           // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001d5: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001d6: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001d8: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001d9: PUSH2 0x1e2                    // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001dc: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001dd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001de: PUSH2 0x2bd8                   // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001e1: JUMP                           // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001e2: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001e3: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001e5: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001e6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001e7: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001e8: SUB                            // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001e9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001ea: RETURN                         // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001eb: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001ec: PUSH2 0x1f3                    // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001ef: PUSH2 0x17f1                   // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001f2: JUMP                           // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001f3: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001f4: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001f6: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001f7: PUSH2 0x200                    // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001fa: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001fb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001fc: PUSH2 0x2c7b                   // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001ff: JUMP                           // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00000200: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00000201: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00000203: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00000204: DUP1                           // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00000205: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00000206: SUB                            // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00000207: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00000208: RETURN                         // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00000209: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      0000020a: PUSH2 0x211                    // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      0000020d: PUSH2 0x18c5                   // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000210: JUMP                           // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000211: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000212: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000214: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000215: PUSH2 0x21e                    // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000218: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000219: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      0000021a: PUSH2 0x2d90                   // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      0000021d: JUMP                           // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      0000021e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      0000021f: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000221: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000222: DUP1                           // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000223: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000224: SUB                            // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000225: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00000226: RETURN                         // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
[001] 00000227: JUMPDEST                       // test/BasePaymaster.t.sol: 66:5-73:6 (2847-3296)
[001] 00000228: PUSH2 0x22f                    // test/BasePaymaster.t.sol: 66:5-73:6 (2847-3296)
[001] 0000022b: PUSH2 0x1a0c                   // test/BasePaymaster.t.sol: 66:5-73:6 (2847-3296)
[001] 0000022e: JUMP                           // test/BasePaymaster.t.sol: 66:5-73:6 (2847-3296)
[001] 0000022f: JUMPDEST                       // test/BasePaymaster.t.sol: 66:5-73:6 (2847-3296)
[001] 00000230: STOP                           // test/BasePaymaster.t.sol: 66:5-73:6 (2847-3296)
      00000231: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000232: PUSH2 0x239                    // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000235: PUSH2 0x1d24                   // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000238: JUMP                           // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000239: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000023a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000023c: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000023d: PUSH2 0x246                    // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000240: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000241: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000242: PUSH2 0x2d90                   // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000245: JUMP                           // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000246: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000247: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000249: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000024a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000024b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000024c: SUB                            // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000024d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000024e: RETURN                         // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000024f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000250: PUSH2 0x257                    // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000253: PUSH2 0x1e6b                   // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000256: JUMP                           // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000257: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000258: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000025a: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000025b: PUSH2 0x264                    // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000025e: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000025f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000260: PUSH2 0x2c7b                   // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000263: JUMP                           // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000264: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000265: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000267: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000268: DUP1                           // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000269: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000026a: SUB                            // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000026b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000026c: RETURN                         // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000026d: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000026e: PUSH2 0x275                    // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000271: PUSH2 0x1f3f                   // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000274: JUMP                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000275: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000276: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000278: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000279: PUSH2 0x282                    // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000027c: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000027d: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000027e: PUSH2 0x2dca                   // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000281: JUMP                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000282: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000283: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000285: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000286: DUP1                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000287: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000288: SUB                            // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000289: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000028a: RETURN                         // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000028b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000028c: PUSH2 0x293                    // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000028f: PUSH2 0x2053                   // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000292: JUMP                           // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000293: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000294: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000296: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000297: PUSH2 0x2a0                    // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000029a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000029b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000029c: PUSH2 0x279a                   // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000029f: JUMP                           // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      000002a0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      000002a1: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      000002a3: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      000002a4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      000002a5: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      000002a6: SUB                            // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      000002a7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      000002a8: RETURN                         // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
[001] 000002a9: JUMPDEST                       // test/BasePaymaster.t.sol: 56:5-64:6 (2308-2841)
[001] 000002aa: PUSH2 0x2b1                    // test/BasePaymaster.t.sol: 56:5-64:6 (2308-2841)
[001] 000002ad: PUSH2 0x20de                   // test/BasePaymaster.t.sol: 56:5-64:6 (2308-2841)
[001] 000002b0: JUMP                           // test/BasePaymaster.t.sol: 56:5-64:6 (2308-2841)
[001] 000002b1: JUMPDEST                       // test/BasePaymaster.t.sol: 56:5-64:6 (2308-2841)
[001] 000002b2: STOP                           // test/BasePaymaster.t.sol: 56:5-64:6 (2308-2841)
      000002b3: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002b4: PUSH2 0x2bb                    // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002b7: PUSH2 0x247e                   // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002ba: JUMP                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002bb: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002bc: PUSH1 0x40                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002be: MLOAD                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002bf: PUSH2 0x2c8                    // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002c2: SWAP2                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002c3: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002c4: PUSH2 0x2dca                   // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002c7: JUMP                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002c8: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002c9: PUSH1 0x40                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002cb: MLOAD                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002cc: DUP1                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002cd: SWAP2                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002ce: SUB                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002cf: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002d0: RETURN                         // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
[001] 000002d1: JUMPDEST                       // test/BasePaymaster.t.sol: 47:5-49:6 (1911-2019)
[001] 000002d2: PUSH0                          // test/BasePaymaster.t.sol: 48:42-48:43 (1997-1998)
[001] 000002d3: PUSH1 0x1                      // test/BasePaymaster.t.sol: 48:54-48:55 (2009-2010)
[001] 000002d5: PUSH1 0x40                     // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002d7: MLOAD                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002d8: PUSH2 0x2e0                    // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002db: SWAP1                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002dc: PUSH2 0x2689                   // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002df: JUMP                           // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002e0: JUMPDEST                       // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002e1: PUSH2 0x2eb                    // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002e4: SWAP3                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002e5: SWAP2                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002e6: SWAP1                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002e7: PUSH2 0x2df2                   // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002ea: JUMP                           // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002eb: JUMPDEST                       // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002ec: PUSH1 0x40                     // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002ee: MLOAD                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002ef: DUP1                           // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f0: SWAP2                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f1: SUB                            // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f2: SWAP1                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f3: PUSH0                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f4: CREATE                         // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f5: DUP1                           // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f6: ISZERO                         // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f7: DUP1                           // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f8: ISZERO                         // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002f9: PUSH2 0x304                    // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 000002fc: JUMPI                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
      000002fd: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
      000002fe: PUSH0                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
      000002ff: DUP1                           // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
      00000300: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
      00000301: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
      00000302: PUSH0                          // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
      00000303: REVERT                         // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 00000304: JUMPDEST                       // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 00000305: POP                            // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 00000306: POP                            // test/BasePaymaster.t.sol: 48:9-48:57 (1964-2012)
[001] 00000307: JUMP                           // test/BasePaymaster.t.sol: 47:5-49:6 (1911-2019)
[006] 00000308: JUMPDEST                       // test/BasePaymaster.t.sol: 33:5-45:6 (1338-1905)
[006] 00000309: PUSH2 0x346                    // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 0000030c: PUSH1 0x40                     // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 0000030e: MLOAD                          // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 0000030f: DUP1                           // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000310: PUSH1 0x40                     // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000312: ADD                            // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000313: PUSH1 0x40                     // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000315: MSTORE                         // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000316: DUP1                           // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000317: PUSH1 0xb                      // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000319: DUP2                           // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 0000031a: MSTORE                         // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 0000031b: PUSH1 0x20                     // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 0000031d: ADD                            // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 0000031e: PUSH32 0x62656e6566696369617279000000000000000000000000000000000000000000 // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 0000033f: DUP2                           // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000340: MSTORE                         // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000341: POP                            // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000342: PUSH2 0x2490                   // test/BasePaymaster.t.sol: 34:31-34:39 (1396-1404)
[006] 00000345: JUMP                           // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000346: JUMPDEST                       // test/BasePaymaster.t.sol: 34:31-34:54 (1396-1419)
[006] 00000347: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 34:9-34:20 (1374-1385)
[006] 00000349: PUSH1 0x1                      // test/BasePaymaster.t.sol: 34:9-34:20 (1374-1385)
[006] 0000034b: PUSH2 0x100                    // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 0000034e: EXP                            // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 0000034f: DUP2                           // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000350: SLOAD                          // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000351: DUP2                           // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000352: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000367: MUL                            // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000368: NOT                            // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000369: AND                            // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 0000036a: SWAP1                          // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 0000036b: DUP4                           // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 0000036c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000381: AND                            // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000382: MUL                            // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000383: OR                             // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000384: SWAP1                          // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000385: SSTORE                         // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000386: POP                            // test/BasePaymaster.t.sol: 34:9-34:55 (1374-1420)
[006] 00000387: PUSH2 0x3c4                    // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 0000038a: PUSH1 0x40                     // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 0000038c: MLOAD                          // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 0000038d: DUP1                           // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 0000038e: PUSH1 0x40                     // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 00000390: ADD                            // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 00000391: PUSH1 0x40                     // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 00000393: MSTORE                         // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 00000394: DUP1                           // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 00000395: PUSH1 0xe                      // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 00000397: DUP2                           // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 00000398: MSTORE                         // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 00000399: PUSH1 0x20                     // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 0000039b: ADD                            // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 0000039c: PUSH32 0x7061796d61737465724f776e6572000000000000000000000000000000000000 // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 000003bd: DUP2                           // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 000003be: MSTORE                         // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 000003bf: POP                            // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 000003c0: PUSH2 0x24a4                   // test/BasePaymaster.t.sol: 35:47-35:61 (1468-1482)
[006] 000003c3: JUMP                           // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 000003c4: JUMPDEST                       // test/BasePaymaster.t.sol: 35:47-35:79 (1468-1500)
[006] 000003c5: PUSH1 0x20                     // test/BasePaymaster.t.sol: 35:10-35:24 (1431-1445)
[006] 000003c7: PUSH0                          // test/BasePaymaster.t.sol: 35:10-35:24 (1431-1445)
[006] 000003c8: PUSH1 0x21                     // test/BasePaymaster.t.sol: 35:26-35:43 (1447-1464)
[006] 000003ca: PUSH0                          // test/BasePaymaster.t.sol: 35:26-35:43 (1447-1464)
[006] 000003cb: DUP5                           // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003cc: SWAP2                          // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003cd: SWAP1                          // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003ce: POP                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003cf: SSTORE                         // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003d0: DUP4                           // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003d1: SWAP2                          // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003d2: SWAP1                          // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003d3: PUSH2 0x100                    // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003d6: EXP                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003d7: DUP2                           // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003d8: SLOAD                          // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003d9: DUP2                           // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003da: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003ef: MUL                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003f0: NOT                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003f1: AND                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003f2: SWAP1                          // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003f3: DUP4                           // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 000003f4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 00000409: AND                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 0000040a: MUL                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 0000040b: OR                             // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 0000040c: SWAP1                          // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 0000040d: SSTORE                         // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 0000040e: POP                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 0000040f: POP                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 00000410: POP                            // test/BasePaymaster.t.sol: 35:9-35:79 (1430-1500)
[006] 00000411: PUSH2 0x44e                    // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000414: PUSH1 0x40                     // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000416: MLOAD                          // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000417: DUP1                           // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000418: PUSH1 0x40                     // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 0000041a: ADD                            // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 0000041b: PUSH1 0x40                     // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 0000041d: MSTORE                         // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 0000041e: DUP1                           // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 0000041f: PUSH1 0x4                      // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000421: DUP2                           // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000422: MSTORE                         // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000423: PUSH1 0x20                     // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000425: ADD                            // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000426: PUSH32 0x7573657200000000000000000000000000000000000000000000000000000000 // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000447: DUP2                           // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000448: MSTORE                         // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 00000449: POP                            // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 0000044a: PUSH2 0x24a4                   // test/BasePaymaster.t.sol: 36:27-36:41 (1528-1542)
[006] 0000044d: JUMP                           // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 0000044e: JUMPDEST                       // test/BasePaymaster.t.sol: 36:27-36:49 (1528-1550)
[006] 0000044f: PUSH1 0x22                     // test/BasePaymaster.t.sol: 36:10-36:14 (1511-1515)
[006] 00000451: PUSH0                          // test/BasePaymaster.t.sol: 36:10-36:14 (1511-1515)
[006] 00000452: PUSH1 0x23                     // test/BasePaymaster.t.sol: 36:16-36:23 (1517-1524)
[006] 00000454: PUSH0                          // test/BasePaymaster.t.sol: 36:16-36:23 (1517-1524)
[006] 00000455: DUP5                           // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000456: SWAP2                          // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000457: SWAP1                          // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000458: POP                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000459: SSTORE                         // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000045a: DUP4                           // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000045b: SWAP2                          // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000045c: SWAP1                          // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000045d: PUSH2 0x100                    // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000460: EXP                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000461: DUP2                           // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000462: SLOAD                          // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000463: DUP2                           // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000464: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000479: MUL                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000047a: NOT                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000047b: AND                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000047c: SWAP1                          // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000047d: DUP4                           // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000047e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000493: AND                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000494: MUL                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000495: OR                             // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000496: SWAP1                          // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000497: SSTORE                         // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000498: POP                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 00000499: POP                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000049a: POP                            // test/BasePaymaster.t.sol: 36:9-36:49 (1510-1550)
[006] 0000049b: PUSH1 0x40                     // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 0000049d: MLOAD                          // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 0000049e: PUSH2 0x4a6                    // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004a1: SWAP1                          // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004a2: PUSH2 0x2697                   // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004a5: JUMP                           // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004a6: JUMPDEST                       // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004a7: PUSH1 0x40                     // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004a9: MLOAD                          // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004aa: DUP1                           // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004ab: SWAP2                          // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004ac: SUB                            // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004ad: SWAP1                          // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004ae: PUSH0                          // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004af: CREATE                         // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004b0: DUP1                           // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004b1: ISZERO                         // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004b2: DUP1                           // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004b3: ISZERO                         // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004b4: PUSH2 0x4bf                    // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004b7: JUMPI                          // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
      000004b8: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
      000004b9: PUSH0                          // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
      000004ba: DUP1                           // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
      000004bb: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
      000004bc: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
      000004bd: PUSH0                          // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
      000004be: REVERT                         // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004bf: JUMPDEST                       // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004c0: POP                            // test/BasePaymaster.t.sol: 38:22-38:38 (1574-1590)
[006] 000004c1: PUSH1 0x27                     // test/BasePaymaster.t.sol: 38:9-38:19 (1561-1571)
[006] 000004c3: PUSH0                          // test/BasePaymaster.t.sol: 38:9-38:19 (1561-1571)
[006] 000004c4: PUSH2 0x100                    // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004c7: EXP                            // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004c8: DUP2                           // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004c9: SLOAD                          // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004ca: DUP2                           // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004cb: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004e0: MUL                            // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004e1: NOT                            // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004e2: AND                            // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004e3: SWAP1                          // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004e4: DUP4                           // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004e5: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004fa: AND                            // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004fb: MUL                            // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004fc: OR                             // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004fd: SWAP1                          // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004fe: SSTORE                         // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 000004ff: POP                            // test/BasePaymaster.t.sol: 38:9-38:38 (1561-1590)
[006] 00000500: PUSH1 0x27                     // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 00000502: PUSH0                          // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 00000503: SWAP1                          // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 00000504: SLOAD                          // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 00000505: SWAP1                          // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 00000506: PUSH2 0x100                    // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 00000509: EXP                            // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 0000050a: SWAP1                          // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 0000050b: DIV                            // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 0000050c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 00000521: AND                            // test/BasePaymaster.t.sol: 39:51-39:61 (1642-1652)
[006] 00000522: PUSH1 0x40                     // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000524: MLOAD                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000525: PUSH2 0x52d                    // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000528: SWAP1                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000529: PUSH2 0x26a5                   // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 0000052c: JUMP                           // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 0000052d: JUMPDEST                       // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 0000052e: PUSH2 0x537                    // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000531: SWAP2                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000532: SWAP1                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000533: PUSH2 0x2e74                   // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000536: JUMP                           // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000537: JUMPDEST                       // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000538: PUSH1 0x40                     // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 0000053a: MLOAD                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 0000053b: DUP1                           // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 0000053c: SWAP2                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 0000053d: SUB                            // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 0000053e: SWAP1                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 0000053f: PUSH0                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000540: CREATE                         // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000541: DUP1                           // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000542: ISZERO                         // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000543: DUP1                           // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000544: ISZERO                         // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000545: PUSH2 0x550                    // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000548: JUMPI                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
      00000549: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
      0000054a: PUSH0                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
      0000054b: DUP1                           // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
      0000054c: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
      0000054d: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
      0000054e: PUSH0                          // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
      0000054f: REVERT                         // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000550: JUMPDEST                       // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000551: POP                            // test/BasePaymaster.t.sol: 39:26-39:62 (1617-1653)
[006] 00000552: PUSH1 0x25                     // test/BasePaymaster.t.sol: 39:9-39:23 (1600-1614)
[006] 00000554: PUSH0                          // test/BasePaymaster.t.sol: 39:9-39:23 (1600-1614)
[006] 00000555: PUSH2 0x100                    // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000558: EXP                            // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000559: DUP2                           // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 0000055a: SLOAD                          // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 0000055b: DUP2                           // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 0000055c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000571: MUL                            // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000572: NOT                            // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000573: AND                            // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000574: SWAP1                          // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000575: DUP4                           // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000576: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 0000058b: AND                            // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 0000058c: MUL                            // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 0000058d: OR                             // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 0000058e: SWAP1                          // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 0000058f: SSTORE                         // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000590: POP                            // test/BasePaymaster.t.sol: 39:9-39:62 (1600-1653)
[006] 00000591: PUSH1 0x25                     // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 00000593: PUSH0                          // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 00000594: SWAP1                          // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 00000595: SLOAD                          // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 00000596: SWAP1                          // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 00000597: PUSH2 0x100                    // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 0000059a: EXP                            // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 0000059b: SWAP1                          // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 0000059c: DIV                            // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 0000059d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 000005b2: AND                            // test/BasePaymaster.t.sol: 40:19-40:33 (1673-1687)
[006] 000005b3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 40:19-40:47 (1673-1701)
[006] 000005c8: AND                            // test/BasePaymaster.t.sol: 40:19-40:47 (1673-1701)
[006] 000005c9: PUSH4 0x5fbfb9cf               // test/BasePaymaster.t.sol: 40:19-40:47 (1673-1701)
[006] 000005ce: PUSH1 0x22                     // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005d0: PUSH0                          // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005d1: SWAP1                          // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005d2: SLOAD                          // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005d3: SWAP1                          // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005d4: PUSH2 0x100                    // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005d7: EXP                            // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005d8: SWAP1                          // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005d9: DIV                            // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005da: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005ef: AND                            // test/BasePaymaster.t.sol: 40:48-40:52 (1702-1706)
[006] 000005f0: PUSH0                          // test/BasePaymaster.t.sol: 40:54-40:55 (1708-1709)
[006] 000005f1: PUSH1 0x40                     // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 000005f3: MLOAD                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 000005f4: DUP4                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 000005f5: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 000005fa: AND                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 000005fb: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 000005fd: SHL                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 000005fe: DUP2                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 000005ff: MSTORE                         // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000600: PUSH1 0x4                      // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000602: ADD                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000603: PUSH2 0x60d                    // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000606: SWAP3                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000607: SWAP2                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000608: SWAP1                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000609: PUSH2 0x2ecf                   // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000060c: JUMP                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000060d: JUMPDEST                       // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000060e: PUSH1 0x20                     // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000610: PUSH1 0x40                     // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000612: MLOAD                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000613: DUP1                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000614: DUP4                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000615: SUB                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000616: DUP2                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000617: PUSH0                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000618: DUP8                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000619: GAS                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000061a: CALL                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000061b: ISZERO                         // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000061c: DUP1                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000061d: ISZERO                         // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000061e: PUSH2 0x629                    // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000621: JUMPI                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
      00000622: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
      00000623: PUSH0                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
      00000624: DUP1                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
      00000625: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
      00000626: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
      00000627: PUSH0                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
      00000628: REVERT                         // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000629: JUMPDEST                       // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000062a: POP                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000062b: POP                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000062c: POP                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000062d: POP                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000062e: PUSH1 0x40                     // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000630: MLOAD                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000631: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000632: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000634: NOT                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000635: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000637: DUP3                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000638: ADD                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000639: AND                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000063a: DUP3                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000063b: ADD                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000063c: DUP1                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000063d: PUSH1 0x40                     // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000063f: MSTORE                         // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000640: POP                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000641: DUP2                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000642: ADD                            // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000643: SWAP1                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000644: PUSH2 0x64d                    // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000647: SWAP2                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000648: SWAP1                          // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 00000649: PUSH2 0x2f4f                   // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000064c: JUMP                           // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000064d: JUMPDEST                       // test/BasePaymaster.t.sol: 40:19-40:56 (1673-1710)
[006] 0000064e: PUSH1 0x26                     // test/BasePaymaster.t.sol: 40:9-40:16 (1663-1670)
[006] 00000650: PUSH0                          // test/BasePaymaster.t.sol: 40:9-40:16 (1663-1670)
[006] 00000651: PUSH2 0x100                    // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000654: EXP                            // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000655: DUP2                           // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000656: SLOAD                          // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000657: DUP2                           // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000658: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 0000066d: MUL                            // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 0000066e: NOT                            // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 0000066f: AND                            // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000670: SWAP1                          // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000671: DUP4                           // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000672: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000687: AND                            // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000688: MUL                            // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 00000689: OR                             // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 0000068a: SWAP1                          // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 0000068b: SSTORE                         // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 0000068c: POP                            // test/BasePaymaster.t.sol: 40:9-40:56 (1663-1710)
[006] 0000068d: PUSH1 0x27                     // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 0000068f: PUSH0                          // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 00000690: SWAP1                          // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 00000691: SLOAD                          // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 00000692: SWAP1                          // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 00000693: PUSH2 0x100                    // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 00000696: EXP                            // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 00000697: SWAP1                          // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 00000698: DIV                            // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 00000699: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 000006ae: AND                            // test/BasePaymaster.t.sol: 41:54-41:64 (1765-1775)
[006] 000006af: PUSH1 0x20                     // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006b1: PUSH0                          // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006b2: SWAP1                          // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006b3: SLOAD                          // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006b4: SWAP1                          // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006b5: PUSH2 0x100                    // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006b8: EXP                            // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006b9: SWAP1                          // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006ba: DIV                            // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006bb: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006d0: AND                            // test/BasePaymaster.t.sol: 41:67-41:81 (1778-1792)
[006] 000006d1: PUSH1 0x40                     // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006d3: MLOAD                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006d4: PUSH2 0x6dc                    // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006d7: SWAP1                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006d8: PUSH2 0x2689                   // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006db: JUMP                           // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006dc: JUMPDEST                       // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006dd: PUSH2 0x6e7                    // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006e0: SWAP3                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006e1: SWAP2                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006e2: SWAP1                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006e3: PUSH2 0x2df2                   // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006e6: JUMP                           // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006e7: JUMPDEST                       // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006e8: PUSH1 0x40                     // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006ea: MLOAD                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006eb: DUP1                           // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006ec: SWAP2                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006ed: SUB                            // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006ee: SWAP1                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006ef: PUSH0                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006f0: CREATE                         // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006f1: DUP1                           // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006f2: ISZERO                         // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006f3: DUP1                           // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006f4: ISZERO                         // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006f5: PUSH2 0x700                    // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 000006f8: JUMPI                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
      000006f9: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
      000006fa: PUSH0                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
      000006fb: DUP1                           // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
      000006fc: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
      000006fd: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
      000006fe: PUSH0                          // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
      000006ff: REVERT                         // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 00000700: JUMPDEST                       // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 00000701: POP                            // test/BasePaymaster.t.sol: 41:21-41:82 (1732-1793)
[006] 00000702: PUSH1 0x24                     // test/BasePaymaster.t.sol: 41:9-41:18 (1720-1729)
[006] 00000704: PUSH0                          // test/BasePaymaster.t.sol: 41:9-41:18 (1720-1729)
[006] 00000705: PUSH2 0x100                    // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000708: EXP                            // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000709: DUP2                           // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 0000070a: SLOAD                          // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 0000070b: DUP2                           // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 0000070c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000721: MUL                            // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000722: NOT                            // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000723: AND                            // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000724: SWAP1                          // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000725: DUP4                           // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000726: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 0000073b: AND                            // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 0000073c: MUL                            // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 0000073d: OR                             // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 0000073e: SWAP1                          // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 0000073f: SSTORE                         // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000740: POP                            // test/BasePaymaster.t.sol: 41:9-41:82 (1720-1793)
[006] 00000741: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[006] 00000762: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[006] 00000763: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[006] 00000764: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 43:9-43:16 (1804-1811)
[006] 00000779: AND                            // test/BasePaymaster.t.sol: 43:9-43:16 (1804-1811)
[006] 0000077a: PUSH4 0xc88a5e6d               // test/BasePaymaster.t.sol: 43:9-43:16 (1804-1811)
[006] 0000077f: PUSH1 0x20                     // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 00000781: PUSH0                          // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 00000782: SWAP1                          // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 00000783: SLOAD                          // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 00000784: SWAP1                          // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 00000785: PUSH2 0x100                    // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 00000788: EXP                            // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 00000789: SWAP1                          // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 0000078a: DIV                            // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 0000078b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 000007a0: AND                            // test/BasePaymaster.t.sol: 43:17-43:31 (1812-1826)
[006] 000007a1: PUSH9 0x56bc75e2d63100000      // test/BasePaymaster.t.sol: 43:33-43:39 (1828-1834)
[006] 000007ab: PUSH1 0x40                     // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007ad: MLOAD                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007ae: DUP4                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007af: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007b4: AND                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007b5: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007b7: SHL                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007b8: DUP2                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007b9: MSTORE                         // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007ba: PUSH1 0x4                      // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007bc: ADD                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007bd: PUSH2 0x7c7                    // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007c0: SWAP3                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007c1: SWAP2                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007c2: SWAP1                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007c3: PUSH2 0x2fb3                   // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007c6: JUMP                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007c7: JUMPDEST                       // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007c8: PUSH0                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007c9: PUSH1 0x40                     // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007cb: MLOAD                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007cc: DUP1                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007cd: DUP4                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007ce: SUB                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007cf: DUP2                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007d0: PUSH0                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007d1: DUP8                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007d2: DUP1                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007d3: EXTCODESIZE                    // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007d4: ISZERO                         // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007d5: DUP1                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007d6: ISZERO                         // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007d7: PUSH2 0x7de                    // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007da: JUMPI                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007db: PUSH0                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007dc: DUP1                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007dd: REVERT                         // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007de: JUMPDEST                       // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007df: POP                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007e0: GAS                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007e1: CALL                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007e2: ISZERO                         // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007e3: DUP1                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007e4: ISZERO                         // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007e5: PUSH2 0x7f0                    // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007e8: JUMPI                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007e9: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007ea: PUSH0                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007eb: DUP1                           // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007ec: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007ed: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007ee: PUSH0                          // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
      000007ef: REVERT                         // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007f0: JUMPDEST                       // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007f1: POP                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007f2: POP                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007f3: POP                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007f4: POP                            // test/BasePaymaster.t.sol: 43:9-43:40 (1804-1835)
[006] 000007f5: PUSH1 0x24                     // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 000007f7: PUSH0                          // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 000007f8: SWAP1                          // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 000007f9: SLOAD                          // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 000007fa: SWAP1                          // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 000007fb: PUSH2 0x100                    // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 000007fe: EXP                            // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 000007ff: SWAP1                          // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 00000800: DIV                            // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 00000801: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 00000816: AND                            // test/BasePaymaster.t.sol: 44:9-44:18 (1845-1854)
[006] 00000817: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 44:9-44:26 (1845-1862)
[006] 0000082c: AND                            // test/BasePaymaster.t.sol: 44:9-44:26 (1845-1862)
[006] 0000082d: PUSH4 0xd0e30db0               // test/BasePaymaster.t.sol: 44:9-44:26 (1845-1862)
[006] 00000832: PUSH32 0x56bc75e2d63100000     // test/BasePaymaster.t.sol: 44:34-44:59 (1870-1895)
[006] 00000853: PUSH1 0x40                     // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000855: MLOAD                          // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000856: DUP3                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000857: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000085c: AND                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000085d: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000085f: SHL                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000860: DUP2                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000861: MSTORE                         // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000862: PUSH1 0x4                      // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000864: ADD                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000865: PUSH0                          // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000866: PUSH1 0x40                     // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000868: MLOAD                          // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000869: DUP1                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000086a: DUP4                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000086b: SUB                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000086c: DUP2                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000086d: DUP6                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000086e: DUP9                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000086f: DUP1                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000870: EXTCODESIZE                    // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000871: ISZERO                         // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000872: DUP1                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000873: ISZERO                         // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000874: PUSH2 0x87b                    // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000877: JUMPI                          // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      00000878: PUSH0                          // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      00000879: DUP1                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      0000087a: REVERT                         // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000087b: JUMPDEST                       // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000087c: POP                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000087d: GAS                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000087e: CALL                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000087f: ISZERO                         // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000880: DUP1                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000881: ISZERO                         // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000882: PUSH2 0x88d                    // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000885: JUMPI                          // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      00000886: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      00000887: PUSH0                          // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      00000888: DUP1                           // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      00000889: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      0000088a: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      0000088b: PUSH0                          // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
      0000088c: REVERT                         // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000088d: JUMPDEST                       // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000088e: POP                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 0000088f: POP                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000890: POP                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000891: POP                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000892: POP                            // test/BasePaymaster.t.sol: 44:9-44:62 (1845-1898)
[006] 00000893: JUMP                           // test/BasePaymaster.t.sol: 33:5-45:6 (1338-1905)
[001] 00000894: JUMPDEST                       // test/BasePaymaster.t.sol: 75:5-88:6 (3302-4059)
[001] 00000895: PUSH0                          // test/BasePaymaster.t.sol: 76:9-76:29 (3356-3376)
[001] 00000896: PUSH8 0xde0b6b3a7640000        // test/BasePaymaster.t.sol: 76:32-76:36 (3379-3383)
[001] 0000089f: SWAP1                          // test/BasePaymaster.t.sol: 76:9-76:36 (3356-3383)
[001] 000008a0: POP                            // test/BasePaymaster.t.sol: 76:9-76:36 (3356-3383)
[001] 000008a1: PUSH0                          // test/BasePaymaster.t.sol: 77:9-77:29 (3393-3413)
[001] 000008a2: PUSH1 0xa                      // test/BasePaymaster.t.sol: 77:32-77:34 (3416-3418)
[001] 000008a4: SWAP1                          // test/BasePaymaster.t.sol: 77:9-77:34 (3393-3418)
[001] 000008a5: POP                            // test/BasePaymaster.t.sol: 77:9-77:34 (3393-3418)
[001] 000008a6: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 000008c7: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000008c8: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000008c9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 78:9-78:22 (3428-3441)
[001] 000008de: AND                            // test/BasePaymaster.t.sol: 78:9-78:22 (3428-3441)
[001] 000008df: PUSH4 0x6447d56                // test/BasePaymaster.t.sol: 78:9-78:22 (3428-3441)
[001] 000008e4: PUSH1 0x20                     // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 000008e6: PUSH0                          // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 000008e7: SWAP1                          // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 000008e8: SLOAD                          // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 000008e9: SWAP1                          // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 000008ea: PUSH2 0x100                    // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 000008ed: EXP                            // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 000008ee: SWAP1                          // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 000008ef: DIV                            // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 000008f0: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 00000905: AND                            // test/BasePaymaster.t.sol: 78:23-78:37 (3442-3456)
[001] 00000906: PUSH1 0x40                     // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000908: MLOAD                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000909: DUP3                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000090a: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000090f: AND                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000910: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000912: SHL                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000913: DUP2                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000914: MSTORE                         // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000915: PUSH1 0x4                      // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000917: ADD                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000918: PUSH2 0x921                    // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000091b: SWAP2                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000091c: SWAP1                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000091d: PUSH2 0x2fda                   // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000920: JUMP                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000921: JUMPDEST                       // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000922: PUSH0                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000923: PUSH1 0x40                     // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000925: MLOAD                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000926: DUP1                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000927: DUP4                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000928: SUB                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000929: DUP2                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000092a: PUSH0                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000092b: DUP8                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000092c: DUP1                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000092d: EXTCODESIZE                    // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000092e: ISZERO                         // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000092f: DUP1                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000930: ISZERO                         // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000931: PUSH2 0x938                    // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000934: JUMPI                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000935: PUSH0                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000936: DUP1                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000937: REVERT                         // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000938: JUMPDEST                       // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000939: POP                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000093a: GAS                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000093b: CALL                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000093c: ISZERO                         // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000093d: DUP1                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000093e: ISZERO                         // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000093f: PUSH2 0x94a                    // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 00000942: JUMPI                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000943: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000944: PUSH0                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000945: DUP1                           // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000946: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000947: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000948: PUSH0                          // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
      00000949: REVERT                         // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000094a: JUMPDEST                       // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000094b: POP                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000094c: POP                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000094d: POP                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000094e: POP                            // test/BasePaymaster.t.sol: 78:9-78:38 (3428-3457)
[001] 0000094f: PUSH1 0x24                     // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 00000951: PUSH0                          // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 00000952: SWAP1                          // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 00000953: SLOAD                          // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 00000954: SWAP1                          // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 00000955: PUSH2 0x100                    // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 00000958: EXP                            // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 00000959: SWAP1                          // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 0000095a: DIV                            // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 0000095b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 00000970: AND                            // test/BasePaymaster.t.sol: 79:23-79:32 (3481-3490)
[001] 00000971: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 79:9-79:42 (3467-3500)
[001] 00000986: AND                            // test/BasePaymaster.t.sol: 79:9-79:42 (3467-3500)
[001] 00000987: PUSH4 0x396cb60                // test/BasePaymaster.t.sol: 79:9-79:42 (3467-3500)
[001] 0000098c: DUP4                           // test/BasePaymaster.t.sol: 79:50-79:62 (3508-3520)
[001] 0000098d: DUP4                           // test/BasePaymaster.t.sol: 79:64-79:77 (3522-3535)
[001] 0000098e: PUSH1 0x40                     // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 00000990: MLOAD                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 00000991: DUP4                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 00000992: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 00000997: AND                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 00000998: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 0000099a: SHL                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 0000099b: DUP2                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 0000099c: MSTORE                         // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 0000099d: PUSH1 0x4                      // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 0000099f: ADD                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009a0: PUSH2 0x9a9                    // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009a3: SWAP2                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009a4: SWAP1                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009a5: PUSH2 0x3011                   // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009a8: JUMP                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009a9: JUMPDEST                       // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009aa: PUSH0                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009ab: PUSH1 0x40                     // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009ad: MLOAD                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009ae: DUP1                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009af: DUP4                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b0: SUB                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b1: DUP2                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b2: DUP6                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b3: DUP9                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b4: DUP1                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b5: EXTCODESIZE                    // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b6: ISZERO                         // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b7: DUP1                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b8: ISZERO                         // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009b9: PUSH2 0x9c0                    // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009bc: JUMPI                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009bd: PUSH0                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009be: DUP1                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009bf: REVERT                         // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009c0: JUMPDEST                       // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009c1: POP                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009c2: GAS                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009c3: CALL                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009c4: ISZERO                         // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009c5: DUP1                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009c6: ISZERO                         // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009c7: PUSH2 0x9d2                    // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009ca: JUMPI                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009cb: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009cc: PUSH0                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009cd: DUP1                           // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009ce: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009cf: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009d0: PUSH0                          // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
      000009d1: REVERT                         // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009d2: JUMPDEST                       // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009d3: POP                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009d4: POP                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009d5: POP                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009d6: POP                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009d7: POP                            // test/BasePaymaster.t.sol: 79:9-79:78 (3467-3536)
[001] 000009d8: PUSH1 0x24                     // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009da: PUSH0                          // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009db: SWAP1                          // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009dc: SLOAD                          // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009dd: SWAP1                          // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009de: PUSH2 0x100                    // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009e1: EXP                            // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009e2: SWAP1                          // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009e3: DIV                            // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009e4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009f9: AND                            // test/BasePaymaster.t.sol: 80:23-80:32 (3560-3569)
[001] 000009fa: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 80:9-80:45 (3546-3582)
[001] 00000a0f: AND                            // test/BasePaymaster.t.sol: 80:9-80:45 (3546-3582)
[001] 00000a10: PUSH4 0xbb9fe6bf               // test/BasePaymaster.t.sol: 80:9-80:45 (3546-3582)
[001] 00000a15: PUSH1 0x40                     // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a17: MLOAD                          // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a18: DUP2                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a19: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a1e: AND                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a1f: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a21: SHL                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a22: DUP2                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a23: MSTORE                         // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a24: PUSH1 0x4                      // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a26: ADD                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a27: PUSH0                          // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a28: PUSH1 0x40                     // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a2a: MLOAD                          // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a2b: DUP1                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a2c: DUP4                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a2d: SUB                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a2e: DUP2                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a2f: PUSH0                          // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a30: DUP8                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a31: DUP1                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a32: EXTCODESIZE                    // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a33: ISZERO                         // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a34: DUP1                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a35: ISZERO                         // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a36: PUSH2 0xa3d                    // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a39: JUMPI                          // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a3a: PUSH0                          // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a3b: DUP1                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a3c: REVERT                         // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a3d: JUMPDEST                       // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a3e: POP                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a3f: GAS                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a40: CALL                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a41: ISZERO                         // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a42: DUP1                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a43: ISZERO                         // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a44: PUSH2 0xa4f                    // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a47: JUMPI                          // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a48: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a49: PUSH0                          // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a4a: DUP1                           // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a4b: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a4c: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a4d: PUSH0                          // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
      00000a4e: REVERT                         // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a4f: JUMPDEST                       // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a50: POP                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a51: POP                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a52: POP                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a53: POP                            // test/BasePaymaster.t.sol: 80:9-80:47 (3546-3584)
[001] 00000a54: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000a75: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000a76: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000a77: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 81:9-81:16 (3594-3601)
[001] 00000a8c: AND                            // test/BasePaymaster.t.sol: 81:9-81:16 (3594-3601)
[001] 00000a8d: PUSH4 0xe5d6bf02               // test/BasePaymaster.t.sol: 81:9-81:16 (3594-3601)
[001] 00000a92: DUP3                           // test/BasePaymaster.t.sol: 81:35-81:48 (3620-3633)
[001] 00000a93: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 81:17-81:48 (3602-3633)
[001] 00000a98: AND                            // test/BasePaymaster.t.sol: 81:17-81:48 (3602-3633)
[001] 00000a99: TIMESTAMP                      // test/BasePaymaster.t.sol: 81:17-81:32 (3602-3617)
[001] 00000a9a: PUSH2 0xaa3                    // test/BasePaymaster.t.sol: 81:17-81:48 (3602-3633)
[001] 00000a9d: SWAP2                          // test/BasePaymaster.t.sol: 81:17-81:48 (3602-3633)
[001] 00000a9e: SWAP1                          // test/BasePaymaster.t.sol: 81:17-81:48 (3602-3633)
[001] 00000a9f: PUSH2 0x3057                   // test/BasePaymaster.t.sol: 81:17-81:48 (3602-3633)
[001] 00000aa2: JUMP                           // test/BasePaymaster.t.sol: 81:17-81:48 (3602-3633)
[001] 00000aa3: JUMPDEST                       // test/BasePaymaster.t.sol: 81:17-81:48 (3602-3633)
[001] 00000aa4: PUSH1 0x40                     // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aa6: MLOAD                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aa7: DUP3                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aa8: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aad: AND                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aae: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ab0: SHL                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ab1: DUP2                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ab2: MSTORE                         // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ab3: PUSH1 0x4                      // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ab5: ADD                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ab6: PUSH2 0xabf                    // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ab9: SWAP2                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aba: SWAP1                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000abb: PUSH2 0x3099                   // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000abe: JUMP                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000abf: JUMPDEST                       // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ac0: PUSH0                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ac1: PUSH1 0x40                     // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ac3: MLOAD                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ac4: DUP1                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ac5: DUP4                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ac6: SUB                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ac7: DUP2                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ac8: PUSH0                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ac9: DUP8                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aca: DUP1                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000acb: EXTCODESIZE                    // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000acc: ISZERO                         // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000acd: DUP1                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ace: ISZERO                         // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000acf: PUSH2 0xad6                    // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ad2: JUMPI                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ad3: PUSH0                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ad4: DUP1                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ad5: REVERT                         // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ad6: JUMPDEST                       // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ad7: POP                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ad8: GAS                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ad9: CALL                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ada: ISZERO                         // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000adb: DUP1                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000adc: ISZERO                         // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000add: PUSH2 0xae8                    // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ae0: JUMPI                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ae1: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ae2: PUSH0                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ae3: DUP1                           // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ae4: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ae5: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ae6: PUSH0                          // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
      00000ae7: REVERT                         // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ae8: JUMPDEST                       // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000ae9: POP                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aea: POP                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aeb: POP                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aec: POP                            // test/BasePaymaster.t.sol: 81:9-81:49 (3594-3634)
[001] 00000aed: PUSH1 0x24                     // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000aef: PUSH0                          // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000af0: SWAP1                          // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000af1: SLOAD                          // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000af2: SWAP1                          // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000af3: PUSH2 0x100                    // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000af6: EXP                            // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000af7: SWAP1                          // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000af8: DIV                            // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000af9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000b0e: AND                            // test/BasePaymaster.t.sol: 82:23-82:32 (3658-3667)
[001] 00000b0f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 82:9-82:47 (3644-3682)
[001] 00000b24: AND                            // test/BasePaymaster.t.sol: 82:9-82:47 (3644-3682)
[001] 00000b25: PUSH4 0xc23a5cea               // test/BasePaymaster.t.sol: 82:9-82:47 (3644-3682)
[001] 00000b2a: PUSH1 0x22                     // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b2c: PUSH0                          // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b2d: SWAP1                          // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b2e: SLOAD                          // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b2f: SWAP1                          // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b30: PUSH2 0x100                    // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b33: EXP                            // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b34: SWAP1                          // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b35: DIV                            // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b36: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b4b: AND                            // test/BasePaymaster.t.sol: 82:56-82:60 (3691-3695)
[001] 00000b4c: PUSH1 0x40                     // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b4e: MLOAD                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b4f: DUP3                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b50: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b55: AND                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b56: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b58: SHL                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b59: DUP2                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b5a: MSTORE                         // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b5b: PUSH1 0x4                      // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b5d: ADD                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b5e: PUSH2 0xb67                    // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b61: SWAP2                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b62: SWAP1                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b63: PUSH2 0x30c1                   // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b66: JUMP                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b67: JUMPDEST                       // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b68: PUSH0                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b69: PUSH1 0x40                     // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b6b: MLOAD                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b6c: DUP1                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b6d: DUP4                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b6e: SUB                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b6f: DUP2                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b70: PUSH0                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b71: DUP8                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b72: DUP1                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b73: EXTCODESIZE                    // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b74: ISZERO                         // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b75: DUP1                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b76: ISZERO                         // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b77: PUSH2 0xb7e                    // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b7a: JUMPI                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b7b: PUSH0                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b7c: DUP1                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b7d: REVERT                         // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b7e: JUMPDEST                       // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b7f: POP                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b80: GAS                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b81: CALL                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b82: ISZERO                         // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b83: DUP1                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b84: ISZERO                         // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b85: PUSH2 0xb90                    // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b88: JUMPI                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b89: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b8a: PUSH0                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b8b: DUP1                           // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b8c: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b8d: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b8e: PUSH0                          // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
      00000b8f: REVERT                         // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b90: JUMPDEST                       // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b91: POP                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b92: POP                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b93: POP                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b94: POP                            // test/BasePaymaster.t.sol: 82:9-82:62 (3644-3697)
[001] 00000b95: PUSH0                          // test/BasePaymaster.t.sol: 84:9-84:46 (3708-3745)
[001] 00000b96: PUSH1 0x27                     // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000b98: PUSH0                          // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000b99: SWAP1                          // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000b9a: SLOAD                          // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000b9b: SWAP1                          // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000b9c: PUSH2 0x100                    // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000b9f: EXP                            // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000ba0: SWAP1                          // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000ba1: DIV                            // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000ba2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000bb7: AND                            // test/BasePaymaster.t.sol: 84:63-84:73 (3762-3772)
[001] 00000bb8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 84:49-84:89 (3748-3788)
[001] 00000bcd: AND                            // test/BasePaymaster.t.sol: 84:49-84:89 (3748-3788)
[001] 00000bce: PUSH4 0x5287ce12               // test/BasePaymaster.t.sol: 84:49-84:89 (3748-3788)
[001] 00000bd3: PUSH1 0x24                     // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bd5: PUSH0                          // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bd6: SWAP1                          // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bd7: SLOAD                          // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bd8: SWAP1                          // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bd9: PUSH2 0x100                    // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bdc: EXP                            // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bdd: SWAP1                          // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bde: DIV                            // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bdf: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bf4: AND                            // test/BasePaymaster.t.sol: 84:98-84:107 (3797-3806)
[001] 00000bf5: PUSH1 0x40                     // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000bf7: MLOAD                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000bf8: DUP3                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000bf9: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000bfe: AND                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000bff: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c01: SHL                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c02: DUP2                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c03: MSTORE                         // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c04: PUSH1 0x4                      // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c06: ADD                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c07: PUSH2 0xc10                    // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c0a: SWAP2                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c0b: SWAP1                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c0c: PUSH2 0x2fda                   // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c0f: JUMP                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c10: JUMPDEST                       // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c11: PUSH1 0xa0                     // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c13: PUSH1 0x40                     // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c15: MLOAD                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c16: DUP1                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c17: DUP4                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c18: SUB                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c19: DUP2                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c1a: DUP7                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c1b: GAS                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c1c: STATICCALL                     // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c1d: ISZERO                         // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c1e: DUP1                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c1f: ISZERO                         // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c20: PUSH2 0xc2b                    // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c23: JUMPI                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
      00000c24: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
      00000c25: PUSH0                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
      00000c26: DUP1                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
      00000c27: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
      00000c28: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
      00000c29: PUSH0                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
      00000c2a: REVERT                         // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c2b: JUMPDEST                       // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c2c: POP                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c2d: POP                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c2e: POP                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c2f: POP                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c30: PUSH1 0x40                     // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c32: MLOAD                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c33: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c34: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c36: NOT                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c37: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c39: DUP3                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c3a: ADD                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c3b: AND                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c3c: DUP3                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c3d: ADD                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c3e: DUP1                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c3f: PUSH1 0x40                     // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c41: MSTORE                         // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c42: POP                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c43: DUP2                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c44: ADD                            // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c45: SWAP1                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c46: PUSH2 0xc4f                    // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c49: SWAP2                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c4a: SWAP1                          // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c4b: PUSH2 0x32db                   // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c4e: JUMP                           // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c4f: JUMPDEST                       // test/BasePaymaster.t.sol: 84:49-84:109 (3748-3808)
[001] 00000c50: SWAP1                          // test/BasePaymaster.t.sol: 84:9-84:109 (3708-3808)
[001] 00000c51: POP                            // test/BasePaymaster.t.sol: 84:9-84:109 (3708-3808)
[001] 00000c52: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000c73: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000c74: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000c75: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 85:9-85:23 (3818-3832)
[001] 00000c8a: AND                            // test/BasePaymaster.t.sol: 85:9-85:23 (3818-3832)
[001] 00000c8b: PUSH4 0x7ba04809               // test/BasePaymaster.t.sol: 85:9-85:23 (3818-3832)
[001] 00000c90: DUP3                           // test/BasePaymaster.t.sol: 85:24-85:28 (3833-3837)
[001] 00000c91: PUSH1 0x20                     // test/BasePaymaster.t.sol: 85:24-85:35 (3833-3844)
[001] 00000c93: ADD                            // test/BasePaymaster.t.sol: 85:24-85:35 (3833-3844)
[001] 00000c94: MLOAD                          // test/BasePaymaster.t.sol: 85:24-85:35 (3833-3844)
[001] 00000c95: PUSH1 0x40                     // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000c97: MLOAD                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000c98: DUP3                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000c99: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000c9e: AND                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000c9f: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000ca1: SHL                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000ca2: DUP2                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000ca3: MSTORE                         // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000ca4: PUSH1 0x4                      // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000ca6: ADD                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000ca7: PUSH2 0xcb0                    // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000caa: SWAP2                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cab: SWAP1                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cac: PUSH2 0x3360                   // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000caf: JUMP                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cb0: JUMPDEST                       // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cb1: PUSH0                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cb2: PUSH1 0x40                     // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cb4: MLOAD                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cb5: DUP1                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cb6: DUP4                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cb7: SUB                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cb8: DUP2                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cb9: DUP7                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cba: DUP1                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cbb: EXTCODESIZE                    // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cbc: ISZERO                         // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cbd: DUP1                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cbe: ISZERO                         // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cbf: PUSH2 0xcc6                    // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cc2: JUMPI                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cc3: PUSH0                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cc4: DUP1                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cc5: REVERT                         // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cc6: JUMPDEST                       // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cc7: POP                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cc8: GAS                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cc9: STATICCALL                     // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cca: ISZERO                         // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000ccb: DUP1                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000ccc: ISZERO                         // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000ccd: PUSH2 0xcd8                    // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cd0: JUMPI                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cd1: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cd2: PUSH0                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cd3: DUP1                           // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cd4: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cd5: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cd6: PUSH0                          // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
      00000cd7: REVERT                         // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cd8: JUMPDEST                       // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cd9: POP                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cda: POP                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cdb: POP                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cdc: POP                            // test/BasePaymaster.t.sol: 85:9-85:70 (3818-3879)
[001] 00000cdd: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000cfe: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000cff: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000d00: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 86:9-86:20 (3889-3900)
[001] 00000d15: AND                            // test/BasePaymaster.t.sol: 86:9-86:20 (3889-3900)
[001] 00000d16: PUSH4 0x88b44c85               // test/BasePaymaster.t.sol: 86:9-86:20 (3889-3900)
[001] 00000d1b: DUP3                           // test/BasePaymaster.t.sol: 86:21-86:25 (3901-3905)
[001] 00000d1c: PUSH1 0x40                     // test/BasePaymaster.t.sol: 86:21-86:31 (3901-3911)
[001] 00000d1e: ADD                            // test/BasePaymaster.t.sol: 86:21-86:31 (3901-3911)
[001] 00000d1f: MLOAD                          // test/BasePaymaster.t.sol: 86:21-86:31 (3901-3911)
[001] 00000d20: PUSH0                          // test/BasePaymaster.t.sol: 86:33-86:34 (3913-3914)
[001] 00000d21: PUSH1 0x40                     // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d23: MLOAD                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d24: DUP4                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d25: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d2a: AND                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d2b: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d2d: SHL                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d2e: DUP2                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d2f: MSTORE                         // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d30: PUSH1 0x4                      // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d32: ADD                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d33: PUSH2 0xd3d                    // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d36: SWAP3                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d37: SWAP2                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d38: SWAP1                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d39: PUSH2 0x342c                   // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d3c: JUMP                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d3d: JUMPDEST                       // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d3e: PUSH0                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d3f: PUSH1 0x40                     // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d41: MLOAD                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d42: DUP1                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d43: DUP4                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d44: SUB                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d45: DUP2                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d46: DUP7                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d47: DUP1                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d48: EXTCODESIZE                    // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d49: ISZERO                         // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d4a: DUP1                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d4b: ISZERO                         // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d4c: PUSH2 0xd53                    // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d4f: JUMPI                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d50: PUSH0                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d51: DUP1                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d52: REVERT                         // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d53: JUMPDEST                       // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d54: POP                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d55: GAS                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d56: STATICCALL                     // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d57: ISZERO                         // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d58: DUP1                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d59: ISZERO                         // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d5a: PUSH2 0xd65                    // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d5d: JUMPI                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d5e: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d5f: PUSH0                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d60: DUP1                           // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d61: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d62: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d63: PUSH0                          // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
      00000d64: REVERT                         // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d65: JUMPDEST                       // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d66: POP                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d67: POP                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d68: POP                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d69: POP                            // test/BasePaymaster.t.sol: 86:9-86:72 (3889-3952)
[001] 00000d6a: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000d8b: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000d8c: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000d8d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 87:9-87:20 (3962-3973)
[001] 00000da2: AND                            // test/BasePaymaster.t.sol: 87:9-87:20 (3962-3973)
[001] 00000da3: PUSH4 0x88b44c85               // test/BasePaymaster.t.sol: 87:9-87:20 (3962-3973)
[001] 00000da8: PUSH1 0x22                     // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000daa: PUSH0                          // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000dab: SWAP1                          // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000dac: SLOAD                          // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000dad: SWAP1                          // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000dae: PUSH2 0x100                    // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000db1: EXP                            // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000db2: SWAP1                          // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000db3: DIV                            // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000db4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000dc9: AND                            // test/BasePaymaster.t.sol: 87:21-87:25 (3974-3978)
[001] 00000dca: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 87:21-87:33 (3974-3986)
[001] 00000ddf: AND                            // test/BasePaymaster.t.sol: 87:21-87:33 (3974-3986)
[001] 00000de0: BALANCE                        // test/BasePaymaster.t.sol: 87:21-87:33 (3974-3986)
[001] 00000de1: DUP6                           // test/BasePaymaster.t.sol: 87:35-87:47 (3988-4000)
[001] 00000de2: PUSH1 0x40                     // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000de4: MLOAD                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000de5: DUP4                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000de6: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000deb: AND                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000dec: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000dee: SHL                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000def: DUP2                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000df0: MSTORE                         // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000df1: PUSH1 0x4                      // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000df3: ADD                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000df4: PUSH2 0xdfe                    // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000df7: SWAP3                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000df8: SWAP2                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000df9: SWAP1                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000dfa: PUSH2 0x34d6                   // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000dfd: JUMP                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000dfe: JUMPDEST                       // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000dff: PUSH0                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e00: PUSH1 0x40                     // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e02: MLOAD                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e03: DUP1                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e04: DUP4                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e05: SUB                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e06: DUP2                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e07: DUP7                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e08: DUP1                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e09: EXTCODESIZE                    // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e0a: ISZERO                         // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e0b: DUP1                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e0c: ISZERO                         // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e0d: PUSH2 0xe14                    // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e10: JUMPI                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e11: PUSH0                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e12: DUP1                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e13: REVERT                         // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e14: JUMPDEST                       // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e15: POP                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e16: GAS                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e17: STATICCALL                     // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e18: ISZERO                         // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e19: DUP1                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e1a: ISZERO                         // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e1b: PUSH2 0xe26                    // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e1e: JUMPI                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e1f: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e20: PUSH0                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e21: DUP1                           // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e22: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e23: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e24: PUSH0                          // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
      00000e25: REVERT                         // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e26: JUMPDEST                       // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e27: POP                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e28: POP                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e29: POP                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e2a: POP                            // test/BasePaymaster.t.sol: 87:9-87:99 (3962-4052)
[001] 00000e2b: POP                            // test/BasePaymaster.t.sol: 75:49-88:6 (3346-4059)
[001] 00000e2c: POP                            // test/BasePaymaster.t.sol: 75:49-88:6 (3346-4059)
[001] 00000e2d: POP                            // test/BasePaymaster.t.sol: 75:49-88:6 (3346-4059)
[001] 00000e2e: JUMP                           // test/BasePaymaster.t.sol: 75:5-88:6 (3302-4059)
      00000e2f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000e30: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 95:52-95:85 (2954-2987)
      00000e32: PUSH1 0x16                     // lib/forge-std/src/StdInvariant.sol: 96:28-96:44 (3018-3034)
      00000e34: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e35: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e36: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e37: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e39: MUL                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e3a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e3c: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e3d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e3f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e40: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e41: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e42: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e43: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e45: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e46: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e47: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e48: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e49: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e4a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e4b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e4c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e4d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e4f: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e50: DUP3                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e51: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e52: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e53: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e54: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e55: PUSH2 0xeb0                    // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e58: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e59: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e5b: MUL                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e5c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e5d: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e5e: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e5f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e60: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e61: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e62: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e64: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e65: SHA3                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e66: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e67: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e68: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e69: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e6a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e6b: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e6c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e6d: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e70: EXP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e71: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e72: DIV                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e73: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e88: AND                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e89: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e9e: AND                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000e9f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000ea0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000ea1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000ea3: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000ea4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000ea5: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000ea7: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000ea8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000ea9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eaa: DUP4                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eab: GT                             // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eac: PUSH2 0xe67                    // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eaf: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eb0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eb1: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eb2: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eb3: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eb4: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eb5: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eb6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eb7: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000eb8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000eb9: JUMP                           // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
[001] 00000eba: JUMPDEST                       // test/BasePaymaster.t.sol: 51:5-54:6 (2025-2302)
[001] 00000ebb: PUSH0                          // test/BasePaymaster.t.sol: 52:9-52:46 (2075-2112)
[001] 00000ebc: PUSH1 0x27                     // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ebe: PUSH0                          // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ebf: SWAP1                          // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ec0: SLOAD                          // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ec1: SWAP1                          // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ec2: PUSH2 0x100                    // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ec5: EXP                            // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ec6: SWAP1                          // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ec7: DIV                            // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ec8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000edd: AND                            // test/BasePaymaster.t.sol: 52:63-52:73 (2129-2139)
[001] 00000ede: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 52:49-52:89 (2115-2155)
[001] 00000ef3: AND                            // test/BasePaymaster.t.sol: 52:49-52:89 (2115-2155)
[001] 00000ef4: PUSH4 0x5287ce12               // test/BasePaymaster.t.sol: 52:49-52:89 (2115-2155)
[001] 00000ef9: PUSH1 0x24                     // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000efb: PUSH0                          // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000efc: SWAP1                          // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000efd: SLOAD                          // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000efe: SWAP1                          // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000eff: PUSH2 0x100                    // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000f02: EXP                            // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000f03: SWAP1                          // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000f04: DIV                            // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000f05: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000f1a: AND                            // test/BasePaymaster.t.sol: 52:98-52:107 (2164-2173)
[001] 00000f1b: PUSH1 0x40                     // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f1d: MLOAD                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f1e: DUP3                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f1f: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f24: AND                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f25: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f27: SHL                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f28: DUP2                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f29: MSTORE                         // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f2a: PUSH1 0x4                      // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f2c: ADD                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f2d: PUSH2 0xf36                    // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f30: SWAP2                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f31: SWAP1                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f32: PUSH2 0x2fda                   // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f35: JUMP                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f36: JUMPDEST                       // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f37: PUSH1 0xa0                     // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f39: PUSH1 0x40                     // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f3b: MLOAD                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f3c: DUP1                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f3d: DUP4                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f3e: SUB                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f3f: DUP2                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f40: DUP7                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f41: GAS                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f42: STATICCALL                     // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f43: ISZERO                         // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f44: DUP1                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f45: ISZERO                         // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f46: PUSH2 0xf51                    // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f49: JUMPI                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
      00000f4a: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
      00000f4b: PUSH0                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
      00000f4c: DUP1                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
      00000f4d: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
      00000f4e: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
      00000f4f: PUSH0                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
      00000f50: REVERT                         // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f51: JUMPDEST                       // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f52: POP                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f53: POP                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f54: POP                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f55: POP                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f56: PUSH1 0x40                     // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f58: MLOAD                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f59: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f5a: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f5c: NOT                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f5d: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f5f: DUP3                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f60: ADD                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f61: AND                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f62: DUP3                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f63: ADD                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f64: DUP1                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f65: PUSH1 0x40                     // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f67: MSTORE                         // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f68: POP                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f69: DUP2                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f6a: ADD                            // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f6b: SWAP1                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f6c: PUSH2 0xf75                    // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f6f: SWAP2                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f70: SWAP1                          // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f71: PUSH2 0x32db                   // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f74: JUMP                           // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f75: JUMPDEST                       // test/BasePaymaster.t.sol: 52:49-52:109 (2115-2175)
[001] 00000f76: SWAP1                          // test/BasePaymaster.t.sol: 52:9-52:109 (2075-2175)
[001] 00000f77: POP                            // test/BasePaymaster.t.sol: 52:9-52:109 (2075-2175)
[001] 00000f78: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000f99: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000f9a: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000f9b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 53:9-53:20 (2185-2196)
[001] 00000fb0: AND                            // test/BasePaymaster.t.sol: 53:9-53:20 (2185-2196)
[001] 00000fb1: PUSH4 0x88b44c85               // test/BasePaymaster.t.sol: 53:9-53:20 (2185-2196)
[001] 00000fb6: PUSH1 0x24                     // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fb8: PUSH0                          // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fb9: SWAP1                          // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fba: SLOAD                          // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fbb: SWAP1                          // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fbc: PUSH2 0x100                    // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fbf: EXP                            // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fc0: SWAP1                          // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fc1: DIV                            // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fc2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fd7: AND                            // test/BasePaymaster.t.sol: 53:21-53:30 (2197-2206)
[001] 00000fd8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 53:21-53:41 (2197-2217)
[001] 00000fed: AND                            // test/BasePaymaster.t.sol: 53:21-53:41 (2197-2217)
[001] 00000fee: PUSH4 0xc399ec88               // test/BasePaymaster.t.sol: 53:21-53:41 (2197-2217)
[001] 00000ff3: PUSH1 0x40                     // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00000ff5: MLOAD                          // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00000ff6: DUP2                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00000ff7: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00000ffc: AND                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00000ffd: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00000fff: SHL                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001000: DUP2                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001001: MSTORE                         // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001002: PUSH1 0x4                      // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001004: ADD                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001005: PUSH1 0x20                     // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001007: PUSH1 0x40                     // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001009: MLOAD                          // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000100a: DUP1                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000100b: DUP4                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000100c: SUB                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000100d: DUP2                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000100e: DUP7                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000100f: GAS                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001010: STATICCALL                     // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001011: ISZERO                         // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001012: DUP1                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001013: ISZERO                         // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001014: PUSH2 0x101f                   // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001017: JUMPI                          // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
      00001018: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
      00001019: PUSH0                          // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
      0000101a: DUP1                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
      0000101b: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
      0000101c: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
      0000101d: PUSH0                          // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
      0000101e: REVERT                         // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000101f: JUMPDEST                       // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001020: POP                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001021: POP                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001022: POP                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001023: POP                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001024: PUSH1 0x40                     // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001026: MLOAD                          // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001027: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001028: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000102a: NOT                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000102b: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000102d: DUP3                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000102e: ADD                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000102f: AND                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001030: DUP3                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001031: ADD                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001032: DUP1                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001033: PUSH1 0x40                     // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001035: MSTORE                         // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001036: POP                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001037: DUP2                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001038: ADD                            // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001039: SWAP1                          // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000103a: PUSH2 0x1043                   // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000103d: SWAP2                          // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000103e: SWAP1                          // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 0000103f: PUSH2 0x3510                   // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001042: JUMP                           // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001043: JUMPDEST                       // test/BasePaymaster.t.sol: 53:21-53:43 (2197-2219)
[001] 00001044: DUP4                           // test/BasePaymaster.t.sol: 53:45-53:49 (2221-2225)
[001] 00001045: PUSH0                          // test/BasePaymaster.t.sol: 53:45-53:57 (2221-2233)
[001] 00001046: ADD                            // test/BasePaymaster.t.sol: 53:45-53:57 (2221-2233)
[001] 00001047: MLOAD                          // test/BasePaymaster.t.sol: 53:45-53:57 (2221-2233)
[001] 00001048: PUSH1 0x40                     // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000104a: MLOAD                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000104b: DUP4                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000104c: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001051: AND                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001052: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001054: SHL                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001055: DUP2                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001056: MSTORE                         // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001057: PUSH1 0x4                      // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001059: ADD                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000105a: PUSH2 0x1064                   // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000105d: SWAP3                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000105e: SWAP2                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000105f: SWAP1                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001060: PUSH2 0x35ab                   // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001063: JUMP                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001064: JUMPDEST                       // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001065: PUSH0                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001066: PUSH1 0x40                     // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001068: MLOAD                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001069: DUP1                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000106a: DUP4                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000106b: SUB                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000106c: DUP2                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000106d: DUP7                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000106e: DUP1                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000106f: EXTCODESIZE                    // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001070: ISZERO                         // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001071: DUP1                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001072: ISZERO                         // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001073: PUSH2 0x107a                   // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001076: JUMPI                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      00001077: PUSH0                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      00001078: DUP1                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      00001079: REVERT                         // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000107a: JUMPDEST                       // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000107b: POP                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000107c: GAS                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000107d: STATICCALL                     // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000107e: ISZERO                         // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000107f: DUP1                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001080: ISZERO                         // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001081: PUSH2 0x108c                   // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001084: JUMPI                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      00001085: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      00001086: PUSH0                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      00001087: DUP1                           // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      00001088: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      00001089: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      0000108a: PUSH0                          // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
      0000108b: REVERT                         // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000108c: JUMPDEST                       // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000108d: POP                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000108e: POP                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 0000108f: POP                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001090: POP                            // test/BasePaymaster.t.sol: 53:9-53:119 (2185-2295)
[001] 00001091: POP                            // test/BasePaymaster.t.sol: 51:45-54:6 (2065-2302)
[001] 00001092: JUMP                           // test/BasePaymaster.t.sol: 51:5-54:6 (2025-2302)
      00001093: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00001094: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 119:54-119:96 (3872-3914)
      00001096: PUSH1 0x1e                     // lib/forge-std/src/StdInvariant.sol: 120:31-120:50 (3948-3967)
      00001098: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001099: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000109a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000109b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000109d: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000109e: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010a0: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010a1: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010a3: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010a4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010a5: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010a6: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010a7: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010a9: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010aa: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010ab: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010ac: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010ad: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010ae: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010af: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010b0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010b1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010b3: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010b4: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010b5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010b6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010b7: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010b8: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010b9: LT                             // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010ba: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010bb: PUSH2 0x120e                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010be: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010bf: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010c0: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010c1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010c2: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010c3: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010c4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010c6: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010c7: SHA3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010c8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010c9: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010cb: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010cc: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010cd: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010cf: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010d0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010d1: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010d3: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010d4: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010d6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010d7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010d8: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010d9: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010da: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010db: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010dc: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010dd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010de: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010df: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010e0: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010e3: EXP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010e4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010e5: DIV                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010e6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010fb: AND                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000010fc: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001111: AND                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001112: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001127: AND                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001128: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001129: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000112a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000112c: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000112d: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000112f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001130: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001131: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001132: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001133: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001134: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001136: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001137: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001139: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000113a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000113c: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000113d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000113e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000113f: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001140: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001142: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001143: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001144: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001145: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001146: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001147: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001148: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001149: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000114a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000114c: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000114d: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000114e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000114f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001150: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001151: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001152: LT                             // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001153: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001154: PUSH2 0x11f7                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001157: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001158: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001159: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000115a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000115b: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000115c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000115d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000115f: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001160: SHA3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001161: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001162: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001163: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001164: PUSH2 0x116c                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001167: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001168: PUSH2 0x3612                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000116b: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000116c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000116d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000116e: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001170: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001171: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001173: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001174: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001175: DIV                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001176: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001177: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001179: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000117a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000117c: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000117d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000117e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000117f: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001180: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001182: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001183: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001184: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001185: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001186: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001187: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001188: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001189: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000118a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000118c: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000118d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000118e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000118f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001190: PUSH2 0x1198                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001193: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001194: PUSH2 0x3612                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001197: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001198: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001199: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000119a: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000119b: PUSH2 0x11e3                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000119e: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000119f: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011a0: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011a2: LT                             // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011a3: PUSH2 0x11ba                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011a6: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011a7: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011aa: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ab: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ac: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ad: DIV                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ae: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011af: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011b0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011b1: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011b2: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011b4: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011b5: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011b6: PUSH2 0x11e3                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011b9: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ba: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011bb: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011bc: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011bd: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011be: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011bf: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011c0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011c1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011c3: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011c4: SHA3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011c5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011c6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011c7: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011c8: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011c9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ca: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011cb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011cc: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ce: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011cf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011d0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011d2: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011d3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011d4: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011d5: GT                             // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011d6: PUSH2 0x11c6                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011d9: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011da: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011db: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011dc: SUB                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011dd: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011df: AND                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e0: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e1: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e2: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e3: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e4: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e5: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e6: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e7: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e8: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011e9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ea: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011eb: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ed: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ee: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ef: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011f1: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011f2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011f3: PUSH2 0x114f                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011f6: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011f7: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011f8: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011f9: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011fa: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011fb: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011fc: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011fd: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011fe: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000011ff: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001200: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001201: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001202: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001204: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001205: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001206: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001208: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001209: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000120a: PUSH2 0x10b6                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000120d: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000120e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000120f: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001210: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001211: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001212: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001213: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001214: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00001215: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00001216: JUMP                           // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00001217: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00001218: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 115:51-115:84 (3730-3763)
      0000121a: PUSH1 0x18                     // lib/forge-std/src/StdInvariant.sol: 116:28-116:44 (3794-3810)
      0000121c: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000121d: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000121e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000121f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001221: MUL                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001222: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001224: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001225: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001227: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001228: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001229: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000122a: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000122b: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000122d: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000122e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000122f: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001230: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001231: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001232: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001233: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001234: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001235: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001237: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001238: DUP3                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001239: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000123a: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000123b: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000123c: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000123d: PUSH2 0x1298                   // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001240: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001241: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001243: MUL                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001244: DUP3                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001245: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001246: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001247: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001248: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001249: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000124a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000124c: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000124d: SHA3                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000124e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000124f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001250: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001251: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001252: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001253: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001254: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001255: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001258: EXP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001259: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000125a: DIV                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000125b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001270: AND                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001271: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001286: AND                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001287: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001288: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001289: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000128b: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000128c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000128d: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000128f: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001290: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001291: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001292: DUP4                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001293: GT                             // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001294: PUSH2 0x124f                   // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001297: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001298: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00001299: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000129a: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000129b: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000129c: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000129d: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000129e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      0000129f: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      000012a0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      000012a1: JUMP                           // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      000012a2: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      000012a3: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 107:53-107:88 (3433-3468)
      000012a5: PUSH1 0x17                     // lib/forge-std/src/StdInvariant.sol: 108:30-108:48 (3501-3519)
      000012a7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012a8: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012a9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012aa: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012ac: MUL                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012ad: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012af: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012b0: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012b2: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012b3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012b4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012b5: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012b6: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012b8: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012b9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012ba: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012bb: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012bc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012bd: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012be: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012bf: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012c0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012c2: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012c3: DUP3                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012c4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012c5: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012c6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012c7: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012c8: PUSH2 0x1323                   // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012cb: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012cc: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012ce: MUL                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012cf: DUP3                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012d0: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012d1: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012d2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012d3: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012d4: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012d5: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012d7: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012d8: SHA3                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012d9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012da: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012db: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012dc: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012dd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012de: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012df: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012e0: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012e3: EXP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012e4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012e5: DIV                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012e6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012fb: AND                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      000012fc: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001311: AND                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001312: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001313: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001314: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001316: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001317: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001318: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      0000131a: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      0000131b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      0000131c: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      0000131d: DUP4                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      0000131e: GT                             // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      0000131f: PUSH2 0x12da                   // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001322: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001323: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001324: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001325: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001326: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001327: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001328: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00001329: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      0000132a: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      0000132b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      0000132c: JUMP                           // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
[001] 0000132d: JUMPDEST                       // test/BasePaymaster.t.sol: 90:5-96:6 (4065-4330)
[001] 0000132e: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 0000134f: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001350: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001351: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 91:9-91:22 (4117-4130)
[001] 00001366: AND                            // test/BasePaymaster.t.sol: 91:9-91:22 (4117-4130)
[001] 00001367: PUSH4 0x6447d56                // test/BasePaymaster.t.sol: 91:9-91:22 (4117-4130)
[001] 0000136c: PUSH1 0x20                     // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 0000136e: PUSH0                          // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 0000136f: SWAP1                          // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 00001370: SLOAD                          // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 00001371: SWAP1                          // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 00001372: PUSH2 0x100                    // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 00001375: EXP                            // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 00001376: SWAP1                          // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 00001377: DIV                            // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 00001378: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 0000138d: AND                            // test/BasePaymaster.t.sol: 91:23-91:37 (4131-4145)
[001] 0000138e: PUSH1 0x40                     // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 00001390: MLOAD                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 00001391: DUP3                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 00001392: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 00001397: AND                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 00001398: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 0000139a: SHL                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 0000139b: DUP2                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 0000139c: MSTORE                         // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 0000139d: PUSH1 0x4                      // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 0000139f: ADD                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013a0: PUSH2 0x13a9                   // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013a3: SWAP2                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013a4: SWAP1                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013a5: PUSH2 0x2fda                   // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013a8: JUMP                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013a9: JUMPDEST                       // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013aa: PUSH0                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013ab: PUSH1 0x40                     // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013ad: MLOAD                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013ae: DUP1                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013af: DUP4                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b0: SUB                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b1: DUP2                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b2: PUSH0                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b3: DUP8                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b4: DUP1                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b5: EXTCODESIZE                    // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b6: ISZERO                         // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b7: DUP1                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b8: ISZERO                         // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013b9: PUSH2 0x13c0                   // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013bc: JUMPI                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013bd: PUSH0                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013be: DUP1                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013bf: REVERT                         // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013c0: JUMPDEST                       // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013c1: POP                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013c2: GAS                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013c3: CALL                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013c4: ISZERO                         // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013c5: DUP1                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013c6: ISZERO                         // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013c7: PUSH2 0x13d2                   // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013ca: JUMPI                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013cb: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013cc: PUSH0                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013cd: DUP1                           // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013ce: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013cf: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013d0: PUSH0                          // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
      000013d1: REVERT                         // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013d2: JUMPDEST                       // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013d3: POP                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013d4: POP                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013d5: POP                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013d6: POP                            // test/BasePaymaster.t.sol: 91:9-91:38 (4117-4146)
[001] 000013d7: PUSH2 0x148e                   // test/BasePaymaster.t.sol: 92:9-92:52 (4156-4199)
[001] 000013da: PUSH1 0x24                     // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013dc: PUSH0                          // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013dd: SWAP1                          // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013de: SLOAD                          // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013df: SWAP1                          // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013e0: PUSH2 0x100                    // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013e3: EXP                            // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013e4: SWAP1                          // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013e5: DIV                            // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013e6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013fb: AND                            // test/BasePaymaster.t.sol: 92:18-92:27 (4165-4174)
[001] 000013fc: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 92:18-92:33 (4165-4180)
[001] 00001411: AND                            // test/BasePaymaster.t.sol: 92:18-92:33 (4165-4180)
[001] 00001412: PUSH4 0x8da5cb5b               // test/BasePaymaster.t.sol: 92:18-92:33 (4165-4180)
[001] 00001417: PUSH1 0x40                     // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001419: MLOAD                          // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000141a: DUP2                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000141b: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001420: AND                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001421: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001423: SHL                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001424: DUP2                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001425: MSTORE                         // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001426: PUSH1 0x4                      // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001428: ADD                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001429: PUSH1 0x20                     // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000142b: PUSH1 0x40                     // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000142d: MLOAD                          // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000142e: DUP1                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000142f: DUP4                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001430: SUB                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001431: DUP2                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001432: DUP7                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001433: GAS                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001434: STATICCALL                     // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001435: ISZERO                         // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001436: DUP1                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001437: ISZERO                         // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001438: PUSH2 0x1443                   // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000143b: JUMPI                          // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
      0000143c: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
      0000143d: PUSH0                          // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
      0000143e: DUP1                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
      0000143f: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
      00001440: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
      00001441: PUSH0                          // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
      00001442: REVERT                         // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001443: JUMPDEST                       // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001444: POP                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001445: POP                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001446: POP                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001447: POP                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001448: PUSH1 0x40                     // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000144a: MLOAD                          // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000144b: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000144c: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000144e: NOT                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000144f: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001451: DUP3                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001452: ADD                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001453: AND                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001454: DUP3                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001455: ADD                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001456: DUP1                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001457: PUSH1 0x40                     // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001459: MSTORE                         // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000145a: POP                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000145b: DUP2                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000145c: ADD                            // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000145d: SWAP1                          // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 0000145e: PUSH2 0x1467                   // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001461: SWAP2                          // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001462: SWAP1                          // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001463: PUSH2 0x366c                   // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001466: JUMP                           // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001467: JUMPDEST                       // test/BasePaymaster.t.sol: 92:18-92:35 (4165-4182)
[001] 00001468: PUSH1 0x20                     // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 0000146a: PUSH0                          // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 0000146b: SWAP1                          // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 0000146c: SLOAD                          // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 0000146d: SWAP1                          // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 0000146e: PUSH2 0x100                    // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 00001471: EXP                            // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 00001472: SWAP1                          // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 00001473: DIV                            // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 00001474: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 00001489: AND                            // test/BasePaymaster.t.sol: 92:37-92:51 (4184-4198)
[001] 0000148a: PUSH2 0x25fc                   // test/BasePaymaster.t.sol: 92:9-92:17 (4156-4164)
[001] 0000148d: JUMP                           // test/BasePaymaster.t.sol: 92:9-92:52 (4156-4199)
[001] 0000148e: JUMPDEST                       // test/BasePaymaster.t.sol: 92:9-92:52 (4156-4199)
[001] 0000148f: PUSH1 0x24                     // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 00001491: PUSH0                          // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 00001492: SWAP1                          // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 00001493: SLOAD                          // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 00001494: SWAP1                          // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 00001495: PUSH2 0x100                    // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 00001498: EXP                            // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 00001499: SWAP1                          // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 0000149a: DIV                            // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 0000149b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 000014b0: AND                            // test/BasePaymaster.t.sol: 93:9-93:18 (4209-4218)
[001] 000014b1: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 93:9-93:36 (4209-4236)
[001] 000014c6: AND                            // test/BasePaymaster.t.sol: 93:9-93:36 (4209-4236)
[001] 000014c7: PUSH4 0xf2fde38b               // test/BasePaymaster.t.sol: 93:9-93:36 (4209-4236)
[001] 000014cc: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014ce: PUSH1 0x1                      // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014d0: SWAP1                          // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014d1: SLOAD                          // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014d2: SWAP1                          // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014d3: PUSH2 0x100                    // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014d6: EXP                            // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014d7: SWAP1                          // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014d8: DIV                            // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014d9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014ee: AND                            // test/BasePaymaster.t.sol: 93:37-93:48 (4237-4248)
[001] 000014ef: PUSH1 0x40                     // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 000014f1: MLOAD                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 000014f2: DUP3                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 000014f3: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 000014f8: AND                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 000014f9: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 000014fb: SHL                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 000014fc: DUP2                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 000014fd: MSTORE                         // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 000014fe: PUSH1 0x4                      // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001500: ADD                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001501: PUSH2 0x150a                   // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001504: SWAP2                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001505: SWAP1                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001506: PUSH2 0x36b7                   // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001509: JUMP                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 0000150a: JUMPDEST                       // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 0000150b: PUSH0                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 0000150c: PUSH1 0x40                     // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 0000150e: MLOAD                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 0000150f: DUP1                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001510: DUP4                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001511: SUB                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001512: DUP2                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001513: PUSH0                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001514: DUP8                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001515: DUP1                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001516: EXTCODESIZE                    // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001517: ISZERO                         // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001518: DUP1                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001519: ISZERO                         // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 0000151a: PUSH2 0x1521                   // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 0000151d: JUMPI                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      0000151e: PUSH0                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      0000151f: DUP1                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      00001520: REVERT                         // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001521: JUMPDEST                       // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001522: POP                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001523: GAS                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001524: CALL                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001525: ISZERO                         // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001526: DUP1                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001527: ISZERO                         // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001528: PUSH2 0x1533                   // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 0000152b: JUMPI                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      0000152c: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      0000152d: PUSH0                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      0000152e: DUP1                           // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      0000152f: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      00001530: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      00001531: PUSH0                          // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
      00001532: REVERT                         // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001533: JUMPDEST                       // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001534: POP                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001535: POP                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001536: POP                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001537: POP                            // test/BasePaymaster.t.sol: 93:9-93:49 (4209-4249)
[001] 00001538: PUSH2 0x15f0                   // test/BasePaymaster.t.sol: 94:9-94:49 (4259-4299)
[001] 0000153b: PUSH1 0x24                     // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 0000153d: PUSH0                          // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 0000153e: SWAP1                          // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 0000153f: SLOAD                          // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 00001540: SWAP1                          // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 00001541: PUSH2 0x100                    // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 00001544: EXP                            // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 00001545: SWAP1                          // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 00001546: DIV                            // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 00001547: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 0000155c: AND                            // test/BasePaymaster.t.sol: 94:18-94:27 (4268-4277)
[001] 0000155d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 94:18-94:33 (4268-4283)
[001] 00001572: AND                            // test/BasePaymaster.t.sol: 94:18-94:33 (4268-4283)
[001] 00001573: PUSH4 0x8da5cb5b               // test/BasePaymaster.t.sol: 94:18-94:33 (4268-4283)
[001] 00001578: PUSH1 0x40                     // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 0000157a: MLOAD                          // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 0000157b: DUP2                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 0000157c: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001581: AND                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001582: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001584: SHL                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001585: DUP2                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001586: MSTORE                         // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001587: PUSH1 0x4                      // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001589: ADD                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 0000158a: PUSH1 0x20                     // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 0000158c: PUSH1 0x40                     // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 0000158e: MLOAD                          // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 0000158f: DUP1                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001590: DUP4                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001591: SUB                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001592: DUP2                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001593: DUP7                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001594: GAS                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001595: STATICCALL                     // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001596: ISZERO                         // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001597: DUP1                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001598: ISZERO                         // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 00001599: PUSH2 0x15a4                   // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 0000159c: JUMPI                          // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
      0000159d: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
      0000159e: PUSH0                          // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
      0000159f: DUP1                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
      000015a0: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
      000015a1: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
      000015a2: PUSH0                          // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
      000015a3: REVERT                         // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015a4: JUMPDEST                       // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015a5: POP                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015a6: POP                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015a7: POP                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015a8: POP                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015a9: PUSH1 0x40                     // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015ab: MLOAD                          // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015ac: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015ad: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015af: NOT                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015b0: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015b2: DUP3                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015b3: ADD                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015b4: AND                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015b5: DUP3                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015b6: ADD                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015b7: DUP1                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015b8: PUSH1 0x40                     // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015ba: MSTORE                         // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015bb: POP                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015bc: DUP2                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015bd: ADD                            // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015be: SWAP1                          // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015bf: PUSH2 0x15c8                   // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015c2: SWAP2                          // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015c3: SWAP1                          // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015c4: PUSH2 0x366c                   // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015c7: JUMP                           // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015c8: JUMPDEST                       // test/BasePaymaster.t.sol: 94:18-94:35 (4268-4285)
[001] 000015c9: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015cb: PUSH1 0x1                      // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015cd: SWAP1                          // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015ce: SLOAD                          // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015cf: SWAP1                          // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015d0: PUSH2 0x100                    // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015d3: EXP                            // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015d4: SWAP1                          // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015d5: DIV                            // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015d6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015eb: AND                            // test/BasePaymaster.t.sol: 94:37-94:48 (4287-4298)
[001] 000015ec: PUSH2 0x25fc                   // test/BasePaymaster.t.sol: 94:9-94:17 (4259-4267)
[001] 000015ef: JUMP                           // test/BasePaymaster.t.sol: 94:9-94:49 (4259-4299)
[001] 000015f0: JUMPDEST                       // test/BasePaymaster.t.sol: 94:9-94:49 (4259-4299)
[001] 000015f1: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001612: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001613: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001614: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 95:9-95:21 (4309-4321)
[001] 00001629: AND                            // test/BasePaymaster.t.sol: 95:9-95:21 (4309-4321)
[001] 0000162a: PUSH4 0x90c5013b               // test/BasePaymaster.t.sol: 95:9-95:21 (4309-4321)
[001] 0000162f: PUSH1 0x40                     // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001631: MLOAD                          // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001632: DUP2                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001633: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001638: AND                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001639: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000163b: SHL                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000163c: DUP2                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000163d: MSTORE                         // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000163e: PUSH1 0x4                      // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001640: ADD                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001641: PUSH0                          // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001642: PUSH1 0x40                     // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001644: MLOAD                          // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001645: DUP1                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001646: DUP4                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001647: SUB                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001648: DUP2                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001649: PUSH0                          // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000164a: DUP8                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000164b: DUP1                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000164c: EXTCODESIZE                    // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000164d: ISZERO                         // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000164e: DUP1                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000164f: ISZERO                         // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001650: PUSH2 0x1657                   // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001653: JUMPI                          // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001654: PUSH0                          // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001655: DUP1                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001656: REVERT                         // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001657: JUMPDEST                       // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001658: POP                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001659: GAS                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000165a: CALL                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000165b: ISZERO                         // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000165c: DUP1                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000165d: ISZERO                         // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000165e: PUSH2 0x1669                   // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001661: JUMPI                          // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001662: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001663: PUSH0                          // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001664: DUP1                           // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001665: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001666: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001667: PUSH0                          // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
      00001668: REVERT                         // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 00001669: JUMPDEST                       // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000166a: POP                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000166b: POP                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000166c: POP                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000166d: POP                            // test/BasePaymaster.t.sol: 95:9-95:23 (4309-4323)
[001] 0000166e: JUMP                           // test/BasePaymaster.t.sol: 90:5-96:6 (4065-4330)
      0000166f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      00001670: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 103:61-103:117 (3249-3305)
      00001672: PUSH1 0x1b                     // lib/forge-std/src/StdInvariant.sol: 104:38-104:64 (3346-3372)
      00001674: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001675: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001676: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001677: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001679: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000167a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000167c: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000167d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000167f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001680: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001681: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001682: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001683: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001685: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001686: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001687: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001688: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001689: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000168a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000168b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000168c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000168d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000168f: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001690: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001691: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001692: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001693: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001694: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001695: LT                             // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001696: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001697: PUSH2 0x17e8                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000169a: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000169b: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000169c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000169d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000169e: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000169f: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016a0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016a2: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016a3: SHA3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016a4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016a5: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016a7: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016a8: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016a9: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016ab: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016ac: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016ad: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016af: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016b0: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016b2: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016b3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016b4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016b5: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016b6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016b7: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016b8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016b9: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016ba: PUSH2 0x16c2                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016bd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016be: PUSH2 0x3612                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016c1: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016c2: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016c3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016c4: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016c6: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016c7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016c9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016ca: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016cb: DIV                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016cc: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016cd: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016cf: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016d0: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016d2: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016d3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016d4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016d5: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016d6: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016d8: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016d9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016da: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016db: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016dc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016dd: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016de: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016df: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016e0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016e2: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016e3: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016e4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016e5: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016e6: PUSH2 0x16ee                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016e9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016ea: PUSH2 0x3612                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016ed: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016ee: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016ef: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016f0: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016f1: PUSH2 0x1739                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016f4: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016f5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016f6: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016f8: LT                             // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016f9: PUSH2 0x1710                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016fc: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000016fd: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001700: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001701: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001702: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001703: DIV                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001704: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001705: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001706: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001707: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001708: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000170a: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000170b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000170c: PUSH2 0x1739                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000170f: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001710: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001711: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001712: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001713: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001714: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001715: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001716: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001717: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001719: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000171a: SHA3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000171b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000171c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000171d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000171e: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000171f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001720: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001721: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001722: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001724: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001725: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001726: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001728: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001729: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000172a: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000172b: GT                             // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000172c: PUSH2 0x171c                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000172f: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001730: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001731: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001732: SUB                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001733: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001735: AND                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001736: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001737: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001738: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001739: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000173a: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000173b: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000173c: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000173d: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000173e: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000173f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001740: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001741: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001743: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001744: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001746: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001747: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001748: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001749: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000174a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000174b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000174d: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000174e: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001750: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001751: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001753: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001754: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001755: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001756: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001757: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001759: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000175a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000175b: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000175c: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000175d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000175e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000175f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001760: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001761: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001763: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001764: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001765: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001766: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001767: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001768: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001769: PUSH2 0x17d0                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000176c: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000176d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000176f: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001770: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001771: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001772: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001773: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001774: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001775: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001776: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001778: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001779: SHA3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000177a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000177b: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000177c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000177d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000177e: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000177f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001780: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001781: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001782: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001783: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001786: EXP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001787: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001788: DIV                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00001789: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000178b: SHL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      0000178c: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017a9: NOT                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017aa: AND                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ab: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ac: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ad: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017af: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017b0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017b1: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017b3: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017b4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017b5: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017b7: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017b8: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ba: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017bb: DIV                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017bc: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017bd: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017be: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017bf: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017c0: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017c2: SUB                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017c3: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017c4: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017c5: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017c6: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017c7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017c8: DUP5                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017c9: GT                             // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ca: PUSH2 0x177d                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017cd: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ce: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017cf: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d1: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d2: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d3: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d4: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d5: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d6: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d7: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d8: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017d9: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017da: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017db: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017dc: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017de: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017df: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017e0: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017e2: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017e3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017e4: PUSH2 0x1692                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017e7: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017e8: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017e9: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ea: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017eb: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ec: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ed: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ee: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      000017ef: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000017f0: JUMP                           // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000017f1: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000017f2: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 99:53-99:87 (3095-3129)
      000017f4: PUSH1 0x1a                     // lib/forge-std/src/StdInvariant.sol: 100:30-100:48 (3162-3180)
      000017f6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000017f7: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000017f8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000017f9: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000017fb: MUL                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000017fc: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000017fe: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000017ff: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001801: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001802: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001803: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001804: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001805: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001807: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001808: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001809: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000180a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000180b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000180c: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000180d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000180e: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000180f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001811: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001812: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001813: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001814: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001815: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001816: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001817: LT                             // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001818: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001819: PUSH2 0x18bc                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000181c: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000181d: DUP4                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000181e: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000181f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001820: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001821: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001822: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001824: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001825: SHA3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001826: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001827: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001828: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001829: PUSH2 0x1831                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000182c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000182d: PUSH2 0x3612                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001830: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001831: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001832: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001833: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001835: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001836: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001838: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001839: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000183a: DIV                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000183b: MUL                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000183c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000183e: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000183f: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001841: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001842: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001843: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001844: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001845: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001847: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001848: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001849: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000184a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000184b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000184c: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000184d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000184e: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000184f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001851: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001852: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001853: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001854: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001855: PUSH2 0x185d                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001858: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001859: PUSH2 0x3612                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000185c: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000185d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000185e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000185f: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001860: PUSH2 0x18a8                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001863: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001864: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001865: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001867: LT                             // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001868: PUSH2 0x187f                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000186b: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000186c: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000186f: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001870: DUP4                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001871: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001872: DIV                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001873: MUL                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001874: DUP4                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001875: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001876: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001877: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001879: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000187a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000187b: PUSH2 0x18a8                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000187e: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000187f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001880: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001881: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001882: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001883: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001884: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001885: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001886: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001888: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001889: SHA3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000188a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000188b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000188c: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000188d: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000188e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000188f: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001890: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001891: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001893: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001894: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001895: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001897: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001898: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001899: DUP4                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000189a: GT                             // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000189b: PUSH2 0x188b                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000189e: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000189f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018a0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018a1: SUB                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018a2: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018a4: AND                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018a5: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018a6: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018a7: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018a8: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018a9: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018aa: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018ab: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018ac: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018ad: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018ae: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018af: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018b0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018b2: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018b3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018b4: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018b6: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018b7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018b8: PUSH2 0x1814                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018bb: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018bc: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018bd: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018be: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018bf: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018c0: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018c1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018c2: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000018c3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000018c4: JUMP                           // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000018c5: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000018c6: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 111:53-111:93 (3580-3620)
      000018c8: PUSH1 0x1d                     // lib/forge-std/src/StdInvariant.sol: 112:30-112:48 (3653-3671)
      000018ca: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018cb: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018cc: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018cd: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018cf: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018d0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018d2: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018d3: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018d5: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018d6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018d7: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018d8: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018d9: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018db: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018dc: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018dd: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018de: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018df: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018e0: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018e1: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018e2: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018e3: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018e5: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018e6: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018e7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018e8: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018e9: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018ea: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018eb: LT                             // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018ec: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018ed: PUSH2 0x1a03                   // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018f0: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018f1: DUP4                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018f2: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018f3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018f4: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018f5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018f6: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018f8: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018f9: SHA3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018fa: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018fb: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018fd: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018fe: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000018ff: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001901: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001902: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001903: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001905: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001906: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001908: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001909: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000190a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000190b: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000190c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000190d: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000190e: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000190f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001910: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001911: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001912: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001915: EXP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001916: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001917: DIV                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001918: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000192d: AND                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000192e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001943: AND                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001944: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001959: AND                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000195a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000195b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000195c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000195e: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000195f: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001961: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001962: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001963: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001964: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001965: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001966: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001968: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001969: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000196b: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000196c: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000196e: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000196f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001970: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001971: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001972: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001974: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001975: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001976: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001977: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001978: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001979: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000197a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000197b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000197c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000197e: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000197f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001980: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001981: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001982: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001983: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001984: PUSH2 0x19eb                   // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001987: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001988: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000198a: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000198b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000198c: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000198d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000198e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000198f: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001990: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001991: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001993: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001994: SHA3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001995: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001996: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001997: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001998: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001999: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000199a: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000199b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000199c: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000199d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000199e: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019a1: EXP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019a2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019a3: DIV                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019a4: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019a6: SHL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019a7: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019c4: NOT                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019c5: AND                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019c6: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019c7: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019c8: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019ca: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019cb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019cc: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019ce: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019cf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019d0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019d2: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019d3: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019d5: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019d6: DIV                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019d7: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019d8: DUP4                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019d9: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019da: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019db: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019dd: SUB                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019de: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019df: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019e0: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019e1: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019e2: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019e3: DUP5                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019e4: GT                             // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019e5: PUSH2 0x1998                   // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019e8: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019e9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019ea: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019eb: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019ec: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019ed: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019ee: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019ef: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019f0: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019f1: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019f2: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019f3: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019f4: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019f5: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019f6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019f7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019f9: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019fa: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019fb: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019fd: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019fe: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000019ff: PUSH2 0x18e8                   // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001a02: JUMP                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001a03: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001a04: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001a05: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001a06: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001a07: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001a08: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001a09: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001a0a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00001a0b: JUMP                           // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
[001] 00001a0c: JUMPDEST                       // test/BasePaymaster.t.sol: 66:5-73:6 (2847-3296)
[001] 00001a0d: PUSH0                          // test/BasePaymaster.t.sol: 67:9-67:29 (2890-2910)
[001] 00001a0e: PUSH8 0xde0b6b3a7640000        // test/BasePaymaster.t.sol: 67:32-67:36 (2913-2917)
[001] 00001a17: SWAP1                          // test/BasePaymaster.t.sol: 67:9-67:36 (2890-2917)
[001] 00001a18: POP                            // test/BasePaymaster.t.sol: 67:9-67:36 (2890-2917)
[001] 00001a19: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001a3a: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001a3b: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001a3c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 68:9-68:17 (2927-2935)
[001] 00001a51: AND                            // test/BasePaymaster.t.sol: 68:9-68:17 (2927-2935)
[001] 00001a52: PUSH4 0xca669fa7               // test/BasePaymaster.t.sol: 68:9-68:17 (2927-2935)
[001] 00001a57: PUSH1 0x20                     // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a59: PUSH0                          // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a5a: SWAP1                          // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a5b: SLOAD                          // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a5c: SWAP1                          // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a5d: PUSH2 0x100                    // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a60: EXP                            // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a61: SWAP1                          // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a62: DIV                            // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a63: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a78: AND                            // test/BasePaymaster.t.sol: 68:18-68:32 (2936-2950)
[001] 00001a79: PUSH1 0x40                     // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a7b: MLOAD                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a7c: DUP3                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a7d: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a82: AND                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a83: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a85: SHL                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a86: DUP2                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a87: MSTORE                         // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a88: PUSH1 0x4                      // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a8a: ADD                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a8b: PUSH2 0x1a94                   // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a8e: SWAP2                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a8f: SWAP1                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a90: PUSH2 0x2fda                   // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a93: JUMP                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a94: JUMPDEST                       // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a95: PUSH0                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a96: PUSH1 0x40                     // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a98: MLOAD                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a99: DUP1                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a9a: DUP4                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a9b: SUB                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a9c: DUP2                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a9d: PUSH0                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a9e: DUP8                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001a9f: DUP1                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aa0: EXTCODESIZE                    // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aa1: ISZERO                         // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aa2: DUP1                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aa3: ISZERO                         // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aa4: PUSH2 0x1aab                   // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aa7: JUMPI                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001aa8: PUSH0                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001aa9: DUP1                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001aaa: REVERT                         // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aab: JUMPDEST                       // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aac: POP                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aad: GAS                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aae: CALL                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001aaf: ISZERO                         // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001ab0: DUP1                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001ab1: ISZERO                         // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001ab2: PUSH2 0x1abd                   // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001ab5: JUMPI                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001ab6: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001ab7: PUSH0                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001ab8: DUP1                           // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001ab9: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001aba: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001abb: PUSH0                          // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
      00001abc: REVERT                         // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001abd: JUMPDEST                       // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001abe: POP                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001abf: POP                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001ac0: POP                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001ac1: POP                            // test/BasePaymaster.t.sol: 68:9-68:33 (2927-2951)
[001] 00001ac2: PUSH1 0x24                     // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001ac4: PUSH0                          // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001ac5: SWAP1                          // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001ac6: SLOAD                          // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001ac7: SWAP1                          // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001ac8: PUSH2 0x100                    // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001acb: EXP                            // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001acc: SWAP1                          // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001acd: DIV                            // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001ace: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001ae3: AND                            // test/BasePaymaster.t.sol: 69:23-69:32 (2975-2984)
[001] 00001ae4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 69:9-69:42 (2961-2994)
[001] 00001af9: AND                            // test/BasePaymaster.t.sol: 69:9-69:42 (2961-2994)
[001] 00001afa: PUSH4 0x396cb60                // test/BasePaymaster.t.sol: 69:9-69:42 (2961-2994)
[001] 00001aff: DUP3                           // test/BasePaymaster.t.sol: 69:50-69:62 (3002-3014)
[001] 00001b00: PUSH1 0xa                      // test/BasePaymaster.t.sol: 69:64-69:66 (3016-3018)
[001] 00001b02: PUSH1 0x40                     // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b04: MLOAD                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b05: DUP4                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b06: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b0b: AND                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b0c: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b0e: SHL                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b0f: DUP2                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b10: MSTORE                         // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b11: PUSH1 0x4                      // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b13: ADD                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b14: PUSH2 0x1b1d                   // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b17: SWAP2                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b18: SWAP1                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b19: PUSH2 0x3709                   // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b1c: JUMP                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b1d: JUMPDEST                       // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b1e: PUSH0                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b1f: PUSH1 0x40                     // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b21: MLOAD                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b22: DUP1                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b23: DUP4                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b24: SUB                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b25: DUP2                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b26: DUP6                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b27: DUP9                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b28: DUP1                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b29: EXTCODESIZE                    // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b2a: ISZERO                         // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b2b: DUP1                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b2c: ISZERO                         // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b2d: PUSH2 0x1b34                   // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b30: JUMPI                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b31: PUSH0                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b32: DUP1                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b33: REVERT                         // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b34: JUMPDEST                       // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b35: POP                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b36: GAS                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b37: CALL                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b38: ISZERO                         // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b39: DUP1                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b3a: ISZERO                         // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b3b: PUSH2 0x1b46                   // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b3e: JUMPI                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b3f: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b40: PUSH0                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b41: DUP1                           // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b42: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b43: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b44: PUSH0                          // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
      00001b45: REVERT                         // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b46: JUMPDEST                       // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b47: POP                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b48: POP                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b49: POP                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b4a: POP                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b4b: POP                            // test/BasePaymaster.t.sol: 69:9-69:67 (2961-3019)
[001] 00001b4c: PUSH0                          // test/BasePaymaster.t.sol: 70:9-70:46 (3029-3066)
[001] 00001b4d: PUSH1 0x27                     // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b4f: PUSH0                          // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b50: SWAP1                          // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b51: SLOAD                          // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b52: SWAP1                          // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b53: PUSH2 0x100                    // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b56: EXP                            // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b57: SWAP1                          // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b58: DIV                            // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b59: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b6e: AND                            // test/BasePaymaster.t.sol: 70:63-70:73 (3083-3093)
[001] 00001b6f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 70:49-70:89 (3069-3109)
[001] 00001b84: AND                            // test/BasePaymaster.t.sol: 70:49-70:89 (3069-3109)
[001] 00001b85: PUSH4 0x5287ce12               // test/BasePaymaster.t.sol: 70:49-70:89 (3069-3109)
[001] 00001b8a: PUSH1 0x24                     // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001b8c: PUSH0                          // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001b8d: SWAP1                          // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001b8e: SLOAD                          // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001b8f: SWAP1                          // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001b90: PUSH2 0x100                    // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001b93: EXP                            // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001b94: SWAP1                          // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001b95: DIV                            // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001b96: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001bab: AND                            // test/BasePaymaster.t.sol: 70:98-70:107 (3118-3127)
[001] 00001bac: PUSH1 0x40                     // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bae: MLOAD                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001baf: DUP3                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bb0: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bb5: AND                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bb6: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bb8: SHL                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bb9: DUP2                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bba: MSTORE                         // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bbb: PUSH1 0x4                      // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bbd: ADD                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bbe: PUSH2 0x1bc7                   // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bc1: SWAP2                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bc2: SWAP1                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bc3: PUSH2 0x2fda                   // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bc6: JUMP                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bc7: JUMPDEST                       // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bc8: PUSH1 0xa0                     // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bca: PUSH1 0x40                     // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bcc: MLOAD                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bcd: DUP1                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bce: DUP4                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bcf: SUB                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bd0: DUP2                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bd1: DUP7                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bd2: GAS                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bd3: STATICCALL                     // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bd4: ISZERO                         // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bd5: DUP1                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bd6: ISZERO                         // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bd7: PUSH2 0x1be2                   // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bda: JUMPI                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
      00001bdb: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
      00001bdc: PUSH0                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
      00001bdd: DUP1                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
      00001bde: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
      00001bdf: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
      00001be0: PUSH0                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
      00001be1: REVERT                         // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001be2: JUMPDEST                       // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001be3: POP                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001be4: POP                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001be5: POP                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001be6: POP                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001be7: PUSH1 0x40                     // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001be9: MLOAD                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bea: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001beb: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bed: NOT                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bee: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bf0: DUP3                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bf1: ADD                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bf2: AND                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bf3: DUP3                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bf4: ADD                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bf5: DUP1                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bf6: PUSH1 0x40                     // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bf8: MSTORE                         // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bf9: POP                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bfa: DUP2                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bfb: ADD                            // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bfc: SWAP1                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001bfd: PUSH2 0x1c06                   // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001c00: SWAP2                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001c01: SWAP1                          // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001c02: PUSH2 0x32db                   // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001c05: JUMP                           // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001c06: JUMPDEST                       // test/BasePaymaster.t.sol: 70:49-70:109 (3069-3129)
[001] 00001c07: SWAP1                          // test/BasePaymaster.t.sol: 70:9-70:109 (3029-3129)
[001] 00001c08: POP                            // test/BasePaymaster.t.sol: 70:9-70:109 (3029-3129)
[001] 00001c09: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001c2a: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001c2b: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001c2c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 71:9-71:22 (3139-3152)
[001] 00001c41: AND                            // test/BasePaymaster.t.sol: 71:9-71:22 (3139-3152)
[001] 00001c42: PUSH4 0xa34edc03               // test/BasePaymaster.t.sol: 71:9-71:22 (3139-3152)
[001] 00001c47: DUP3                           // test/BasePaymaster.t.sol: 71:23-71:27 (3153-3157)
[001] 00001c48: PUSH1 0x20                     // test/BasePaymaster.t.sol: 71:23-71:34 (3153-3164)
[001] 00001c4a: ADD                            // test/BasePaymaster.t.sol: 71:23-71:34 (3153-3164)
[001] 00001c4b: MLOAD                          // test/BasePaymaster.t.sol: 71:23-71:34 (3153-3164)
[001] 00001c4c: PUSH1 0x40                     // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c4e: MLOAD                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c4f: DUP3                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c50: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c55: AND                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c56: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c58: SHL                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c59: DUP2                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c5a: MSTORE                         // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c5b: PUSH1 0x4                      // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c5d: ADD                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c5e: PUSH2 0x1c67                   // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c61: SWAP2                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c62: SWAP1                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c63: PUSH2 0x376c                   // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c66: JUMP                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c67: JUMPDEST                       // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c68: PUSH0                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c69: PUSH1 0x40                     // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c6b: MLOAD                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c6c: DUP1                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c6d: DUP4                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c6e: SUB                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c6f: DUP2                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c70: DUP7                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c71: DUP1                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c72: EXTCODESIZE                    // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c73: ISZERO                         // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c74: DUP1                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c75: ISZERO                         // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c76: PUSH2 0x1c7d                   // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c79: JUMPI                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c7a: PUSH0                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c7b: DUP1                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c7c: REVERT                         // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c7d: JUMPDEST                       // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c7e: POP                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c7f: GAS                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c80: STATICCALL                     // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c81: ISZERO                         // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c82: DUP1                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c83: ISZERO                         // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c84: PUSH2 0x1c8f                   // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c87: JUMPI                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c88: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c89: PUSH0                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c8a: DUP1                           // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c8b: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c8c: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c8d: PUSH0                          // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
      00001c8e: REVERT                         // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c8f: JUMPDEST                       // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c90: POP                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c91: POP                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c92: POP                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c93: POP                            // test/BasePaymaster.t.sol: 71:9-71:65 (3139-3195)
[001] 00001c94: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001cb5: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001cb6: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001cb7: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 72:9-72:20 (3205-3216)
[001] 00001ccc: AND                            // test/BasePaymaster.t.sol: 72:9-72:20 (3205-3216)
[001] 00001ccd: PUSH4 0x88b44c85               // test/BasePaymaster.t.sol: 72:9-72:20 (3205-3216)
[001] 00001cd2: DUP3                           // test/BasePaymaster.t.sol: 72:21-72:25 (3217-3221)
[001] 00001cd3: PUSH1 0x40                     // test/BasePaymaster.t.sol: 72:21-72:31 (3217-3227)
[001] 00001cd5: ADD                            // test/BasePaymaster.t.sol: 72:21-72:31 (3217-3227)
[001] 00001cd6: MLOAD                          // test/BasePaymaster.t.sol: 72:21-72:31 (3217-3227)
[001] 00001cd7: DUP5                           // test/BasePaymaster.t.sol: 72:33-72:45 (3229-3241)
[001] 00001cd8: PUSH1 0x40                     // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cda: MLOAD                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cdb: DUP4                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cdc: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001ce1: AND                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001ce2: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001ce4: SHL                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001ce5: DUP2                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001ce6: MSTORE                         // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001ce7: PUSH1 0x4                      // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001ce9: ADD                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cea: PUSH2 0x1cf4                   // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001ced: SWAP3                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cee: SWAP2                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cef: SWAP1                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cf0: PUSH2 0x3808                   // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cf3: JUMP                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cf4: JUMPDEST                       // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cf5: PUSH0                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cf6: PUSH1 0x40                     // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cf8: MLOAD                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cf9: DUP1                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cfa: DUP4                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cfb: SUB                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cfc: DUP2                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cfd: DUP7                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cfe: DUP1                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001cff: EXTCODESIZE                    // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d00: ISZERO                         // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d01: DUP1                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d02: ISZERO                         // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d03: PUSH2 0x1d0a                   // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d06: JUMPI                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d07: PUSH0                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d08: DUP1                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d09: REVERT                         // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d0a: JUMPDEST                       // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d0b: POP                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d0c: GAS                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d0d: STATICCALL                     // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d0e: ISZERO                         // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d0f: DUP1                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d10: ISZERO                         // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d11: PUSH2 0x1d1c                   // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d14: JUMPI                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d15: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d16: PUSH0                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d17: DUP1                           // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d18: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d19: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d1a: PUSH0                          // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
      00001d1b: REVERT                         // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d1c: JUMPDEST                       // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d1d: POP                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d1e: POP                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d1f: POP                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d20: POP                            // test/BasePaymaster.t.sol: 72:9-72:93 (3205-3289)
[001] 00001d21: POP                            // test/BasePaymaster.t.sol: 66:38-73:6 (2880-3296)
[001] 00001d22: POP                            // test/BasePaymaster.t.sol: 66:38-73:6 (2880-3296)
[001] 00001d23: JUMP                           // test/BasePaymaster.t.sol: 66:5-73:6 (2847-3296)
      00001d24: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00001d25: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 91:54-91:94 (2803-2843)
      00001d27: PUSH1 0x1c                     // lib/forge-std/src/StdInvariant.sol: 92:30-92:48 (2876-2894)
      00001d29: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d2a: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d2b: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d2c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d2e: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d2f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d31: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d32: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d34: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d35: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d36: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d37: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d38: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d3a: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d3b: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d3c: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d3d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d3e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d3f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d40: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d41: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d42: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d44: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d45: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d46: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d47: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d48: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d49: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d4a: LT                             // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d4b: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d4c: PUSH2 0x1e62                   // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d4f: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d50: DUP4                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d51: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d52: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d53: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d54: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d55: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d57: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d58: SHA3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d59: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d5a: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d5c: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d5d: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d5e: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d60: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d61: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d62: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d64: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d65: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d67: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d68: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d69: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d6a: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d6b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d6c: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d6d: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d6e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d6f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d70: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d71: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d74: EXP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d75: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d76: DIV                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d77: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d8c: AND                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001d8d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001da2: AND                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001da3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001db8: AND                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001db9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dba: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dbb: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dbd: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dbe: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dc0: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dc1: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dc2: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dc3: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dc4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dc5: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dc7: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dc8: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dca: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dcb: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dcd: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dce: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dcf: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dd0: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dd1: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dd3: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dd4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dd5: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dd6: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dd7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dd8: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dd9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dda: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001ddb: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001ddd: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dde: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001ddf: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001de0: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001de1: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001de2: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001de3: PUSH2 0x1e4a                   // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001de6: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001de7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001de9: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dea: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001deb: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dec: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001ded: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dee: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001def: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001df0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001df2: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001df3: SHA3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001df4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001df5: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001df6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001df7: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001df8: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001df9: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dfa: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dfb: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dfc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001dfd: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e00: EXP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e01: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e02: DIV                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e03: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e05: SHL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e06: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e23: NOT                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e24: AND                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e25: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e26: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e27: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e29: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e2a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e2b: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e2d: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e2e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e2f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e31: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e32: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e34: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e35: DIV                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e36: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e37: DUP4                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e38: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e39: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e3a: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e3c: SUB                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e3d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e3e: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e3f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e40: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e41: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e42: DUP5                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e43: GT                             // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e44: PUSH2 0x1df7                   // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e47: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e48: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e49: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e4a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e4b: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e4c: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e4d: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e4e: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e4f: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e50: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e51: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e52: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e53: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e54: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e55: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e56: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e58: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e59: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e5a: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e5c: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e5d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e5e: PUSH2 0x1d47                   // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e61: JUMP                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e62: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e63: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e64: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e65: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e66: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e67: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e68: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001e69: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00001e6a: JUMP                           // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00001e6b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00001e6c: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 83:54-83:88 (2508-2542)
      00001e6e: PUSH1 0x19                     // lib/forge-std/src/StdInvariant.sol: 84:30-84:48 (2575-2593)
      00001e70: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e71: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e72: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e73: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e75: MUL                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e76: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e78: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e79: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e7b: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e7c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e7d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e7e: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e7f: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e81: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e82: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e83: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e84: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e85: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e86: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e87: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e88: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e89: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e8b: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e8c: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e8d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e8e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e8f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e90: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e91: LT                             // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e92: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e93: PUSH2 0x1f36                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e96: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e97: DUP4                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e98: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e99: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e9a: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e9b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e9c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e9e: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001e9f: SHA3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ea0: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ea1: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ea2: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ea3: PUSH2 0x1eab                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ea6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ea7: PUSH2 0x3612                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eaa: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eab: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eac: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ead: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eaf: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eb0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eb2: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eb3: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eb4: DIV                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eb5: MUL                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eb6: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eb8: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eb9: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ebb: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ebc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ebd: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ebe: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ebf: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ec1: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ec2: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ec3: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ec4: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ec5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ec6: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ec7: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ec8: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ec9: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ecb: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ecc: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ecd: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ece: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ecf: PUSH2 0x1ed7                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ed2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ed3: PUSH2 0x3612                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ed6: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ed7: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ed8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ed9: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eda: PUSH2 0x1f22                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001edd: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ede: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001edf: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ee1: LT                             // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ee2: PUSH2 0x1ef9                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ee5: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ee6: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ee9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eea: DUP4                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eeb: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eec: DIV                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eed: MUL                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eee: DUP4                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eef: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ef0: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ef1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ef3: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ef4: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ef5: PUSH2 0x1f22                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ef8: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001ef9: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001efa: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001efb: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001efc: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001efd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001efe: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001eff: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f00: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f02: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f03: SHA3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f04: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f05: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f06: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f07: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f08: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f09: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f0a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f0b: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f0d: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f0e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f0f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f11: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f12: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f13: DUP4                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f14: GT                             // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f15: PUSH2 0x1f05                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f18: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f19: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f1a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f1b: SUB                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f1c: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f1e: AND                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f1f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f20: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f21: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f22: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f23: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f24: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f25: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f26: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f27: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f28: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f29: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f2a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f2c: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f2d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f2e: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f30: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f31: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f32: PUSH2 0x1e8e                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f35: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f36: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f37: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f38: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f39: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f3a: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f3b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f3c: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001f3d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00001f3e: JUMP                           // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00001f3f: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00001f40: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 38:44-38:48 (1282-1286)
      00001f41: PUSH1 0x8                      // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f43: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f44: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f45: SLOAD                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f46: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f47: PUSH2 0x100                    // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f4a: EXP                            // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f4b: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f4c: DIV                            // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f4d: PUSH1 0xff                     // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f4f: AND                            // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001f50: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001f51: PUSH2 0x1f6a                   // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001f54: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001f55: PUSH1 0x8                      // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f57: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f58: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f59: SLOAD                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f5a: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f5b: PUSH2 0x100                    // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f5e: EXP                            // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f5f: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f60: DIV                            // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f61: PUSH1 0xff                     // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f63: AND                            // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001f64: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001f65: POP                            // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001f66: PUSH2 0x2050                   // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001f69: JUMP                           // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001f6a: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001f6b: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 42:71-42:72 (1428-1429)
      00001f6c: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:63-42:73 (1420-1430)
      00001f6d: SHL                            // lib/forge-std/src/StdAssertions.sol: 42:63-42:73 (1420-1430)
      00001f6e: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
      00001f8f: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001f90: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001f91: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdAssertions.sol: 42:20-42:27 (1377-1384)
      00001fa6: AND                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:27 (1377-1384)
      00001fa7: PUSH4 0x667f9d70               // lib/forge-std/src/StdAssertions.sol: 42:20-42:27 (1377-1384)
      00001fac: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
      00001fcd: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001fce: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001fcf: PUSH32 0x6661696c65640000000000000000000000000000000000000000000000000000 // lib/forge-std/src/StdAssertions.sol: 42:41-42:58 (1398-1415)
      00001ff0: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ff2: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ff3: DUP4                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ff4: PUSH4 0xffffffff               // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ff9: AND                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ffa: PUSH1 0xe0                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ffc: SHL                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ffd: DUP2                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ffe: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001fff: PUSH1 0x4                      // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002001: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002002: PUSH2 0x200c                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002005: SWAP3                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002006: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002007: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002008: PUSH2 0x385a                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000200b: JUMP                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000200c: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000200d: PUSH1 0x20                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000200f: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002011: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002012: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002013: DUP4                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002014: SUB                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002015: DUP2                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002016: DUP7                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002017: GAS                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002018: STATICCALL                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002019: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000201a: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000201b: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000201c: PUSH2 0x2027                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000201f: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002020: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002021: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002022: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002023: RETURNDATACOPY                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002024: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002025: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002026: REVERT                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002027: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002028: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002029: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000202a: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000202b: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000202c: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000202e: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000202f: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002030: PUSH1 0x1f                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002032: NOT                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002033: PUSH1 0x1f                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002035: DUP3                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002036: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002037: AND                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002038: DUP3                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002039: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000203a: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000203b: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000203d: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000203e: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000203f: DUP2                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002040: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002041: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002042: PUSH2 0x204b                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002045: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002046: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00002047: PUSH2 0x38ab                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000204a: JUMP                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000204b: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      0000204c: EQ                             // lib/forge-std/src/StdAssertions.sol: 42:20-42:73 (1377-1430)
      0000204d: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:73 (1377-1430)
      0000204e: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:13-42:73 (1370-1430)
      0000204f: POP                            // lib/forge-std/src/StdAssertions.sol: 42:13-42:73 (1370-1430)
      00002050: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00002051: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00002052: JUMP                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00002053: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00002054: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 87:54-87:89 (2655-2690)
      00002056: PUSH1 0x15                     // lib/forge-std/src/StdInvariant.sol: 88:30-88:48 (2723-2741)
      00002058: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002059: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000205a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000205b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000205d: MUL                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000205e: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002060: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002061: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002063: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002064: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002065: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002066: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002067: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002069: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000206a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000206b: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000206c: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000206d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000206e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000206f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002070: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002071: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002073: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002074: DUP3                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002075: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002076: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002077: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002078: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002079: PUSH2 0x20d4                   // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000207c: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000207d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000207f: MUL                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002080: DUP3                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002081: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002082: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002083: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002084: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002085: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002086: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002088: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002089: SHA3                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000208a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000208b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000208c: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000208d: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000208e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      0000208f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002090: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002091: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002094: EXP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002095: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002096: DIV                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00002097: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020ac: AND                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020ad: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020c2: AND                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020c3: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020c4: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020c5: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020c7: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020c8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020c9: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020cb: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020cc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020cd: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020ce: DUP4                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020cf: GT                             // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020d0: PUSH2 0x208b                   // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020d3: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020d4: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020d5: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020d6: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020d7: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020d8: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020d9: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020da: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020db: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      000020dc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      000020dd: JUMP                           // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
[001] 000020de: JUMPDEST                       // test/BasePaymaster.t.sol: 56:5-64:6 (2308-2841)
[001] 000020df: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00002100: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00002101: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00002102: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 57:9-57:17 (2353-2361)
[001] 00002117: AND                            // test/BasePaymaster.t.sol: 57:9-57:17 (2353-2361)
[001] 00002118: PUSH4 0xca669fa7               // test/BasePaymaster.t.sol: 57:9-57:17 (2353-2361)
[001] 0000211d: PUSH1 0x20                     // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 0000211f: PUSH0                          // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 00002120: SWAP1                          // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 00002121: SLOAD                          // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 00002122: SWAP1                          // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 00002123: PUSH2 0x100                    // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 00002126: EXP                            // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 00002127: SWAP1                          // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 00002128: DIV                            // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 00002129: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 0000213e: AND                            // test/BasePaymaster.t.sol: 57:18-57:32 (2362-2376)
[001] 0000213f: PUSH1 0x40                     // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002141: MLOAD                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002142: DUP3                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002143: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002148: AND                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002149: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000214b: SHL                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000214c: DUP2                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000214d: MSTORE                         // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000214e: PUSH1 0x4                      // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002150: ADD                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002151: PUSH2 0x215a                   // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002154: SWAP2                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002155: SWAP1                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002156: PUSH2 0x2fda                   // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002159: JUMP                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000215a: JUMPDEST                       // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000215b: PUSH0                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000215c: PUSH1 0x40                     // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000215e: MLOAD                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000215f: DUP1                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002160: DUP4                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002161: SUB                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002162: DUP2                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002163: PUSH0                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002164: DUP8                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002165: DUP1                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002166: EXTCODESIZE                    // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002167: ISZERO                         // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002168: DUP1                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002169: ISZERO                         // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000216a: PUSH2 0x2171                   // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000216d: JUMPI                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      0000216e: PUSH0                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      0000216f: DUP1                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      00002170: REVERT                         // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002171: JUMPDEST                       // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002172: POP                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002173: GAS                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002174: CALL                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002175: ISZERO                         // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002176: DUP1                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002177: ISZERO                         // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002178: PUSH2 0x2183                   // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 0000217b: JUMPI                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      0000217c: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      0000217d: PUSH0                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      0000217e: DUP1                           // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      0000217f: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      00002180: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      00002181: PUSH0                          // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
      00002182: REVERT                         // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002183: JUMPDEST                       // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002184: POP                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002185: POP                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002186: POP                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002187: POP                            // test/BasePaymaster.t.sol: 57:9-57:33 (2353-2377)
[001] 00002188: PUSH1 0x24                     // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 0000218a: PUSH0                          // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 0000218b: SWAP1                          // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 0000218c: SLOAD                          // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 0000218d: SWAP1                          // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 0000218e: PUSH2 0x100                    // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 00002191: EXP                            // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 00002192: SWAP1                          // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 00002193: DIV                            // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 00002194: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 000021a9: AND                            // test/BasePaymaster.t.sol: 58:23-58:32 (2401-2410)
[001] 000021aa: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 58:9-58:44 (2387-2422)
[001] 000021bf: AND                            // test/BasePaymaster.t.sol: 58:9-58:44 (2387-2422)
[001] 000021c0: PUSH4 0x205c2878               // test/BasePaymaster.t.sol: 58:9-58:44 (2387-2422)
[001] 000021c5: PUSH1 0x22                     // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021c7: PUSH0                          // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021c8: SWAP1                          // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021c9: SLOAD                          // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021ca: SWAP1                          // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021cb: PUSH2 0x100                    // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021ce: EXP                            // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021cf: SWAP1                          // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021d0: DIV                            // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021d1: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021e6: AND                            // test/BasePaymaster.t.sol: 58:53-58:57 (2431-2435)
[001] 000021e7: PUSH32 0x56bc75e2d63100000     // test/BasePaymaster.t.sol: 58:60-58:85 (2438-2463)
[001] 00002208: PUSH1 0x40                     // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000220a: MLOAD                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000220b: DUP4                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000220c: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002211: AND                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002212: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002214: SHL                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002215: DUP2                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002216: MSTORE                         // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002217: PUSH1 0x4                      // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002219: ADD                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000221a: PUSH2 0x2224                   // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000221d: SWAP3                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000221e: SWAP2                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000221f: SWAP1                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002220: PUSH2 0x38d6                   // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002223: JUMP                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002224: JUMPDEST                       // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002225: PUSH0                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002226: PUSH1 0x40                     // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002228: MLOAD                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002229: DUP1                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000222a: DUP4                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000222b: SUB                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000222c: DUP2                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000222d: PUSH0                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000222e: DUP8                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000222f: DUP1                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002230: EXTCODESIZE                    // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002231: ISZERO                         // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002232: DUP1                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002233: ISZERO                         // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002234: PUSH2 0x223b                   // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002237: JUMPI                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      00002238: PUSH0                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      00002239: DUP1                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      0000223a: REVERT                         // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000223b: JUMPDEST                       // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000223c: POP                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000223d: GAS                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000223e: CALL                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000223f: ISZERO                         // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002240: DUP1                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002241: ISZERO                         // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002242: PUSH2 0x224d                   // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002245: JUMPI                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      00002246: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      00002247: PUSH0                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      00002248: DUP1                           // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      00002249: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      0000224a: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      0000224b: PUSH0                          // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
      0000224c: REVERT                         // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000224d: JUMPDEST                       // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000224e: POP                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 0000224f: POP                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002250: POP                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002251: POP                            // test/BasePaymaster.t.sol: 58:9-58:86 (2387-2464)
[001] 00002252: PUSH0                          // test/BasePaymaster.t.sol: 59:9-59:46 (2474-2511)
[001] 00002253: PUSH1 0x27                     // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 00002255: PUSH0                          // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 00002256: SWAP1                          // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 00002257: SLOAD                          // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 00002258: SWAP1                          // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 00002259: PUSH2 0x100                    // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 0000225c: EXP                            // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 0000225d: SWAP1                          // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 0000225e: DIV                            // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 0000225f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 00002274: AND                            // test/BasePaymaster.t.sol: 59:63-59:73 (2528-2538)
[001] 00002275: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 59:49-59:89 (2514-2554)
[001] 0000228a: AND                            // test/BasePaymaster.t.sol: 59:49-59:89 (2514-2554)
[001] 0000228b: PUSH4 0x5287ce12               // test/BasePaymaster.t.sol: 59:49-59:89 (2514-2554)
[001] 00002290: PUSH1 0x24                     // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 00002292: PUSH0                          // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 00002293: SWAP1                          // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 00002294: SLOAD                          // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 00002295: SWAP1                          // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 00002296: PUSH2 0x100                    // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 00002299: EXP                            // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 0000229a: SWAP1                          // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 0000229b: DIV                            // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 0000229c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 000022b1: AND                            // test/BasePaymaster.t.sol: 59:98-59:107 (2563-2572)
[001] 000022b2: PUSH1 0x40                     // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022b4: MLOAD                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022b5: DUP3                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022b6: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022bb: AND                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022bc: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022be: SHL                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022bf: DUP2                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022c0: MSTORE                         // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022c1: PUSH1 0x4                      // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022c3: ADD                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022c4: PUSH2 0x22cd                   // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022c7: SWAP2                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022c8: SWAP1                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022c9: PUSH2 0x2fda                   // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022cc: JUMP                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022cd: JUMPDEST                       // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022ce: PUSH1 0xa0                     // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022d0: PUSH1 0x40                     // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022d2: MLOAD                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022d3: DUP1                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022d4: DUP4                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022d5: SUB                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022d6: DUP2                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022d7: DUP7                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022d8: GAS                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022d9: STATICCALL                     // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022da: ISZERO                         // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022db: DUP1                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022dc: ISZERO                         // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022dd: PUSH2 0x22e8                   // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022e0: JUMPI                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
      000022e1: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
      000022e2: PUSH0                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
      000022e3: DUP1                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
      000022e4: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
      000022e5: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
      000022e6: PUSH0                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
      000022e7: REVERT                         // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022e8: JUMPDEST                       // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022e9: POP                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022ea: POP                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022eb: POP                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022ec: POP                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022ed: PUSH1 0x40                     // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022ef: MLOAD                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022f0: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022f1: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022f3: NOT                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022f4: PUSH1 0x1f                     // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022f6: DUP3                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022f7: ADD                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022f8: AND                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022f9: DUP3                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022fa: ADD                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022fb: DUP1                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022fc: PUSH1 0x40                     // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022fe: MSTORE                         // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 000022ff: POP                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 00002300: DUP2                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 00002301: ADD                            // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 00002302: SWAP1                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 00002303: PUSH2 0x230c                   // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 00002306: SWAP2                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 00002307: SWAP1                          // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 00002308: PUSH2 0x32db                   // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 0000230b: JUMP                           // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 0000230c: JUMPDEST                       // test/BasePaymaster.t.sol: 59:49-59:109 (2514-2574)
[001] 0000230d: SWAP1                          // test/BasePaymaster.t.sol: 59:9-59:109 (2474-2574)
[001] 0000230e: POP                            // test/BasePaymaster.t.sol: 59:9-59:109 (2474-2574)
[001] 0000230f: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00002330: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00002331: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00002332: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 60:9-60:20 (2584-2595)
[001] 00002347: AND                            // test/BasePaymaster.t.sol: 60:9-60:20 (2584-2595)
[001] 00002348: PUSH4 0x88b44c85               // test/BasePaymaster.t.sol: 60:9-60:20 (2584-2595)
[001] 0000234d: DUP3                           // test/BasePaymaster.t.sol: 60:21-60:25 (2596-2600)
[001] 0000234e: PUSH0                          // test/BasePaymaster.t.sol: 60:21-60:33 (2596-2608)
[001] 0000234f: ADD                            // test/BasePaymaster.t.sol: 60:21-60:33 (2596-2608)
[001] 00002350: MLOAD                          // test/BasePaymaster.t.sol: 60:21-60:33 (2596-2608)
[001] 00002351: PUSH0                          // test/BasePaymaster.t.sol: 60:35-60:36 (2610-2611)
[001] 00002352: PUSH1 0x40                     // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002354: MLOAD                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002355: DUP4                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002356: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000235b: AND                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000235c: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000235e: SHL                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000235f: DUP2                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002360: MSTORE                         // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002361: PUSH1 0x4                      // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002363: ADD                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002364: PUSH2 0x236e                   // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002367: SWAP3                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002368: SWAP2                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002369: SWAP1                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000236a: PUSH2 0x3993                   // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000236d: JUMP                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000236e: JUMPDEST                       // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000236f: PUSH0                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002370: PUSH1 0x40                     // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002372: MLOAD                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002373: DUP1                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002374: DUP4                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002375: SUB                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002376: DUP2                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002377: DUP7                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002378: DUP1                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002379: EXTCODESIZE                    // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000237a: ISZERO                         // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000237b: DUP1                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000237c: ISZERO                         // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000237d: PUSH2 0x2384                   // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002380: JUMPI                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      00002381: PUSH0                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      00002382: DUP1                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      00002383: REVERT                         // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002384: JUMPDEST                       // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002385: POP                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002386: GAS                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002387: STATICCALL                     // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002388: ISZERO                         // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002389: DUP1                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000238a: ISZERO                         // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000238b: PUSH2 0x2396                   // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000238e: JUMPI                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      0000238f: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      00002390: PUSH0                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      00002391: DUP1                           // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      00002392: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      00002393: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      00002394: PUSH0                          // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
      00002395: REVERT                         // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002396: JUMPDEST                       // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002397: POP                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002398: POP                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 00002399: POP                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000239a: POP                            // test/BasePaymaster.t.sol: 60:9-60:106 (2584-2681)
[001] 0000239b: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 000023bc: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000023bd: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000023be: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 61:9-61:20 (2691-2702)
[001] 000023d3: AND                            // test/BasePaymaster.t.sol: 61:9-61:20 (2691-2702)
[001] 000023d4: PUSH4 0x88b44c85               // test/BasePaymaster.t.sol: 61:9-61:20 (2691-2702)
[001] 000023d9: PUSH1 0x22                     // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023db: PUSH0                          // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023dc: SWAP1                          // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023dd: SLOAD                          // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023de: SWAP1                          // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023df: PUSH2 0x100                    // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023e2: EXP                            // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023e3: SWAP1                          // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023e4: DIV                            // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023e5: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023fa: AND                            // test/BasePaymaster.t.sol: 62:13-62:17 (2716-2720)
[001] 000023fb: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BasePaymaster.t.sol: 62:13-62:25 (2716-2728)
[001] 00002410: AND                            // test/BasePaymaster.t.sol: 62:13-62:25 (2716-2728)
[001] 00002411: BALANCE                        // test/BasePaymaster.t.sol: 62:13-62:25 (2716-2728)
[001] 00002412: PUSH32 0x56bc75e2d63100000     // test/BasePaymaster.t.sol: 62:27-62:52 (2730-2755)
[001] 00002433: PUSH1 0x40                     // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002435: MLOAD                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002436: DUP4                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002437: PUSH4 0xffffffff               // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000243c: AND                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000243d: PUSH1 0xe0                     // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000243f: SHL                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002440: DUP2                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002441: MSTORE                         // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002442: PUSH1 0x4                      // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002444: ADD                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002445: PUSH2 0x244f                   // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002448: SWAP3                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002449: SWAP2                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000244a: SWAP1                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000244b: PUSH2 0x3a63                   // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000244e: JUMP                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000244f: JUMPDEST                       // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002450: PUSH0                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002451: PUSH1 0x40                     // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002453: MLOAD                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002454: DUP1                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002455: DUP4                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002456: SUB                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002457: DUP2                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002458: DUP7                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002459: DUP1                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000245a: EXTCODESIZE                    // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000245b: ISZERO                         // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000245c: DUP1                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000245d: ISZERO                         // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000245e: PUSH2 0x2465                   // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002461: JUMPI                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002462: PUSH0                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002463: DUP1                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002464: REVERT                         // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002465: JUMPDEST                       // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002466: POP                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002467: GAS                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002468: STATICCALL                     // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002469: ISZERO                         // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000246a: DUP1                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000246b: ISZERO                         // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000246c: PUSH2 0x2477                   // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000246f: JUMPI                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002470: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002471: PUSH0                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002472: DUP1                           // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002473: RETURNDATACOPY                 // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002474: RETURNDATASIZE                 // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002475: PUSH0                          // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
      00002476: REVERT                         // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002477: JUMPDEST                       // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002478: POP                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 00002479: POP                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000247a: POP                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000247b: POP                            // test/BasePaymaster.t.sol: 61:9-63:10 (2691-2834)
[001] 0000247c: POP                            // test/BasePaymaster.t.sol: 56:40-64:6 (2343-2841)
[001] 0000247d: JUMP                           // test/BasePaymaster.t.sol: 56:5-64:6 (2308-2841)
      0000247e: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000247f: PUSH1 0x1f                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002481: PUSH0                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002482: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002483: SLOAD                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002484: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002485: PUSH2 0x100                    // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002488: EXP                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002489: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000248a: DIV                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000248b: PUSH1 0xff                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000248d: AND                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000248e: DUP2                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000248f: JUMP                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
[006] 00002490: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[006] 00002491: PUSH0                          // lib/forge-std/src/StdCheats.sol: 539:69-539:81 (20503-20515)
[006] 00002492: PUSH2 0x249a                   // lib/forge-std/src/StdCheats.sol: 540:19-540:39 (20537-20557)
[006] 00002495: DUP3                           // lib/forge-std/src/StdCheats.sol: 540:34-540:38 (20552-20556)
[006] 00002496: PUSH2 0x24a4                   // lib/forge-std/src/StdCheats.sol: 540:19-540:33 (20537-20551)
[006] 00002499: JUMP                           // lib/forge-std/src/StdCheats.sol: 540:19-540:39 (20537-20557)
[006] 0000249a: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 540:19-540:39 (20537-20557)
[006] 0000249b: POP                            // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[006] 0000249c: DUP1                           // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[006] 0000249d: SWAP2                          // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[006] 0000249e: POP                            // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[006] 0000249f: POP                            // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[006] 000024a0: SWAP2                          // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[006] 000024a1: SWAP1                          // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[006] 000024a2: POP                            // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[006] 000024a3: JUMP                           // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[018] 000024a4: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[018] 000024a5: PUSH0                          // lib/forge-std/src/StdCheats.sol: 532:75-532:87 (20228-20240)
[018] 000024a6: DUP1                           // lib/forge-std/src/StdCheats.sol: 532:89-532:107 (20242-20260)
[018] 000024a7: DUP3                           // lib/forge-std/src/StdCheats.sol: 533:57-533:61 (20320-20324)
[018] 000024a8: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024aa: MLOAD                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024ab: PUSH1 0x20                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024ad: ADD                            // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024ae: PUSH2 0x24b7                   // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024b1: SWAP2                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024b2: SWAP1                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024b3: PUSH2 0x3ad7                   // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024b6: JUMP                           // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024b7: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024b8: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024ba: MLOAD                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024bb: PUSH1 0x20                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024bd: DUP2                           // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024be: DUP4                           // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024bf: SUB                            // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024c0: SUB                            // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024c1: DUP2                           // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024c2: MSTORE                         // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024c3: SWAP1                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024c4: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024c6: MSTORE                         // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[018] 000024c7: DUP1                           // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[018] 000024c8: MLOAD                          // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[018] 000024c9: SWAP1                          // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[018] 000024ca: PUSH1 0x20                     // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[018] 000024cc: ADD                            // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[018] 000024cd: SHA3                           // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[018] 000024ce: PUSH0                          // lib/forge-std/src/StdCheats.sol: 533:22-533:64 (20285-20327)
[018] 000024cf: SHR                            // lib/forge-std/src/StdCheats.sol: 533:22-533:64 (20285-20327)
[018] 000024d0: SWAP1                          // lib/forge-std/src/StdCheats.sol: 533:9-533:64 (20272-20327)
[018] 000024d1: POP                            // lib/forge-std/src/StdCheats.sol: 533:9-533:64 (20272-20327)
[018] 000024d2: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdCheats.sol: 11:57-11:85 (318-346)
[018] 000024f3: PUSH0                          // lib/forge-std/src/StdCheats.sol: 11:49-11:86 (310-347)
[018] 000024f4: SHR                            // lib/forge-std/src/StdCheats.sol: 11:49-11:86 (310-347)
[018] 000024f5: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdCheats.sol: 534:16-534:23 (20344-20351)
[018] 0000250a: AND                            // lib/forge-std/src/StdCheats.sol: 534:16-534:23 (20344-20351)
[018] 0000250b: PUSH4 0xffa18649               // lib/forge-std/src/StdCheats.sol: 534:16-534:23 (20344-20351)
[018] 00002510: DUP3                           // lib/forge-std/src/StdCheats.sol: 534:24-534:34 (20352-20362)
[018] 00002511: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002513: MLOAD                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002514: DUP3                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002515: PUSH4 0xffffffff               // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000251a: AND                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000251b: PUSH1 0xe0                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000251d: SHL                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000251e: DUP2                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000251f: MSTORE                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002520: PUSH1 0x4                      // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002522: ADD                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002523: PUSH2 0x252c                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002526: SWAP2                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002527: SWAP1                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002528: PUSH2 0x3099                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000252b: JUMP                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000252c: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000252d: PUSH1 0x20                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000252f: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002531: MLOAD                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002532: DUP1                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002533: DUP4                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002534: SUB                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002535: DUP2                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002536: DUP7                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002537: GAS                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002538: STATICCALL                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002539: ISZERO                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000253a: DUP1                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000253b: ISZERO                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000253c: PUSH2 0x2547                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000253f: JUMPI                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00002540: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00002541: PUSH0                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00002542: DUP1                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00002543: RETURNDATACOPY                 // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00002544: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00002545: PUSH0                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00002546: REVERT                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002547: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002548: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002549: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000254a: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000254b: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000254c: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000254e: MLOAD                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000254f: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002550: PUSH1 0x1f                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002552: NOT                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002553: PUSH1 0x1f                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002555: DUP3                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002556: ADD                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002557: AND                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002558: DUP3                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002559: ADD                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000255a: DUP1                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000255b: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000255d: MSTORE                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000255e: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000255f: DUP2                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002560: ADD                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002561: SWAP1                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002562: PUSH2 0x256b                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002565: SWAP2                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002566: SWAP1                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 00002567: PUSH2 0x366c                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000256a: JUMP                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000256b: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[018] 0000256c: SWAP2                          // lib/forge-std/src/StdCheats.sol: 534:9-534:35 (20337-20363)
[018] 0000256d: POP                            // lib/forge-std/src/StdCheats.sol: 534:9-534:35 (20337-20363)
[018] 0000256e: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdCheats.sol: 11:57-11:85 (318-346)
[018] 0000258f: PUSH0                          // lib/forge-std/src/StdCheats.sol: 11:49-11:86 (310-347)
[018] 00002590: SHR                            // lib/forge-std/src/StdCheats.sol: 11:49-11:86 (310-347)
[018] 00002591: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdCheats.sol: 535:9-535:17 (20373-20381)
[018] 000025a6: AND                            // lib/forge-std/src/StdCheats.sol: 535:9-535:17 (20373-20381)
[018] 000025a7: PUSH4 0xc657c718               // lib/forge-std/src/StdCheats.sol: 535:9-535:17 (20373-20381)
[018] 000025ac: DUP4                           // lib/forge-std/src/StdCheats.sol: 535:18-535:22 (20382-20386)
[018] 000025ad: DUP6                           // lib/forge-std/src/StdCheats.sol: 535:24-535:28 (20388-20392)
[018] 000025ae: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025b0: MLOAD                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025b1: DUP4                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025b2: PUSH4 0xffffffff               // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025b7: AND                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025b8: PUSH1 0xe0                     // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025ba: SHL                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025bb: DUP2                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025bc: MSTORE                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025bd: PUSH1 0x4                      // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025bf: ADD                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025c0: PUSH2 0x25ca                   // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025c3: SWAP3                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025c4: SWAP2                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025c5: SWAP1                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025c6: PUSH2 0x3b25                   // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025c9: JUMP                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025ca: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025cb: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025cc: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025ce: MLOAD                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025cf: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d0: DUP4                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d1: SUB                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d2: DUP2                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d3: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d4: DUP8                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d5: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d6: EXTCODESIZE                    // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d7: ISZERO                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d8: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025d9: ISZERO                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025da: PUSH2 0x25e1                   // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025dd: JUMPI                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025de: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025df: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025e0: REVERT                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025e1: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025e2: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025e3: GAS                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025e4: CALL                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025e5: ISZERO                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025e6: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025e7: ISZERO                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025e8: PUSH2 0x25f3                   // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025eb: JUMPI                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025ec: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025ed: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025ee: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025ef: RETURNDATACOPY                 // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025f0: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025f1: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      000025f2: REVERT                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025f3: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025f4: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025f5: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025f6: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025f7: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[018] 000025f8: SWAP2                          // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[018] 000025f9: POP                            // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[018] 000025fa: SWAP2                          // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[018] 000025fb: JUMP                           // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[002] 000025fc: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 107:5-109:6 (3454-3564)
[002] 000025fd: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
[002] 0000261e: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[002] 0000261f: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[002] 00002620: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdAssertions.sol: 108:9-108:20 (3533-3544)
[002] 00002635: AND                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:20 (3533-3544)
[002] 00002636: PUSH4 0x515361f6               // lib/forge-std/src/StdAssertions.sol: 108:9-108:20 (3533-3544)
[002] 0000263b: DUP4                           // lib/forge-std/src/StdAssertions.sol: 108:21-108:25 (3545-3549)
[002] 0000263c: DUP4                           // lib/forge-std/src/StdAssertions.sol: 108:27-108:32 (3551-3556)
[002] 0000263d: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000263f: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002640: DUP4                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002641: PUSH4 0xffffffff               // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002646: AND                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002647: PUSH1 0xe0                     // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002649: SHL                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000264a: DUP2                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000264b: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000264c: PUSH1 0x4                      // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000264e: ADD                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000264f: PUSH2 0x2659                   // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002652: SWAP3                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002653: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002654: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002655: PUSH2 0x2df2                   // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002658: JUMP                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002659: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000265a: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000265b: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000265d: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000265e: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000265f: DUP4                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002660: SUB                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002661: DUP2                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002662: DUP7                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002663: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002664: EXTCODESIZE                    // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002665: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002666: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002667: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002668: PUSH2 0x266f                   // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000266b: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      0000266c: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      0000266d: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      0000266e: REVERT                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 0000266f: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002670: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002671: GAS                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002672: STATICCALL                     // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002673: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002674: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002675: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002676: PUSH2 0x2681                   // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002679: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      0000267a: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      0000267b: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      0000267c: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      0000267d: RETURNDATACOPY                 // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      0000267e: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      0000267f: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      00002680: REVERT                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002681: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002682: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002683: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002684: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002685: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[002] 00002686: POP                            // lib/forge-std/src/StdAssertions.sol: 107:5-109:6 (3454-3564)
[002] 00002687: POP                            // lib/forge-std/src/StdAssertions.sol: 107:5-109:6 (3454-3564)
[002] 00002688: JUMP                           // lib/forge-std/src/StdAssertions.sol: 107:5-109:6 (3454-3564)
[007] 00002689: JUMPDEST                      
[007] 0000268a: PUSH2 0x2c6c                  
[007] 0000268d: DUP1                          
[007] 0000268e: PUSH3 0x3b54                  
[007] 00002692: DUP4                          
[007] 00002693: CODECOPY                      
[007] 00002694: ADD                           
[007] 00002695: SWAP1                         
[007] 00002696: JUMP                          
[006] 00002697: JUMPDEST                      
[006] 00002698: PUSH2 0x67db                  
[006] 0000269b: DUP1                          
[006] 0000269c: PUSH3 0x67c0                  
[006] 000026a0: DUP4                          
[006] 000026a1: CODECOPY                      
[006] 000026a2: ADD                           
[006] 000026a3: SWAP1                         
[006] 000026a4: JUMP                          
[006] 000026a5: JUMPDEST                      
[006] 000026a6: PUSH2 0x3a74                  
[006] 000026a9: DUP1                          
[006] 000026aa: PUSH3 0xcf9b                  
[006] 000026ae: DUP4                          
[006] 000026af: CODECOPY                      
[006] 000026b0: ADD                           
[006] 000026b1: SWAP1                         
[006] 000026b2: JUMP                          
      000026b3: JUMPDEST                       // SRCID115: (7-121)
      000026b4: PUSH0                          // SRCID115: (74-80)
      000026b5: DUP2                           // SRCID115: (108-113)
      000026b6: MLOAD                          // SRCID115: (102-114)
      000026b7: SWAP1                          // SRCID115: (92-114)
      000026b8: POP                            // SRCID115: (92-114)
      000026b9: SWAP2                          // SRCID115: (7-121)
      000026ba: SWAP1                          // SRCID115: (7-121)
      000026bb: POP                            // SRCID115: (7-121)
      000026bc: JUMP                           // SRCID115: (7-121)
      000026bd: JUMPDEST                       // SRCID115: (127-311)
      000026be: PUSH0                          // SRCID115: (226-237)
      000026bf: DUP3                           // SRCID115: (260-266)
      000026c0: DUP3                           // SRCID115: (255-258)
      000026c1: MSTORE                         // SRCID115: (248-267)
      000026c2: PUSH1 0x20                     // SRCID115: (300-304)
      000026c4: DUP3                           // SRCID115: (295-298)
      000026c5: ADD                            // SRCID115: (291-305)
      000026c6: SWAP1                          // SRCID115: (276-305)
      000026c7: POP                            // SRCID115: (276-305)
      000026c8: SWAP3                          // SRCID115: (127-311)
      000026c9: SWAP2                          // SRCID115: (127-311)
      000026ca: POP                            // SRCID115: (127-311)
      000026cb: POP                            // SRCID115: (127-311)
      000026cc: JUMP                           // SRCID115: (127-311)
      000026cd: JUMPDEST                       // SRCID115: (317-449)
      000026ce: PUSH0                          // SRCID115: (384-388)
      000026cf: DUP2                           // SRCID115: (407-410)
      000026d0: SWAP1                          // SRCID115: (399-410)
      000026d1: POP                            // SRCID115: (399-410)
      000026d2: PUSH1 0x20                     // SRCID115: (437-441)
      000026d4: DUP3                           // SRCID115: (432-435)
      000026d5: ADD                            // SRCID115: (428-442)
      000026d6: SWAP1                          // SRCID115: (420-442)
      000026d7: POP                            // SRCID115: (420-442)
      000026d8: SWAP2                          // SRCID115: (317-449)
      000026d9: SWAP1                          // SRCID115: (317-449)
      000026da: POP                            // SRCID115: (317-449)
      000026db: JUMP                           // SRCID115: (317-449)
[098] 000026dc: JUMPDEST                       // SRCID115: (455-581)
[098] 000026dd: PUSH0                          // SRCID115: (492-499)
[098] 000026de: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // SRCID115: (532-574)
[098] 000026f3: DUP3                           // SRCID115: (525-530)
[098] 000026f4: AND                            // SRCID115: (521-575)
[098] 000026f5: SWAP1                          // SRCID115: (510-575)
[098] 000026f6: POP                            // SRCID115: (510-575)
[098] 000026f7: SWAP2                          // SRCID115: (455-581)
[098] 000026f8: SWAP1                          // SRCID115: (455-581)
[098] 000026f9: POP                            // SRCID115: (455-581)
[098] 000026fa: JUMP                           // SRCID115: (455-581)
[076] 000026fb: JUMPDEST                       // SRCID115: (587-683)
[076] 000026fc: PUSH0                          // SRCID115: (624-631)
[076] 000026fd: PUSH2 0x2705                   // SRCID115: (653-677)
[076] 00002700: DUP3                           // SRCID115: (671-676)
[076] 00002701: PUSH2 0x26dc                   // SRCID115: (653-677)
[076] 00002704: JUMP                           // SRCID115: (653-677)
[076] 00002705: JUMPDEST                       // SRCID115: (653-677)
[076] 00002706: SWAP1                          // SRCID115: (642-677)
[076] 00002707: POP                            // SRCID115: (642-677)
[076] 00002708: SWAP2                          // SRCID115: (587-683)
[076] 00002709: SWAP1                          // SRCID115: (587-683)
[076] 0000270a: POP                            // SRCID115: (587-683)
[076] 0000270b: JUMP                           // SRCID115: (587-683)
      0000270c: JUMPDEST                       // SRCID115: (689-797)
      0000270d: PUSH2 0x2715                   // SRCID115: (766-790)
      00002710: DUP2                           // SRCID115: (784-789)
      00002711: PUSH2 0x26fb                   // SRCID115: (766-790)
      00002714: JUMP                           // SRCID115: (766-790)
      00002715: JUMPDEST                       // SRCID115: (766-790)
      00002716: DUP3                           // SRCID115: (761-764)
      00002717: MSTORE                         // SRCID115: (754-791)
      00002718: POP                            // SRCID115: (689-797)
      00002719: POP                            // SRCID115: (689-797)
      0000271a: JUMP                           // SRCID115: (689-797)
      0000271b: JUMPDEST                       // SRCID115: (803-982)
      0000271c: PUSH0                          // SRCID115: (872-882)
      0000271d: PUSH2 0x2726                   // SRCID115: (893-939)
      00002720: DUP4                           // SRCID115: (935-938)
      00002721: DUP4                           // SRCID115: (927-933)
      00002722: PUSH2 0x270c                   // SRCID115: (893-939)
      00002725: JUMP                           // SRCID115: (893-939)
      00002726: JUMPDEST                       // SRCID115: (893-939)
      00002727: PUSH1 0x20                     // SRCID115: (971-975)
      00002729: DUP4                           // SRCID115: (966-969)
      0000272a: ADD                            // SRCID115: (962-976)
      0000272b: SWAP1                          // SRCID115: (948-976)
      0000272c: POP                            // SRCID115: (948-976)
      0000272d: SWAP3                          // SRCID115: (803-982)
      0000272e: SWAP2                          // SRCID115: (803-982)
      0000272f: POP                            // SRCID115: (803-982)
      00002730: POP                            // SRCID115: (803-982)
      00002731: JUMP                           // SRCID115: (803-982)
      00002732: JUMPDEST                       // SRCID115: (988-1101)
      00002733: PUSH0                          // SRCID115: (1058-1062)
      00002734: PUSH1 0x20                     // SRCID115: (1090-1094)
      00002736: DUP3                           // SRCID115: (1085-1088)
      00002737: ADD                            // SRCID115: (1081-1095)
      00002738: SWAP1                          // SRCID115: (1073-1095)
      00002739: POP                            // SRCID115: (1073-1095)
      0000273a: SWAP2                          // SRCID115: (988-1101)
      0000273b: SWAP1                          // SRCID115: (988-1101)
      0000273c: POP                            // SRCID115: (988-1101)
      0000273d: JUMP                           // SRCID115: (988-1101)
      0000273e: JUMPDEST                       // SRCID115: (1137-1869)
      0000273f: PUSH0                          // SRCID115: (1256-1259)
      00002740: PUSH2 0x2748                   // SRCID115: (1285-1339)
      00002743: DUP3                           // SRCID115: (1333-1338)
      00002744: PUSH2 0x26b3                   // SRCID115: (1285-1339)
      00002747: JUMP                           // SRCID115: (1285-1339)
      00002748: JUMPDEST                       // SRCID115: (1285-1339)
      00002749: PUSH2 0x2752                   // SRCID115: (1355-1441)
      0000274c: DUP2                           // SRCID115: (1434-1440)
      0000274d: DUP6                           // SRCID115: (1429-1432)
      0000274e: PUSH2 0x26bd                   // SRCID115: (1355-1441)
      00002751: JUMP                           // SRCID115: (1355-1441)
      00002752: JUMPDEST                       // SRCID115: (1355-1441)
      00002753: SWAP4                          // SRCID115: (1348-1441)
      00002754: POP                            // SRCID115: (1348-1441)
      00002755: PUSH2 0x275d                   // SRCID115: (1465-1521)
      00002758: DUP4                           // SRCID115: (1515-1520)
      00002759: PUSH2 0x26cd                   // SRCID115: (1465-1521)
      0000275c: JUMP                           // SRCID115: (1465-1521)
      0000275d: JUMPDEST                       // SRCID115: (1465-1521)
      0000275e: DUP1                           // SRCID115: (1544-1551)
      0000275f: PUSH0                          // SRCID115: (1575-1576)
      00002760: JUMPDEST                       // SRCID115: (1560-1844)
      00002761: DUP4                           // SRCID115: (1585-1591)
      00002762: DUP2                           // SRCID115: (1582-1583)
      00002763: LT                             // SRCID115: (1579-1592)
      00002764: ISZERO                         // SRCID115: (1560-1844)
      00002765: PUSH2 0x278d                   // SRCID115: (1560-1844)
      00002768: JUMPI                          // SRCID115: (1560-1844)
      00002769: DUP2                           // SRCID115: (1661-1667)
      0000276a: MLOAD                          // SRCID115: (1655-1668)
      0000276b: PUSH2 0x2774                   // SRCID115: (1688-1751)
      0000276e: DUP9                           // SRCID115: (1747-1750)
      0000276f: DUP3                           // SRCID115: (1732-1745)
      00002770: PUSH2 0x271b                   // SRCID115: (1688-1751)
      00002773: JUMP                           // SRCID115: (1688-1751)
      00002774: JUMPDEST                       // SRCID115: (1688-1751)
      00002775: SWAP8                          // SRCID115: (1681-1751)
      00002776: POP                            // SRCID115: (1681-1751)
      00002777: PUSH2 0x277f                   // SRCID115: (1774-1834)
      0000277a: DUP4                           // SRCID115: (1827-1833)
      0000277b: PUSH2 0x2732                   // SRCID115: (1774-1834)
      0000277e: JUMP                           // SRCID115: (1774-1834)
      0000277f: JUMPDEST                       // SRCID115: (1774-1834)
      00002780: SWAP3                          // SRCID115: (1764-1834)
      00002781: POP                            // SRCID115: (1764-1834)
      00002782: POP                            // SRCID115: (1620-1844)
      00002783: PUSH1 0x1                      // SRCID115: (1607-1608)
      00002785: DUP2                           // SRCID115: (1604-1605)
      00002786: ADD                            // SRCID115: (1600-1609)
      00002787: SWAP1                          // SRCID115: (1595-1609)
      00002788: POP                            // SRCID115: (1595-1609)
      00002789: PUSH2 0x2760                   // SRCID115: (1560-1844)
      0000278c: JUMP                           // SRCID115: (1560-1844)
      0000278d: JUMPDEST                       // SRCID115: (1560-1844)
      0000278e: POP                            // SRCID115: (1564-1578)
      0000278f: DUP6                           // SRCID115: (1860-1863)
      00002790: SWAP4                          // SRCID115: (1853-1863)
      00002791: POP                            // SRCID115: (1853-1863)
      00002792: POP                            // SRCID115: (1261-1869)
      00002793: POP                            // SRCID115: (1261-1869)
      00002794: POP                            // SRCID115: (1261-1869)
      00002795: SWAP3                          // SRCID115: (1137-1869)
      00002796: SWAP2                          // SRCID115: (1137-1869)
      00002797: POP                            // SRCID115: (1137-1869)
      00002798: POP                            // SRCID115: (1137-1869)
      00002799: JUMP                           // SRCID115: (1137-1869)
      0000279a: JUMPDEST                       // SRCID115: (1875-2248)
      0000279b: PUSH0                          // SRCID115: (2018-2022)
      0000279c: PUSH1 0x20                     // SRCID115: (2056-2058)
      0000279e: DUP3                           // SRCID115: (2045-2054)
      0000279f: ADD                            // SRCID115: (2041-2059)
      000027a0: SWAP1                          // SRCID115: (2033-2059)
      000027a1: POP                            // SRCID115: (2033-2059)
      000027a2: DUP2                           // SRCID115: (2105-2114)
      000027a3: DUP2                           // SRCID115: (2099-2103)
      000027a4: SUB                            // SRCID115: (2095-2115)
      000027a5: PUSH0                          // SRCID115: (2091-2092)
      000027a6: DUP4                           // SRCID115: (2080-2089)
      000027a7: ADD                            // SRCID115: (2076-2093)
      000027a8: MSTORE                         // SRCID115: (2069-2116)
      000027a9: PUSH2 0x27b2                   // SRCID115: (2133-2241)
      000027ac: DUP2                           // SRCID115: (2236-2240)
      000027ad: DUP5                           // SRCID115: (2227-2233)
      000027ae: PUSH2 0x273e                   // SRCID115: (2133-2241)
      000027b1: JUMP                           // SRCID115: (2133-2241)
      000027b2: JUMPDEST                       // SRCID115: (2133-2241)
      000027b3: SWAP1                          // SRCID115: (2125-2241)
      000027b4: POP                            // SRCID115: (2125-2241)
      000027b5: SWAP3                          // SRCID115: (1875-2248)
      000027b6: SWAP2                          // SRCID115: (1875-2248)
      000027b7: POP                            // SRCID115: (1875-2248)
      000027b8: POP                            // SRCID115: (1875-2248)
      000027b9: JUMP                           // SRCID115: (1875-2248)
      000027ba: JUMPDEST                       // SRCID115: (2254-2399)
      000027bb: PUSH0                          // SRCID115: (2352-2358)
      000027bc: DUP2                           // SRCID115: (2386-2391)
      000027bd: MLOAD                          // SRCID115: (2380-2392)
      000027be: SWAP1                          // SRCID115: (2370-2392)
      000027bf: POP                            // SRCID115: (2370-2392)
      000027c0: SWAP2                          // SRCID115: (2254-2399)
      000027c1: SWAP1                          // SRCID115: (2254-2399)
      000027c2: POP                            // SRCID115: (2254-2399)
      000027c3: JUMP                           // SRCID115: (2254-2399)
      000027c4: JUMPDEST                       // SRCID115: (2405-2620)
      000027c5: PUSH0                          // SRCID115: (2535-2546)
      000027c6: DUP3                           // SRCID115: (2569-2575)
      000027c7: DUP3                           // SRCID115: (2564-2567)
      000027c8: MSTORE                         // SRCID115: (2557-2576)
      000027c9: PUSH1 0x20                     // SRCID115: (2609-2613)
      000027cb: DUP3                           // SRCID115: (2604-2607)
      000027cc: ADD                            // SRCID115: (2600-2614)
      000027cd: SWAP1                          // SRCID115: (2585-2614)
      000027ce: POP                            // SRCID115: (2585-2614)
      000027cf: SWAP3                          // SRCID115: (2405-2620)
      000027d0: SWAP2                          // SRCID115: (2405-2620)
      000027d1: POP                            // SRCID115: (2405-2620)
      000027d2: POP                            // SRCID115: (2405-2620)
      000027d3: JUMP                           // SRCID115: (2405-2620)
      000027d4: JUMPDEST                       // SRCID115: (2626-2789)
      000027d5: PUSH0                          // SRCID115: (2724-2728)
      000027d6: DUP2                           // SRCID115: (2747-2750)
      000027d7: SWAP1                          // SRCID115: (2739-2750)
      000027d8: POP                            // SRCID115: (2739-2750)
      000027d9: PUSH1 0x20                     // SRCID115: (2777-2781)
      000027db: DUP3                           // SRCID115: (2772-2775)
      000027dc: ADD                            // SRCID115: (2768-2782)
      000027dd: SWAP1                          // SRCID115: (2760-2782)
      000027de: POP                            // SRCID115: (2760-2782)
      000027df: SWAP2                          // SRCID115: (2626-2789)
      000027e0: SWAP1                          // SRCID115: (2626-2789)
      000027e1: POP                            // SRCID115: (2626-2789)
      000027e2: JUMP                           // SRCID115: (2626-2789)
      000027e3: JUMPDEST                       // SRCID115: (2795-2919)
      000027e4: PUSH0                          // SRCID115: (2872-2878)
      000027e5: DUP2                           // SRCID115: (2906-2911)
      000027e6: MLOAD                          // SRCID115: (2900-2912)
      000027e7: SWAP1                          // SRCID115: (2890-2912)
      000027e8: POP                            // SRCID115: (2890-2912)
      000027e9: SWAP2                          // SRCID115: (2795-2919)
      000027ea: SWAP1                          // SRCID115: (2795-2919)
      000027eb: POP                            // SRCID115: (2795-2919)
      000027ec: JUMP                           // SRCID115: (2795-2919)
      000027ed: JUMPDEST                       // SRCID115: (2925-3109)
      000027ee: PUSH0                          // SRCID115: (3024-3035)
      000027ef: DUP3                           // SRCID115: (3058-3064)
      000027f0: DUP3                           // SRCID115: (3053-3056)
      000027f1: MSTORE                         // SRCID115: (3046-3065)
      000027f2: PUSH1 0x20                     // SRCID115: (3098-3102)
      000027f4: DUP3                           // SRCID115: (3093-3096)
      000027f5: ADD                            // SRCID115: (3089-3103)
      000027f6: SWAP1                          // SRCID115: (3074-3103)
      000027f7: POP                            // SRCID115: (3074-3103)
      000027f8: SWAP3                          // SRCID115: (2925-3109)
      000027f9: SWAP2                          // SRCID115: (2925-3109)
      000027fa: POP                            // SRCID115: (2925-3109)
      000027fb: POP                            // SRCID115: (2925-3109)
      000027fc: JUMP                           // SRCID115: (2925-3109)
      000027fd: JUMPDEST                       // SRCID115: (3115-3257)
      000027fe: PUSH0                          // SRCID115: (3192-3196)
      000027ff: DUP2                           // SRCID115: (3215-3218)
      00002800: SWAP1                          // SRCID115: (3207-3218)
      00002801: POP                            // SRCID115: (3207-3218)
      00002802: PUSH1 0x20                     // SRCID115: (3245-3249)
      00002804: DUP3                           // SRCID115: (3240-3243)
      00002805: ADD                            // SRCID115: (3236-3250)
      00002806: SWAP1                          // SRCID115: (3228-3250)
      00002807: POP                            // SRCID115: (3228-3250)
      00002808: SWAP2                          // SRCID115: (3115-3257)
      00002809: SWAP1                          // SRCID115: (3115-3257)
      0000280a: POP                            // SRCID115: (3115-3257)
      0000280b: JUMP                           // SRCID115: (3115-3257)
[036] 0000280c: JUMPDEST                       // SRCID115: (3263-3362)
[036] 0000280d: PUSH0                          // SRCID115: (3315-3321)
[036] 0000280e: DUP2                           // SRCID115: (3349-3354)
[036] 0000280f: MLOAD                          // SRCID115: (3343-3355)
[036] 00002810: SWAP1                          // SRCID115: (3333-3355)
[036] 00002811: POP                            // SRCID115: (3333-3355)
[036] 00002812: SWAP2                          // SRCID115: (3263-3362)
[036] 00002813: SWAP1                          // SRCID115: (3263-3362)
[036] 00002814: POP                            // SRCID115: (3263-3362)
[036] 00002815: JUMP                           // SRCID115: (3263-3362)
      00002816: JUMPDEST                       // SRCID115: (3368-3527)
      00002817: PUSH0                          // SRCID115: (3442-3453)
      00002818: DUP3                           // SRCID115: (3476-3482)
      00002819: DUP3                           // SRCID115: (3471-3474)
      0000281a: MSTORE                         // SRCID115: (3464-3483)
      0000281b: PUSH1 0x20                     // SRCID115: (3516-3520)
      0000281d: DUP3                           // SRCID115: (3511-3514)
      0000281e: ADD                            // SRCID115: (3507-3521)
      0000281f: SWAP1                          // SRCID115: (3492-3521)
      00002820: POP                            // SRCID115: (3492-3521)
      00002821: SWAP3                          // SRCID115: (3368-3527)
      00002822: SWAP2                          // SRCID115: (3368-3527)
      00002823: POP                            // SRCID115: (3368-3527)
      00002824: POP                            // SRCID115: (3368-3527)
      00002825: JUMP                           // SRCID115: (3368-3527)
[036] 00002826: JUMPDEST                       // SRCID115: (3533-3672)
[036] 00002827: DUP3                           // SRCID115: (3622-3628)
[036] 00002828: DUP2                           // SRCID115: (3617-3620)
[036] 00002829: DUP4                           // SRCID115: (3612-3615)
[036] 0000282a: MCOPY                          // SRCID115: (3606-3629)
[036] 0000282b: PUSH0                          // SRCID115: (3663-3664)
[036] 0000282c: DUP4                           // SRCID115: (3654-3660)
[036] 0000282d: DUP4                           // SRCID115: (3649-3652)
[036] 0000282e: ADD                            // SRCID115: (3645-3661)
[036] 0000282f: MSTORE                         // SRCID115: (3638-3665)
[036] 00002830: POP                            // SRCID115: (3533-3672)
[036] 00002831: POP                            // SRCID115: (3533-3672)
[036] 00002832: POP                            // SRCID115: (3533-3672)
[036] 00002833: JUMP                           // SRCID115: (3533-3672)
[022] 00002834: JUMPDEST                       // SRCID115: (3678-3780)
[022] 00002835: PUSH0                          // SRCID115: (3719-3725)
[022] 00002836: PUSH1 0x1f                     // SRCID115: (3770-3772)
[022] 00002838: NOT                            // SRCID115: (3766-3773)
[022] 00002839: PUSH1 0x1f                     // SRCID115: (3761-3763)
[022] 0000283b: DUP4                           // SRCID115: (3754-3759)
[022] 0000283c: ADD                            // SRCID115: (3750-3764)
[022] 0000283d: AND                            // SRCID115: (3746-3774)
[022] 0000283e: SWAP1                          // SRCID115: (3736-3774)
[022] 0000283f: POP                            // SRCID115: (3736-3774)
[022] 00002840: SWAP2                          // SRCID115: (3678-3780)
[022] 00002841: SWAP1                          // SRCID115: (3678-3780)
[022] 00002842: POP                            // SRCID115: (3678-3780)
[022] 00002843: JUMP                           // SRCID115: (3678-3780)
      00002844: JUMPDEST                       // SRCID115: (3786-4143)
      00002845: PUSH0                          // SRCID115: (3864-3867)
      00002846: PUSH2 0x284e                   // SRCID115: (3892-3931)
      00002849: DUP3                           // SRCID115: (3925-3930)
      0000284a: PUSH2 0x280c                   // SRCID115: (3892-3931)
      0000284d: JUMP                           // SRCID115: (3892-3931)
      0000284e: JUMPDEST                       // SRCID115: (3892-3931)
      0000284f: PUSH2 0x2858                   // SRCID115: (3947-4008)
      00002852: DUP2                           // SRCID115: (4001-4007)
      00002853: DUP6                           // SRCID115: (3996-3999)
      00002854: PUSH2 0x2816                   // SRCID115: (3947-4008)
      00002857: JUMP                           // SRCID115: (3947-4008)
      00002858: JUMPDEST                       // SRCID115: (3947-4008)
      00002859: SWAP4                          // SRCID115: (3940-4008)
      0000285a: POP                            // SRCID115: (3940-4008)
      0000285b: PUSH2 0x2868                   // SRCID115: (4017-4082)
      0000285e: DUP2                           // SRCID115: (4075-4081)
      0000285f: DUP6                           // SRCID115: (4070-4073)
      00002860: PUSH1 0x20                     // SRCID115: (4063-4067)
      00002862: DUP7                           // SRCID115: (4056-4061)
      00002863: ADD                            // SRCID115: (4052-4068)
      00002864: PUSH2 0x2826                   // SRCID115: (4017-4082)
      00002867: JUMP                           // SRCID115: (4017-4082)
      00002868: JUMPDEST                       // SRCID115: (4017-4082)
      00002869: PUSH2 0x2871                   // SRCID115: (4107-4136)
      0000286c: DUP2                           // SRCID115: (4129-4135)
      0000286d: PUSH2 0x2834                   // SRCID115: (4107-4136)
      00002870: JUMP                           // SRCID115: (4107-4136)
      00002871: JUMPDEST                       // SRCID115: (4107-4136)
      00002872: DUP5                           // SRCID115: (4102-4105)
      00002873: ADD                            // SRCID115: (4098-4137)
      00002874: SWAP2                          // SRCID115: (4091-4137)
      00002875: POP                            // SRCID115: (4091-4137)
      00002876: POP                            // SRCID115: (3868-4143)
      00002877: SWAP3                          // SRCID115: (3786-4143)
      00002878: SWAP2                          // SRCID115: (3786-4143)
      00002879: POP                            // SRCID115: (3786-4143)
      0000287a: POP                            // SRCID115: (3786-4143)
      0000287b: JUMP                           // SRCID115: (3786-4143)
      0000287c: JUMPDEST                       // SRCID115: (4149-4345)
      0000287d: PUSH0                          // SRCID115: (4238-4248)
      0000287e: PUSH2 0x2887                   // SRCID115: (4273-4339)
      00002881: DUP4                           // SRCID115: (4335-4338)
      00002882: DUP4                           // SRCID115: (4327-4333)
      00002883: PUSH2 0x2844                   // SRCID115: (4273-4339)
      00002886: JUMP                           // SRCID115: (4273-4339)
      00002887: JUMPDEST                       // SRCID115: (4273-4339)
      00002888: SWAP1                          // SRCID115: (4259-4339)
      00002889: POP                            // SRCID115: (4259-4339)
      0000288a: SWAP3                          // SRCID115: (4149-4345)
      0000288b: SWAP2                          // SRCID115: (4149-4345)
      0000288c: POP                            // SRCID115: (4149-4345)
      0000288d: POP                            // SRCID115: (4149-4345)
      0000288e: JUMP                           // SRCID115: (4149-4345)
      0000288f: JUMPDEST                       // SRCID115: (4351-4474)
      00002890: PUSH0                          // SRCID115: (4431-4435)
      00002891: PUSH1 0x20                     // SRCID115: (4463-4467)
      00002893: DUP3                           // SRCID115: (4458-4461)
      00002894: ADD                            // SRCID115: (4454-4468)
      00002895: SWAP1                          // SRCID115: (4446-4468)
      00002896: POP                            // SRCID115: (4446-4468)
      00002897: SWAP2                          // SRCID115: (4351-4474)
      00002898: SWAP1                          // SRCID115: (4351-4474)
      00002899: POP                            // SRCID115: (4351-4474)
      0000289a: JUMP                           // SRCID115: (4351-4474)
      0000289b: JUMPDEST                       // SRCID115: (4508-5479)
      0000289c: PUSH0                          // SRCID115: (4637-4640)
      0000289d: PUSH2 0x28a5                   // SRCID115: (4666-4730)
      000028a0: DUP3                           // SRCID115: (4724-4729)
      000028a1: PUSH2 0x27e3                   // SRCID115: (4666-4730)
      000028a4: JUMP                           // SRCID115: (4666-4730)
      000028a5: JUMPDEST                       // SRCID115: (4666-4730)
      000028a6: PUSH2 0x28af                   // SRCID115: (4746-4832)
      000028a9: DUP2                           // SRCID115: (4825-4831)
      000028aa: DUP6                           // SRCID115: (4820-4823)
      000028ab: PUSH2 0x27ed                   // SRCID115: (4746-4832)
      000028ae: JUMP                           // SRCID115: (4746-4832)
      000028af: JUMPDEST                       // SRCID115: (4746-4832)
      000028b0: SWAP4                          // SRCID115: (4739-4832)
      000028b1: POP                            // SRCID115: (4739-4832)
      000028b2: DUP4                           // SRCID115: (4858-4861)
      000028b3: PUSH1 0x20                     // SRCID115: (4903-4907)
      000028b5: DUP3                           // SRCID115: (4895-4901)
      000028b6: MUL                            // SRCID115: (4891-4908)
      000028b7: DUP6                           // SRCID115: (4886-4889)
      000028b8: ADD                            // SRCID115: (4882-4909)
      000028b9: PUSH2 0x28c1                   // SRCID115: (4933-4999)
      000028bc: DUP6                           // SRCID115: (4993-4998)
      000028bd: PUSH2 0x27fd                   // SRCID115: (4933-4999)
      000028c0: JUMP                           // SRCID115: (4933-4999)
      000028c1: JUMPDEST                       // SRCID115: (4933-4999)
      000028c2: DUP1                           // SRCID115: (5022-5029)
      000028c3: PUSH0                          // SRCID115: (5053-5054)
      000028c4: JUMPDEST                       // SRCID115: (5038-5434)
      000028c5: DUP6                           // SRCID115: (5063-5069)
      000028c6: DUP2                           // SRCID115: (5060-5061)
      000028c7: LT                             // SRCID115: (5057-5070)
      000028c8: ISZERO                         // SRCID115: (5038-5434)
      000028c9: PUSH2 0x28fc                   // SRCID115: (5038-5434)
      000028cc: JUMPI                          // SRCID115: (5038-5434)
      000028cd: DUP5                           // SRCID115: (5134-5143)
      000028ce: DUP5                           // SRCID115: (5128-5132)
      000028cf: SUB                            // SRCID115: (5124-5144)
      000028d0: DUP10                          // SRCID115: (5119-5122)
      000028d1: MSTORE                         // SRCID115: (5112-5145)
      000028d2: DUP2                           // SRCID115: (5185-5191)
      000028d3: MLOAD                          // SRCID115: (5179-5192)
      000028d4: PUSH2 0x28dd                   // SRCID115: (5213-5297)
      000028d7: DUP6                           // SRCID115: (5292-5296)
      000028d8: DUP3                           // SRCID115: (5277-5290)
      000028d9: PUSH2 0x287c                   // SRCID115: (5213-5297)
      000028dc: JUMP                           // SRCID115: (5213-5297)
      000028dd: JUMPDEST                       // SRCID115: (5213-5297)
      000028de: SWAP5                          // SRCID115: (5205-5297)
      000028df: POP                            // SRCID115: (5205-5297)
      000028e0: PUSH2 0x28e8                   // SRCID115: (5320-5390)
      000028e3: DUP4                           // SRCID115: (5383-5389)
      000028e4: PUSH2 0x288f                   // SRCID115: (5320-5390)
      000028e7: JUMP                           // SRCID115: (5320-5390)
      000028e8: JUMPDEST                       // SRCID115: (5320-5390)
      000028e9: SWAP3                          // SRCID115: (5310-5390)
      000028ea: POP                            // SRCID115: (5310-5390)
      000028eb: PUSH1 0x20                     // SRCID115: (5419-5423)
      000028ed: DUP11                          // SRCID115: (5414-5417)
      000028ee: ADD                            // SRCID115: (5410-5424)
      000028ef: SWAP10                         // SRCID115: (5403-5424)
      000028f0: POP                            // SRCID115: (5403-5424)
      000028f1: POP                            // SRCID115: (5098-5434)
      000028f2: PUSH1 0x1                      // SRCID115: (5085-5086)
      000028f4: DUP2                           // SRCID115: (5082-5083)
      000028f5: ADD                            // SRCID115: (5078-5087)
      000028f6: SWAP1                          // SRCID115: (5073-5087)
      000028f7: POP                            // SRCID115: (5073-5087)
      000028f8: PUSH2 0x28c4                   // SRCID115: (5038-5434)
      000028fb: JUMP                           // SRCID115: (5038-5434)
      000028fc: JUMPDEST                       // SRCID115: (5038-5434)
      000028fd: POP                            // SRCID115: (5042-5056)
      000028fe: DUP3                           // SRCID115: (5450-5454)
      000028ff: SWAP8                          // SRCID115: (5443-5454)
      00002900: POP                            // SRCID115: (5443-5454)
      00002901: DUP8                           // SRCID115: (5470-5473)
      00002902: SWAP6                          // SRCID115: (5463-5473)
      00002903: POP                            // SRCID115: (5463-5473)
      00002904: POP                            // SRCID115: (4642-5479)
      00002905: POP                            // SRCID115: (4642-5479)
      00002906: POP                            // SRCID115: (4642-5479)
      00002907: POP                            // SRCID115: (4642-5479)
      00002908: POP                            // SRCID115: (4642-5479)
      00002909: SWAP3                          // SRCID115: (4508-5479)
      0000290a: SWAP2                          // SRCID115: (4508-5479)
      0000290b: POP                            // SRCID115: (4508-5479)
      0000290c: POP                            // SRCID115: (4508-5479)
      0000290d: JUMP                           // SRCID115: (4508-5479)
      0000290e: JUMPDEST                       // SRCID115: (5563-6226)
      0000290f: PUSH0                          // SRCID115: (5684-5687)
      00002910: PUSH1 0x40                     // SRCID115: (5720-5724)
      00002912: DUP4                           // SRCID115: (5715-5718)
      00002913: ADD                            // SRCID115: (5711-5725)
      00002914: PUSH0                          // SRCID115: (5807-5811)
      00002915: DUP4                           // SRCID115: (5800-5805)
      00002916: ADD                            // SRCID115: (5796-5812)
      00002917: MLOAD                          // SRCID115: (5790-5813)
      00002918: PUSH2 0x2923                   // SRCID115: (5826-5889)
      0000291b: PUSH0                          // SRCID115: (5883-5887)
      0000291c: DUP7                           // SRCID115: (5878-5881)
      0000291d: ADD                            // SRCID115: (5874-5888)
      0000291e: DUP3                           // SRCID115: (5860-5872)
      0000291f: PUSH2 0x270c                   // SRCID115: (5826-5889)
      00002922: JUMP                           // SRCID115: (5826-5889)
      00002923: JUMPDEST                       // SRCID115: (5826-5889)
      00002924: POP                            // SRCID115: (5735-5899)
      00002925: PUSH1 0x20                     // SRCID115: (5986-5990)
      00002927: DUP4                           // SRCID115: (5979-5984)
      00002928: ADD                            // SRCID115: (5975-5991)
      00002929: MLOAD                          // SRCID115: (5969-5992)
      0000292a: DUP5                           // SRCID115: (6039-6042)
      0000292b: DUP3                           // SRCID115: (6033-6037)
      0000292c: SUB                            // SRCID115: (6029-6043)
      0000292d: PUSH1 0x20                     // SRCID115: (6022-6026)
      0000292f: DUP7                           // SRCID115: (6017-6020)
      00002930: ADD                            // SRCID115: (6013-6027)
      00002931: MSTORE                         // SRCID115: (6006-6044)
      00002932: PUSH2 0x293b                   // SRCID115: (6065-6188)
      00002935: DUP3                           // SRCID115: (6183-6187)
      00002936: DUP3                           // SRCID115: (6169-6181)
      00002937: PUSH2 0x289b                   // SRCID115: (6065-6188)
      0000293a: JUMP                           // SRCID115: (6065-6188)
      0000293b: JUMPDEST                       // SRCID115: (6065-6188)
      0000293c: SWAP2                          // SRCID115: (6057-6188)
      0000293d: POP                            // SRCID115: (6057-6188)
      0000293e: POP                            // SRCID115: (5909-6199)
      0000293f: DUP1                           // SRCID115: (6216-6220)
      00002940: SWAP2                          // SRCID115: (6209-6220)
      00002941: POP                            // SRCID115: (6209-6220)
      00002942: POP                            // SRCID115: (5689-6226)
      00002943: SWAP3                          // SRCID115: (5563-6226)
      00002944: SWAP2                          // SRCID115: (5563-6226)
      00002945: POP                            // SRCID115: (5563-6226)
      00002946: POP                            // SRCID115: (5563-6226)
      00002947: JUMP                           // SRCID115: (5563-6226)
      00002948: JUMPDEST                       // SRCID115: (6232-6512)
      00002949: PUSH0                          // SRCID115: (6363-6373)
      0000294a: PUSH2 0x2953                   // SRCID115: (6398-6506)
      0000294d: DUP4                           // SRCID115: (6502-6505)
      0000294e: DUP4                           // SRCID115: (6494-6500)
      0000294f: PUSH2 0x290e                   // SRCID115: (6398-6506)
      00002952: JUMP                           // SRCID115: (6398-6506)
      00002953: JUMPDEST                       // SRCID115: (6398-6506)
      00002954: SWAP1                          // SRCID115: (6384-6506)
      00002955: POP                            // SRCID115: (6384-6506)
      00002956: SWAP3                          // SRCID115: (6232-6512)
      00002957: SWAP2                          // SRCID115: (6232-6512)
      00002958: POP                            // SRCID115: (6232-6512)
      00002959: POP                            // SRCID115: (6232-6512)
      0000295a: JUMP                           // SRCID115: (6232-6512)
      0000295b: JUMPDEST                       // SRCID115: (6518-6662)
      0000295c: PUSH0                          // SRCID115: (6619-6623)
      0000295d: PUSH1 0x20                     // SRCID115: (6651-6655)
      0000295f: DUP3                           // SRCID115: (6646-6649)
      00002960: ADD                            // SRCID115: (6642-6656)
      00002961: SWAP1                          // SRCID115: (6634-6656)
      00002962: POP                            // SRCID115: (6634-6656)
      00002963: SWAP2                          // SRCID115: (6518-6662)
      00002964: SWAP1                          // SRCID115: (6518-6662)
      00002965: POP                            // SRCID115: (6518-6662)
      00002966: JUMP                           // SRCID115: (6518-6662)
      00002967: JUMPDEST                       // SRCID115: (6750-7909)
      00002968: PUSH0                          // SRCID115: (6931-6934)
      00002969: PUSH2 0x2971                   // SRCID115: (6960-7045)
      0000296c: DUP3                           // SRCID115: (7039-7044)
      0000296d: PUSH2 0x27ba                   // SRCID115: (6960-7045)
      00002970: JUMP                           // SRCID115: (6960-7045)
      00002971: JUMPDEST                       // SRCID115: (6960-7045)
      00002972: PUSH2 0x297b                   // SRCID115: (7061-7178)
      00002975: DUP2                           // SRCID115: (7171-7177)
      00002976: DUP6                           // SRCID115: (7166-7169)
      00002977: PUSH2 0x27c4                   // SRCID115: (7061-7178)
      0000297a: JUMP                           // SRCID115: (7061-7178)
      0000297b: JUMPDEST                       // SRCID115: (7061-7178)
      0000297c: SWAP4                          // SRCID115: (7054-7178)
      0000297d: POP                            // SRCID115: (7054-7178)
      0000297e: DUP4                           // SRCID115: (7204-7207)
      0000297f: PUSH1 0x20                     // SRCID115: (7249-7253)
      00002981: DUP3                           // SRCID115: (7241-7247)
      00002982: MUL                            // SRCID115: (7237-7254)
      00002983: DUP6                           // SRCID115: (7232-7235)
      00002984: ADD                            // SRCID115: (7228-7255)
      00002985: PUSH2 0x298d                   // SRCID115: (7279-7366)
      00002988: DUP6                           // SRCID115: (7360-7365)
      00002989: PUSH2 0x27d4                   // SRCID115: (7279-7366)
      0000298c: JUMP                           // SRCID115: (7279-7366)
      0000298d: JUMPDEST                       // SRCID115: (7279-7366)
      0000298e: DUP1                           // SRCID115: (7389-7396)
      0000298f: PUSH0                          // SRCID115: (7420-7421)
      00002990: JUMPDEST                       // SRCID115: (7405-7864)
      00002991: DUP6                           // SRCID115: (7430-7436)
      00002992: DUP2                           // SRCID115: (7427-7428)
      00002993: LT                             // SRCID115: (7424-7437)
      00002994: ISZERO                         // SRCID115: (7405-7864)
      00002995: PUSH2 0x29c8                   // SRCID115: (7405-7864)
      00002998: JUMPI                          // SRCID115: (7405-7864)
      00002999: DUP5                           // SRCID115: (7501-7510)
      0000299a: DUP5                           // SRCID115: (7495-7499)
      0000299b: SUB                            // SRCID115: (7491-7511)
      0000299c: DUP10                          // SRCID115: (7486-7489)
      0000299d: MSTORE                         // SRCID115: (7479-7512)
      0000299e: DUP2                           // SRCID115: (7552-7558)
      0000299f: MLOAD                          // SRCID115: (7546-7559)
      000029a0: PUSH2 0x29a9                   // SRCID115: (7580-7706)
      000029a3: DUP6                           // SRCID115: (7701-7705)
      000029a4: DUP3                           // SRCID115: (7686-7699)
      000029a5: PUSH2 0x2948                   // SRCID115: (7580-7706)
      000029a8: JUMP                           // SRCID115: (7580-7706)
      000029a9: JUMPDEST                       // SRCID115: (7580-7706)
      000029aa: SWAP5                          // SRCID115: (7572-7706)
      000029ab: POP                            // SRCID115: (7572-7706)
      000029ac: PUSH2 0x29b4                   // SRCID115: (7729-7820)
      000029af: DUP4                           // SRCID115: (7813-7819)
      000029b0: PUSH2 0x295b                   // SRCID115: (7729-7820)
      000029b3: JUMP                           // SRCID115: (7729-7820)
      000029b4: JUMPDEST                       // SRCID115: (7729-7820)
      000029b5: SWAP3                          // SRCID115: (7719-7820)
      000029b6: POP                            // SRCID115: (7719-7820)
      000029b7: PUSH1 0x20                     // SRCID115: (7849-7853)
      000029b9: DUP11                          // SRCID115: (7844-7847)
      000029ba: ADD                            // SRCID115: (7840-7854)
      000029bb: SWAP10                         // SRCID115: (7833-7854)
      000029bc: POP                            // SRCID115: (7833-7854)
      000029bd: POP                            // SRCID115: (7465-7864)
      000029be: PUSH1 0x1                      // SRCID115: (7452-7453)
      000029c0: DUP2                           // SRCID115: (7449-7450)
      000029c1: ADD                            // SRCID115: (7445-7454)
      000029c2: SWAP1                          // SRCID115: (7440-7454)
      000029c3: POP                            // SRCID115: (7440-7454)
      000029c4: PUSH2 0x2990                   // SRCID115: (7405-7864)
      000029c7: JUMP                           // SRCID115: (7405-7864)
      000029c8: JUMPDEST                       // SRCID115: (7405-7864)
      000029c9: POP                            // SRCID115: (7409-7423)
      000029ca: DUP3                           // SRCID115: (7880-7884)
      000029cb: SWAP8                          // SRCID115: (7873-7884)
      000029cc: POP                            // SRCID115: (7873-7884)
      000029cd: DUP8                           // SRCID115: (7900-7903)
      000029ce: SWAP6                          // SRCID115: (7893-7903)
      000029cf: POP                            // SRCID115: (7893-7903)
      000029d0: POP                            // SRCID115: (6936-7909)
      000029d1: POP                            // SRCID115: (6936-7909)
      000029d2: POP                            // SRCID115: (6936-7909)
      000029d3: POP                            // SRCID115: (6936-7909)
      000029d4: POP                            // SRCID115: (6936-7909)
      000029d5: SWAP3                          // SRCID115: (6750-7909)
      000029d6: SWAP2                          // SRCID115: (6750-7909)
      000029d7: POP                            // SRCID115: (6750-7909)
      000029d8: POP                            // SRCID115: (6750-7909)
      000029d9: JUMP                           // SRCID115: (6750-7909)
      000029da: JUMPDEST                       // SRCID115: (7915-8412)
      000029db: PUSH0                          // SRCID115: (8120-8124)
      000029dc: PUSH1 0x20                     // SRCID115: (8158-8160)
      000029de: DUP3                           // SRCID115: (8147-8156)
      000029df: ADD                            // SRCID115: (8143-8161)
      000029e0: SWAP1                          // SRCID115: (8135-8161)
      000029e1: POP                            // SRCID115: (8135-8161)
      000029e2: DUP2                           // SRCID115: (8207-8216)
      000029e3: DUP2                           // SRCID115: (8201-8205)
      000029e4: SUB                            // SRCID115: (8197-8217)
      000029e5: PUSH0                          // SRCID115: (8193-8194)
      000029e6: DUP4                           // SRCID115: (8182-8191)
      000029e7: ADD                            // SRCID115: (8178-8195)
      000029e8: MSTORE                         // SRCID115: (8171-8218)
      000029e9: PUSH2 0x29f2                   // SRCID115: (8235-8405)
      000029ec: DUP2                           // SRCID115: (8400-8404)
      000029ed: DUP5                           // SRCID115: (8391-8397)
      000029ee: PUSH2 0x2967                   // SRCID115: (8235-8405)
      000029f1: JUMP                           // SRCID115: (8235-8405)
      000029f2: JUMPDEST                       // SRCID115: (8235-8405)
      000029f3: SWAP1                          // SRCID115: (8227-8405)
      000029f4: POP                            // SRCID115: (8227-8405)
      000029f5: SWAP3                          // SRCID115: (7915-8412)
      000029f6: SWAP2                          // SRCID115: (7915-8412)
      000029f7: POP                            // SRCID115: (7915-8412)
      000029f8: POP                            // SRCID115: (7915-8412)
      000029f9: JUMP                           // SRCID115: (7915-8412)
      000029fa: JUMPDEST                       // SRCID115: (8418-8570)
      000029fb: PUSH0                          // SRCID115: (8523-8529)
      000029fc: DUP2                           // SRCID115: (8557-8562)
      000029fd: MLOAD                          // SRCID115: (8551-8563)
      000029fe: SWAP1                          // SRCID115: (8541-8563)
      000029ff: POP                            // SRCID115: (8541-8563)
      00002a00: SWAP2                          // SRCID115: (8418-8570)
      00002a01: SWAP1                          // SRCID115: (8418-8570)
      00002a02: POP                            // SRCID115: (8418-8570)
      00002a03: JUMP                           // SRCID115: (8418-8570)
      00002a04: JUMPDEST                       // SRCID115: (8576-8798)
      00002a05: PUSH0                          // SRCID115: (8713-8724)
      00002a06: DUP3                           // SRCID115: (8747-8753)
      00002a07: DUP3                           // SRCID115: (8742-8745)
      00002a08: MSTORE                         // SRCID115: (8735-8754)
      00002a09: PUSH1 0x20                     // SRCID115: (8787-8791)
      00002a0b: DUP3                           // SRCID115: (8782-8785)
      00002a0c: ADD                            // SRCID115: (8778-8792)
      00002a0d: SWAP1                          // SRCID115: (8763-8792)
      00002a0e: POP                            // SRCID115: (8763-8792)
      00002a0f: SWAP3                          // SRCID115: (8576-8798)
      00002a10: SWAP2                          // SRCID115: (8576-8798)
      00002a11: POP                            // SRCID115: (8576-8798)
      00002a12: POP                            // SRCID115: (8576-8798)
      00002a13: JUMP                           // SRCID115: (8576-8798)
      00002a14: JUMPDEST                       // SRCID115: (8804-8974)
      00002a15: PUSH0                          // SRCID115: (8909-8913)
      00002a16: DUP2                           // SRCID115: (8932-8935)
      00002a17: SWAP1                          // SRCID115: (8924-8935)
      00002a18: POP                            // SRCID115: (8924-8935)
      00002a19: PUSH1 0x20                     // SRCID115: (8962-8966)
      00002a1b: DUP3                           // SRCID115: (8957-8960)
      00002a1c: ADD                            // SRCID115: (8953-8967)
      00002a1d: SWAP1                          // SRCID115: (8945-8967)
      00002a1e: POP                            // SRCID115: (8945-8967)
      00002a1f: SWAP2                          // SRCID115: (8804-8974)
      00002a20: SWAP1                          // SRCID115: (8804-8974)
      00002a21: POP                            // SRCID115: (8804-8974)
      00002a22: JUMP                           // SRCID115: (8804-8974)
      00002a23: JUMPDEST                       // SRCID115: (8980-9093)
      00002a24: PUSH0                          // SRCID115: (9046-9052)
      00002a25: DUP2                           // SRCID115: (9080-9085)
      00002a26: MLOAD                          // SRCID115: (9074-9086)
      00002a27: SWAP1                          // SRCID115: (9064-9086)
      00002a28: POP                            // SRCID115: (9064-9086)
      00002a29: SWAP2                          // SRCID115: (8980-9093)
      00002a2a: SWAP1                          // SRCID115: (8980-9093)
      00002a2b: POP                            // SRCID115: (8980-9093)
      00002a2c: JUMP                           // SRCID115: (8980-9093)
      00002a2d: JUMPDEST                       // SRCID115: (9099-9272)
      00002a2e: PUSH0                          // SRCID115: (9187-9198)
      00002a2f: DUP3                           // SRCID115: (9221-9227)
      00002a30: DUP3                           // SRCID115: (9216-9219)
      00002a31: MSTORE                         // SRCID115: (9209-9228)
      00002a32: PUSH1 0x20                     // SRCID115: (9261-9265)
      00002a34: DUP3                           // SRCID115: (9256-9259)
      00002a35: ADD                            // SRCID115: (9252-9266)
      00002a36: SWAP1                          // SRCID115: (9237-9266)
      00002a37: POP                            // SRCID115: (9237-9266)
      00002a38: SWAP3                          // SRCID115: (9099-9272)
      00002a39: SWAP2                          // SRCID115: (9099-9272)
      00002a3a: POP                            // SRCID115: (9099-9272)
      00002a3b: POP                            // SRCID115: (9099-9272)
      00002a3c: JUMP                           // SRCID115: (9099-9272)
      00002a3d: JUMPDEST                       // SRCID115: (9278-9409)
      00002a3e: PUSH0                          // SRCID115: (9344-9348)
      00002a3f: DUP2                           // SRCID115: (9367-9370)
      00002a40: SWAP1                          // SRCID115: (9359-9370)
      00002a41: POP                            // SRCID115: (9359-9370)
      00002a42: PUSH1 0x20                     // SRCID115: (9397-9401)
      00002a44: DUP3                           // SRCID115: (9392-9395)
      00002a45: ADD                            // SRCID115: (9388-9402)
      00002a46: SWAP1                          // SRCID115: (9380-9402)
      00002a47: POP                            // SRCID115: (9380-9402)
      00002a48: SWAP2                          // SRCID115: (9278-9409)
      00002a49: SWAP1                          // SRCID115: (9278-9409)
      00002a4a: POP                            // SRCID115: (9278-9409)
      00002a4b: JUMP                           // SRCID115: (9278-9409)
      00002a4c: JUMPDEST                       // SRCID115: (9415-9564)
      00002a4d: PUSH0                          // SRCID115: (9451-9458)
      00002a4e: PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000 // SRCID115: (9491-9557)
      00002a6f: DUP3                           // SRCID115: (9484-9489)
      00002a70: AND                            // SRCID115: (9480-9558)
      00002a71: SWAP1                          // SRCID115: (9469-9558)
      00002a72: POP                            // SRCID115: (9469-9558)
      00002a73: SWAP2                          // SRCID115: (9415-9564)
      00002a74: SWAP1                          // SRCID115: (9415-9564)
      00002a75: POP                            // SRCID115: (9415-9564)
      00002a76: JUMP                           // SRCID115: (9415-9564)
      00002a77: JUMPDEST                       // SRCID115: (9570-9675)
      00002a78: PUSH2 0x2a80                   // SRCID115: (9645-9668)
      00002a7b: DUP2                           // SRCID115: (9662-9667)
      00002a7c: PUSH2 0x2a4c                   // SRCID115: (9645-9668)
      00002a7f: JUMP                           // SRCID115: (9645-9668)
      00002a80: JUMPDEST                       // SRCID115: (9645-9668)
      00002a81: DUP3                           // SRCID115: (9640-9643)
      00002a82: MSTORE                         // SRCID115: (9633-9669)
      00002a83: POP                            // SRCID115: (9570-9675)
      00002a84: POP                            // SRCID115: (9570-9675)
      00002a85: JUMP                           // SRCID115: (9570-9675)
      00002a86: JUMPDEST                       // SRCID115: (9681-9856)
      00002a87: PUSH0                          // SRCID115: (9748-9758)
      00002a88: PUSH2 0x2a91                   // SRCID115: (9769-9813)
      00002a8b: DUP4                           // SRCID115: (9809-9812)
      00002a8c: DUP4                           // SRCID115: (9801-9807)
      00002a8d: PUSH2 0x2a77                   // SRCID115: (9769-9813)
      00002a90: JUMP                           // SRCID115: (9769-9813)
      00002a91: JUMPDEST                       // SRCID115: (9769-9813)
      00002a92: PUSH1 0x20                     // SRCID115: (9845-9849)
      00002a94: DUP4                           // SRCID115: (9840-9843)
      00002a95: ADD                            // SRCID115: (9836-9850)
      00002a96: SWAP1                          // SRCID115: (9822-9850)
      00002a97: POP                            // SRCID115: (9822-9850)
      00002a98: SWAP3                          // SRCID115: (9681-9856)
      00002a99: SWAP2                          // SRCID115: (9681-9856)
      00002a9a: POP                            // SRCID115: (9681-9856)
      00002a9b: POP                            // SRCID115: (9681-9856)
      00002a9c: JUMP                           // SRCID115: (9681-9856)
      00002a9d: JUMPDEST                       // SRCID115: (9862-9974)
      00002a9e: PUSH0                          // SRCID115: (9931-9935)
      00002a9f: PUSH1 0x20                     // SRCID115: (9963-9967)
      00002aa1: DUP3                           // SRCID115: (9958-9961)
      00002aa2: ADD                            // SRCID115: (9954-9968)
      00002aa3: SWAP1                          // SRCID115: (9946-9968)
      00002aa4: POP                            // SRCID115: (9946-9968)
      00002aa5: SWAP2                          // SRCID115: (9862-9974)
      00002aa6: SWAP1                          // SRCID115: (9862-9974)
      00002aa7: POP                            // SRCID115: (9862-9974)
      00002aa8: JUMP                           // SRCID115: (9862-9974)
      00002aa9: JUMPDEST                       // SRCID115: (10008-10712)
      00002aaa: PUSH0                          // SRCID115: (10115-10118)
      00002aab: PUSH2 0x2ab3                   // SRCID115: (10144-10197)
      00002aae: DUP3                           // SRCID115: (10191-10196)
      00002aaf: PUSH2 0x2a23                   // SRCID115: (10144-10197)
      00002ab2: JUMP                           // SRCID115: (10144-10197)
      00002ab3: JUMPDEST                       // SRCID115: (10144-10197)
      00002ab4: PUSH2 0x2abd                   // SRCID115: (10213-10288)
      00002ab7: DUP2                           // SRCID115: (10281-10287)
      00002ab8: DUP6                           // SRCID115: (10276-10279)
      00002ab9: PUSH2 0x2a2d                   // SRCID115: (10213-10288)
      00002abc: JUMP                           // SRCID115: (10213-10288)
      00002abd: JUMPDEST                       // SRCID115: (10213-10288)
      00002abe: SWAP4                          // SRCID115: (10206-10288)
      00002abf: POP                            // SRCID115: (10206-10288)
      00002ac0: PUSH2 0x2ac8                   // SRCID115: (10312-10367)
      00002ac3: DUP4                           // SRCID115: (10361-10366)
      00002ac4: PUSH2 0x2a3d                   // SRCID115: (10312-10367)
      00002ac7: JUMP                           // SRCID115: (10312-10367)
      00002ac8: JUMPDEST                       // SRCID115: (10312-10367)
      00002ac9: DUP1                           // SRCID115: (10390-10397)
      00002aca: PUSH0                          // SRCID115: (10421-10422)
      00002acb: JUMPDEST                       // SRCID115: (10406-10687)
      00002acc: DUP4                           // SRCID115: (10431-10437)
      00002acd: DUP2                           // SRCID115: (10428-10429)
      00002ace: LT                             // SRCID115: (10425-10438)
      00002acf: ISZERO                         // SRCID115: (10406-10687)
      00002ad0: PUSH2 0x2af8                   // SRCID115: (10406-10687)
      00002ad3: JUMPI                          // SRCID115: (10406-10687)
      00002ad4: DUP2                           // SRCID115: (10507-10513)
      00002ad5: MLOAD                          // SRCID115: (10501-10514)
      00002ad6: PUSH2 0x2adf                   // SRCID115: (10534-10595)
      00002ad9: DUP9                           // SRCID115: (10591-10594)
      00002ada: DUP3                           // SRCID115: (10576-10589)
      00002adb: PUSH2 0x2a86                   // SRCID115: (10534-10595)
      00002ade: JUMP                           // SRCID115: (10534-10595)
      00002adf: JUMPDEST                       // SRCID115: (10534-10595)
      00002ae0: SWAP8                          // SRCID115: (10527-10595)
      00002ae1: POP                            // SRCID115: (10527-10595)
      00002ae2: PUSH2 0x2aea                   // SRCID115: (10618-10677)
      00002ae5: DUP4                           // SRCID115: (10670-10676)
      00002ae6: PUSH2 0x2a9d                   // SRCID115: (10618-10677)
      00002ae9: JUMP                           // SRCID115: (10618-10677)
      00002aea: JUMPDEST                       // SRCID115: (10618-10677)
      00002aeb: SWAP3                          // SRCID115: (10608-10677)
      00002aec: POP                            // SRCID115: (10608-10677)
      00002aed: POP                            // SRCID115: (10466-10687)
      00002aee: PUSH1 0x1                      // SRCID115: (10453-10454)
      00002af0: DUP2                           // SRCID115: (10450-10451)
      00002af1: ADD                            // SRCID115: (10446-10455)
      00002af2: SWAP1                          // SRCID115: (10441-10455)
      00002af3: POP                            // SRCID115: (10441-10455)
      00002af4: PUSH2 0x2acb                   // SRCID115: (10406-10687)
      00002af7: JUMP                           // SRCID115: (10406-10687)
      00002af8: JUMPDEST                       // SRCID115: (10406-10687)
      00002af9: POP                            // SRCID115: (10410-10424)
      00002afa: DUP6                           // SRCID115: (10703-10706)
      00002afb: SWAP4                          // SRCID115: (10696-10706)
      00002afc: POP                            // SRCID115: (10696-10706)
      00002afd: POP                            // SRCID115: (10120-10712)
      00002afe: POP                            // SRCID115: (10120-10712)
      00002aff: POP                            // SRCID115: (10120-10712)
      00002b00: SWAP3                          // SRCID115: (10008-10712)
      00002b01: SWAP2                          // SRCID115: (10008-10712)
      00002b02: POP                            // SRCID115: (10008-10712)
      00002b03: POP                            // SRCID115: (10008-10712)
      00002b04: JUMP                           // SRCID115: (10008-10712)
      00002b05: JUMPDEST                       // SRCID115: (10810-11540)
      00002b06: PUSH0                          // SRCID115: (10945-10948)
      00002b07: PUSH1 0x40                     // SRCID115: (10981-10985)
      00002b09: DUP4                           // SRCID115: (10976-10979)
      00002b0a: ADD                            // SRCID115: (10972-10986)
      00002b0b: PUSH0                          // SRCID115: (11072-11076)
      00002b0c: DUP4                           // SRCID115: (11065-11070)
      00002b0d: ADD                            // SRCID115: (11061-11077)
      00002b0e: MLOAD                          // SRCID115: (11055-11078)
      00002b0f: DUP5                           // SRCID115: (11125-11128)
      00002b10: DUP3                           // SRCID115: (11119-11123)
      00002b11: SUB                            // SRCID115: (11115-11129)
      00002b12: PUSH0                          // SRCID115: (11108-11112)
      00002b13: DUP7                           // SRCID115: (11103-11106)
      00002b14: ADD                            // SRCID115: (11099-11113)
      00002b15: MSTORE                         // SRCID115: (11092-11130)
      00002b16: PUSH2 0x2b1f                   // SRCID115: (11151-11224)
      00002b19: DUP3                           // SRCID115: (11219-11223)
      00002b1a: DUP3                           // SRCID115: (11205-11217)
      00002b1b: PUSH2 0x2844                   // SRCID115: (11151-11224)
      00002b1e: JUMP                           // SRCID115: (11151-11224)
      00002b1f: JUMPDEST                       // SRCID115: (11151-11224)
      00002b20: SWAP2                          // SRCID115: (11143-11224)
      00002b21: POP                            // SRCID115: (11143-11224)
      00002b22: POP                            // SRCID115: (10996-11235)
      00002b23: PUSH1 0x20                     // SRCID115: (11322-11326)
      00002b25: DUP4                           // SRCID115: (11315-11320)
      00002b26: ADD                            // SRCID115: (11311-11327)
      00002b27: MLOAD                          // SRCID115: (11305-11328)
      00002b28: DUP5                           // SRCID115: (11375-11378)
      00002b29: DUP3                           // SRCID115: (11369-11373)
      00002b2a: SUB                            // SRCID115: (11365-11379)
      00002b2b: PUSH1 0x20                     // SRCID115: (11358-11362)
      00002b2d: DUP7                           // SRCID115: (11353-11356)
      00002b2e: ADD                            // SRCID115: (11349-11363)
      00002b2f: MSTORE                         // SRCID115: (11342-11380)
      00002b30: PUSH2 0x2b39                   // SRCID115: (11401-11502)
      00002b33: DUP3                           // SRCID115: (11497-11501)
      00002b34: DUP3                           // SRCID115: (11483-11495)
      00002b35: PUSH2 0x2aa9                   // SRCID115: (11401-11502)
      00002b38: JUMP                           // SRCID115: (11401-11502)
      00002b39: JUMPDEST                       // SRCID115: (11401-11502)
      00002b3a: SWAP2                          // SRCID115: (11393-11502)
      00002b3b: POP                            // SRCID115: (11393-11502)
      00002b3c: POP                            // SRCID115: (11245-11513)
      00002b3d: DUP1                           // SRCID115: (11530-11534)
      00002b3e: SWAP2                          // SRCID115: (11523-11534)
      00002b3f: POP                            // SRCID115: (11523-11534)
      00002b40: POP                            // SRCID115: (10950-11540)
      00002b41: SWAP3                          // SRCID115: (10810-11540)
      00002b42: SWAP2                          // SRCID115: (10810-11540)
      00002b43: POP                            // SRCID115: (10810-11540)
      00002b44: POP                            // SRCID115: (10810-11540)
      00002b45: JUMP                           // SRCID115: (10810-11540)
      00002b46: JUMPDEST                       // SRCID115: (11546-11854)
      00002b47: PUSH0                          // SRCID115: (11691-11701)
      00002b48: PUSH2 0x2b51                   // SRCID115: (11726-11848)
      00002b4b: DUP4                           // SRCID115: (11844-11847)
      00002b4c: DUP4                           // SRCID115: (11836-11842)
      00002b4d: PUSH2 0x2b05                   // SRCID115: (11726-11848)
      00002b50: JUMP                           // SRCID115: (11726-11848)
      00002b51: JUMPDEST                       // SRCID115: (11726-11848)
      00002b52: SWAP1                          // SRCID115: (11712-11848)
      00002b53: POP                            // SRCID115: (11712-11848)
      00002b54: SWAP3                          // SRCID115: (11546-11854)
      00002b55: SWAP2                          // SRCID115: (11546-11854)
      00002b56: POP                            // SRCID115: (11546-11854)
      00002b57: POP                            // SRCID115: (11546-11854)
      00002b58: JUMP                           // SRCID115: (11546-11854)
      00002b59: JUMPDEST                       // SRCID115: (11860-12011)
      00002b5a: PUSH0                          // SRCID115: (11968-11972)
      00002b5b: PUSH1 0x20                     // SRCID115: (12000-12004)
      00002b5d: DUP3                           // SRCID115: (11995-11998)
      00002b5e: ADD                            // SRCID115: (11991-12005)
      00002b5f: SWAP1                          // SRCID115: (11983-12005)
      00002b60: POP                            // SRCID115: (11983-12005)
      00002b61: SWAP2                          // SRCID115: (11860-12011)
      00002b62: SWAP1                          // SRCID115: (11860-12011)
      00002b63: POP                            // SRCID115: (11860-12011)
      00002b64: JUMP                           // SRCID115: (11860-12011)
      00002b65: JUMPDEST                       // SRCID115: (12113-13328)
      00002b66: PUSH0                          // SRCID115: (12308-12311)
      00002b67: PUSH2 0x2b6f                   // SRCID115: (12337-12429)
      00002b6a: DUP3                           // SRCID115: (12423-12428)
      00002b6b: PUSH2 0x29fa                   // SRCID115: (12337-12429)
      00002b6e: JUMP                           // SRCID115: (12337-12429)
      00002b6f: JUMPDEST                       // SRCID115: (12337-12429)
      00002b70: PUSH2 0x2b79                   // SRCID115: (12445-12569)
      00002b73: DUP2                           // SRCID115: (12562-12568)
      00002b74: DUP6                           // SRCID115: (12557-12560)
      00002b75: PUSH2 0x2a04                   // SRCID115: (12445-12569)
      00002b78: JUMP                           // SRCID115: (12445-12569)
      00002b79: JUMPDEST                       // SRCID115: (12445-12569)
      00002b7a: SWAP4                          // SRCID115: (12438-12569)
      00002b7b: POP                            // SRCID115: (12438-12569)
      00002b7c: DUP4                           // SRCID115: (12595-12598)
      00002b7d: PUSH1 0x20                     // SRCID115: (12640-12644)
      00002b7f: DUP3                           // SRCID115: (12632-12638)
      00002b80: MUL                            // SRCID115: (12628-12645)
      00002b81: DUP6                           // SRCID115: (12623-12626)
      00002b82: ADD                            // SRCID115: (12619-12646)
      00002b83: PUSH2 0x2b8b                   // SRCID115: (12670-12764)
      00002b86: DUP6                           // SRCID115: (12758-12763)
      00002b87: PUSH2 0x2a14                   // SRCID115: (12670-12764)
      00002b8a: JUMP                           // SRCID115: (12670-12764)
      00002b8b: JUMPDEST                       // SRCID115: (12670-12764)
      00002b8c: DUP1                           // SRCID115: (12787-12794)
      00002b8d: PUSH0                          // SRCID115: (12818-12819)
      00002b8e: JUMPDEST                       // SRCID115: (12803-13283)
      00002b8f: DUP6                           // SRCID115: (12828-12834)
      00002b90: DUP2                           // SRCID115: (12825-12826)
      00002b91: LT                             // SRCID115: (12822-12835)
      00002b92: ISZERO                         // SRCID115: (12803-13283)
      00002b93: PUSH2 0x2bc6                   // SRCID115: (12803-13283)
      00002b96: JUMPI                          // SRCID115: (12803-13283)
      00002b97: DUP5                           // SRCID115: (12899-12908)
      00002b98: DUP5                           // SRCID115: (12893-12897)
      00002b99: SUB                            // SRCID115: (12889-12909)
      00002b9a: DUP10                          // SRCID115: (12884-12887)
      00002b9b: MSTORE                         // SRCID115: (12877-12910)
      00002b9c: DUP2                           // SRCID115: (12950-12956)
      00002b9d: MLOAD                          // SRCID115: (12944-12957)
      00002b9e: PUSH2 0x2ba7                   // SRCID115: (12978-13118)
      00002ba1: DUP6                           // SRCID115: (13113-13117)
      00002ba2: DUP3                           // SRCID115: (13098-13111)
      00002ba3: PUSH2 0x2b46                   // SRCID115: (12978-13118)
      00002ba6: JUMP                           // SRCID115: (12978-13118)
      00002ba7: JUMPDEST                       // SRCID115: (12978-13118)
      00002ba8: SWAP5                          // SRCID115: (12970-13118)
      00002ba9: POP                            // SRCID115: (12970-13118)
      00002baa: PUSH2 0x2bb2                   // SRCID115: (13141-13239)
      00002bad: DUP4                           // SRCID115: (13232-13238)
      00002bae: PUSH2 0x2b59                   // SRCID115: (13141-13239)
      00002bb1: JUMP                           // SRCID115: (13141-13239)
      00002bb2: JUMPDEST                       // SRCID115: (13141-13239)
      00002bb3: SWAP3                          // SRCID115: (13131-13239)
      00002bb4: POP                            // SRCID115: (13131-13239)
      00002bb5: PUSH1 0x20                     // SRCID115: (13268-13272)
      00002bb7: DUP11                          // SRCID115: (13263-13266)
      00002bb8: ADD                            // SRCID115: (13259-13273)
      00002bb9: SWAP10                         // SRCID115: (13252-13273)
      00002bba: POP                            // SRCID115: (13252-13273)
      00002bbb: POP                            // SRCID115: (12863-13283)
      00002bbc: PUSH1 0x1                      // SRCID115: (12850-12851)
      00002bbe: DUP2                           // SRCID115: (12847-12848)
      00002bbf: ADD                            // SRCID115: (12843-12852)
      00002bc0: SWAP1                          // SRCID115: (12838-12852)
      00002bc1: POP                            // SRCID115: (12838-12852)
      00002bc2: PUSH2 0x2b8e                   // SRCID115: (12803-13283)
      00002bc5: JUMP                           // SRCID115: (12803-13283)
      00002bc6: JUMPDEST                       // SRCID115: (12803-13283)
      00002bc7: POP                            // SRCID115: (12807-12821)
      00002bc8: DUP3                           // SRCID115: (13299-13303)
      00002bc9: SWAP8                          // SRCID115: (13292-13303)
      00002bca: POP                            // SRCID115: (13292-13303)
      00002bcb: DUP8                           // SRCID115: (13319-13322)
      00002bcc: SWAP6                          // SRCID115: (13312-13322)
      00002bcd: POP                            // SRCID115: (13312-13322)
      00002bce: POP                            // SRCID115: (12313-13328)
      00002bcf: POP                            // SRCID115: (12313-13328)
      00002bd0: POP                            // SRCID115: (12313-13328)
      00002bd1: POP                            // SRCID115: (12313-13328)
      00002bd2: POP                            // SRCID115: (12313-13328)
      00002bd3: SWAP3                          // SRCID115: (12113-13328)
      00002bd4: SWAP2                          // SRCID115: (12113-13328)
      00002bd5: POP                            // SRCID115: (12113-13328)
      00002bd6: POP                            // SRCID115: (12113-13328)
      00002bd7: JUMP                           // SRCID115: (12113-13328)
      00002bd8: JUMPDEST                       // SRCID115: (13334-13859)
      00002bd9: PUSH0                          // SRCID115: (13553-13557)
      00002bda: PUSH1 0x20                     // SRCID115: (13591-13593)
      00002bdc: DUP3                           // SRCID115: (13580-13589)
      00002bdd: ADD                            // SRCID115: (13576-13594)
      00002bde: SWAP1                          // SRCID115: (13568-13594)
      00002bdf: POP                            // SRCID115: (13568-13594)
      00002be0: DUP2                           // SRCID115: (13640-13649)
      00002be1: DUP2                           // SRCID115: (13634-13638)
      00002be2: SUB                            // SRCID115: (13630-13650)
      00002be3: PUSH0                          // SRCID115: (13626-13627)
      00002be4: DUP4                           // SRCID115: (13615-13624)
      00002be5: ADD                            // SRCID115: (13611-13628)
      00002be6: MSTORE                         // SRCID115: (13604-13651)
      00002be7: PUSH2 0x2bf0                   // SRCID115: (13668-13852)
      00002bea: DUP2                           // SRCID115: (13847-13851)
      00002beb: DUP5                           // SRCID115: (13838-13844)
      00002bec: PUSH2 0x2b65                   // SRCID115: (13668-13852)
      00002bef: JUMP                           // SRCID115: (13668-13852)
      00002bf0: JUMPDEST                       // SRCID115: (13668-13852)
      00002bf1: SWAP1                          // SRCID115: (13660-13852)
      00002bf2: POP                            // SRCID115: (13660-13852)
      00002bf3: SWAP3                          // SRCID115: (13334-13859)
      00002bf4: SWAP2                          // SRCID115: (13334-13859)
      00002bf5: POP                            // SRCID115: (13334-13859)
      00002bf6: POP                            // SRCID115: (13334-13859)
      00002bf7: JUMP                           // SRCID115: (13334-13859)
      00002bf8: JUMPDEST                       // SRCID115: (13865-14059)
      00002bf9: PUSH0                          // SRCID115: (13974-13985)
      00002bfa: DUP3                           // SRCID115: (14008-14014)
      00002bfb: DUP3                           // SRCID115: (14003-14006)
      00002bfc: MSTORE                         // SRCID115: (13996-14015)
      00002bfd: PUSH1 0x20                     // SRCID115: (14048-14052)
      00002bff: DUP3                           // SRCID115: (14043-14046)
      00002c00: ADD                            // SRCID115: (14039-14053)
      00002c01: SWAP1                          // SRCID115: (14024-14053)
      00002c02: POP                            // SRCID115: (14024-14053)
      00002c03: SWAP3                          // SRCID115: (13865-14059)
      00002c04: SWAP2                          // SRCID115: (13865-14059)
      00002c05: POP                            // SRCID115: (13865-14059)
      00002c06: POP                            // SRCID115: (13865-14059)
      00002c07: JUMP                           // SRCID115: (13865-14059)
      00002c08: JUMPDEST                       // SRCID115: (14093-15084)
      00002c09: PUSH0                          // SRCID115: (14232-14235)
      00002c0a: PUSH2 0x2c12                   // SRCID115: (14261-14325)
      00002c0d: DUP3                           // SRCID115: (14319-14324)
      00002c0e: PUSH2 0x27e3                   // SRCID115: (14261-14325)
      00002c11: JUMP                           // SRCID115: (14261-14325)
      00002c12: JUMPDEST                       // SRCID115: (14261-14325)
      00002c13: PUSH2 0x2c1c                   // SRCID115: (14341-14437)
      00002c16: DUP2                           // SRCID115: (14430-14436)
      00002c17: DUP6                           // SRCID115: (14425-14428)
      00002c18: PUSH2 0x2bf8                   // SRCID115: (14341-14437)
      00002c1b: JUMP                           // SRCID115: (14341-14437)
      00002c1c: JUMPDEST                       // SRCID115: (14341-14437)
      00002c1d: SWAP4                          // SRCID115: (14334-14437)
      00002c1e: POP                            // SRCID115: (14334-14437)
      00002c1f: DUP4                           // SRCID115: (14463-14466)
      00002c20: PUSH1 0x20                     // SRCID115: (14508-14512)
      00002c22: DUP3                           // SRCID115: (14500-14506)
      00002c23: MUL                            // SRCID115: (14496-14513)
      00002c24: DUP6                           // SRCID115: (14491-14494)
      00002c25: ADD                            // SRCID115: (14487-14514)
      00002c26: PUSH2 0x2c2e                   // SRCID115: (14538-14604)
      00002c29: DUP6                           // SRCID115: (14598-14603)
      00002c2a: PUSH2 0x27fd                   // SRCID115: (14538-14604)
      00002c2d: JUMP                           // SRCID115: (14538-14604)
      00002c2e: JUMPDEST                       // SRCID115: (14538-14604)
      00002c2f: DUP1                           // SRCID115: (14627-14634)
      00002c30: PUSH0                          // SRCID115: (14658-14659)
      00002c31: JUMPDEST                       // SRCID115: (14643-15039)
      00002c32: DUP6                           // SRCID115: (14668-14674)
      00002c33: DUP2                           // SRCID115: (14665-14666)
      00002c34: LT                             // SRCID115: (14662-14675)
      00002c35: ISZERO                         // SRCID115: (14643-15039)
      00002c36: PUSH2 0x2c69                   // SRCID115: (14643-15039)
      00002c39: JUMPI                          // SRCID115: (14643-15039)
      00002c3a: DUP5                           // SRCID115: (14739-14748)
      00002c3b: DUP5                           // SRCID115: (14733-14737)
      00002c3c: SUB                            // SRCID115: (14729-14749)
      00002c3d: DUP10                          // SRCID115: (14724-14727)
      00002c3e: MSTORE                         // SRCID115: (14717-14750)
      00002c3f: DUP2                           // SRCID115: (14790-14796)
      00002c40: MLOAD                          // SRCID115: (14784-14797)
      00002c41: PUSH2 0x2c4a                   // SRCID115: (14818-14902)
      00002c44: DUP6                           // SRCID115: (14897-14901)
      00002c45: DUP3                           // SRCID115: (14882-14895)
      00002c46: PUSH2 0x287c                   // SRCID115: (14818-14902)
      00002c49: JUMP                           // SRCID115: (14818-14902)
      00002c4a: JUMPDEST                       // SRCID115: (14818-14902)
      00002c4b: SWAP5                          // SRCID115: (14810-14902)
      00002c4c: POP                            // SRCID115: (14810-14902)
      00002c4d: PUSH2 0x2c55                   // SRCID115: (14925-14995)
      00002c50: DUP4                           // SRCID115: (14988-14994)
      00002c51: PUSH2 0x288f                   // SRCID115: (14925-14995)
      00002c54: JUMP                           // SRCID115: (14925-14995)
      00002c55: JUMPDEST                       // SRCID115: (14925-14995)
      00002c56: SWAP3                          // SRCID115: (14915-14995)
      00002c57: POP                            // SRCID115: (14915-14995)
      00002c58: PUSH1 0x20                     // SRCID115: (15024-15028)
      00002c5a: DUP11                          // SRCID115: (15019-15022)
      00002c5b: ADD                            // SRCID115: (15015-15029)
      00002c5c: SWAP10                         // SRCID115: (15008-15029)
      00002c5d: POP                            // SRCID115: (15008-15029)
      00002c5e: POP                            // SRCID115: (14703-15039)
      00002c5f: PUSH1 0x1                      // SRCID115: (14690-14691)
      00002c61: DUP2                           // SRCID115: (14687-14688)
      00002c62: ADD                            // SRCID115: (14683-14692)
      00002c63: SWAP1                          // SRCID115: (14678-14692)
      00002c64: POP                            // SRCID115: (14678-14692)
      00002c65: PUSH2 0x2c31                   // SRCID115: (14643-15039)
      00002c68: JUMP                           // SRCID115: (14643-15039)
      00002c69: JUMPDEST                       // SRCID115: (14643-15039)
      00002c6a: POP                            // SRCID115: (14647-14661)
      00002c6b: DUP3                           // SRCID115: (15055-15059)
      00002c6c: SWAP8                          // SRCID115: (15048-15059)
      00002c6d: POP                            // SRCID115: (15048-15059)
      00002c6e: DUP8                           // SRCID115: (15075-15078)
      00002c6f: SWAP6                          // SRCID115: (15068-15078)
      00002c70: POP                            // SRCID115: (15068-15078)
      00002c71: POP                            // SRCID115: (14237-15084)
      00002c72: POP                            // SRCID115: (14237-15084)
      00002c73: POP                            // SRCID115: (14237-15084)
      00002c74: POP                            // SRCID115: (14237-15084)
      00002c75: POP                            // SRCID115: (14237-15084)
      00002c76: SWAP3                          // SRCID115: (14093-15084)
      00002c77: SWAP2                          // SRCID115: (14093-15084)
      00002c78: POP                            // SRCID115: (14093-15084)
      00002c79: POP                            // SRCID115: (14093-15084)
      00002c7a: JUMP                           // SRCID115: (14093-15084)
      00002c7b: JUMPDEST                       // SRCID115: (15090-15503)
      00002c7c: PUSH0                          // SRCID115: (15253-15257)
      00002c7d: PUSH1 0x20                     // SRCID115: (15291-15293)
      00002c7f: DUP3                           // SRCID115: (15280-15289)
      00002c80: ADD                            // SRCID115: (15276-15294)
      00002c81: SWAP1                          // SRCID115: (15268-15294)
      00002c82: POP                            // SRCID115: (15268-15294)
      00002c83: DUP2                           // SRCID115: (15340-15349)
      00002c84: DUP2                           // SRCID115: (15334-15338)
      00002c85: SUB                            // SRCID115: (15330-15350)
      00002c86: PUSH0                          // SRCID115: (15326-15327)
      00002c87: DUP4                           // SRCID115: (15315-15324)
      00002c88: ADD                            // SRCID115: (15311-15328)
      00002c89: MSTORE                         // SRCID115: (15304-15351)
      00002c8a: PUSH2 0x2c93                   // SRCID115: (15368-15496)
      00002c8d: DUP2                           // SRCID115: (15491-15495)
      00002c8e: DUP5                           // SRCID115: (15482-15488)
      00002c8f: PUSH2 0x2c08                   // SRCID115: (15368-15496)
      00002c92: JUMP                           // SRCID115: (15368-15496)
      00002c93: JUMPDEST                       // SRCID115: (15368-15496)
      00002c94: SWAP1                          // SRCID115: (15360-15496)
      00002c95: POP                            // SRCID115: (15360-15496)
      00002c96: SWAP3                          // SRCID115: (15090-15503)
      00002c97: SWAP2                          // SRCID115: (15090-15503)
      00002c98: POP                            // SRCID115: (15090-15503)
      00002c99: POP                            // SRCID115: (15090-15503)
      00002c9a: JUMP                           // SRCID115: (15090-15503)
      00002c9b: JUMPDEST                       // SRCID115: (15509-15653)
      00002c9c: PUSH0                          // SRCID115: (15606-15612)
      00002c9d: DUP2                           // SRCID115: (15640-15645)
      00002c9e: MLOAD                          // SRCID115: (15634-15646)
      00002c9f: SWAP1                          // SRCID115: (15624-15646)
      00002ca0: POP                            // SRCID115: (15624-15646)
      00002ca1: SWAP2                          // SRCID115: (15509-15653)
      00002ca2: SWAP1                          // SRCID115: (15509-15653)
      00002ca3: POP                            // SRCID115: (15509-15653)
      00002ca4: JUMP                           // SRCID115: (15509-15653)
      00002ca5: JUMPDEST                       // SRCID115: (15659-15873)
      00002ca6: PUSH0                          // SRCID115: (15788-15799)
      00002ca7: DUP3                           // SRCID115: (15822-15828)
      00002ca8: DUP3                           // SRCID115: (15817-15820)
      00002ca9: MSTORE                         // SRCID115: (15810-15829)
      00002caa: PUSH1 0x20                     // SRCID115: (15862-15866)
      00002cac: DUP3                           // SRCID115: (15857-15860)
      00002cad: ADD                            // SRCID115: (15853-15867)
      00002cae: SWAP1                          // SRCID115: (15838-15867)
      00002caf: POP                            // SRCID115: (15838-15867)
      00002cb0: SWAP3                          // SRCID115: (15659-15873)
      00002cb1: SWAP2                          // SRCID115: (15659-15873)
      00002cb2: POP                            // SRCID115: (15659-15873)
      00002cb3: POP                            // SRCID115: (15659-15873)
      00002cb4: JUMP                           // SRCID115: (15659-15873)
      00002cb5: JUMPDEST                       // SRCID115: (15879-16041)
      00002cb6: PUSH0                          // SRCID115: (15976-15980)
      00002cb7: DUP2                           // SRCID115: (15999-16002)
      00002cb8: SWAP1                          // SRCID115: (15991-16002)
      00002cb9: POP                            // SRCID115: (15991-16002)
      00002cba: PUSH1 0x20                     // SRCID115: (16029-16033)
      00002cbc: DUP3                           // SRCID115: (16024-16027)
      00002cbd: ADD                            // SRCID115: (16020-16034)
      00002cbe: SWAP1                          // SRCID115: (16012-16034)
      00002cbf: POP                            // SRCID115: (16012-16034)
      00002cc0: SWAP2                          // SRCID115: (15879-16041)
      00002cc1: SWAP1                          // SRCID115: (15879-16041)
      00002cc2: POP                            // SRCID115: (15879-16041)
      00002cc3: JUMP                           // SRCID115: (15879-16041)
      00002cc4: JUMPDEST                       // SRCID115: (16123-16762)
      00002cc5: PUSH0                          // SRCID115: (16242-16245)
      00002cc6: PUSH1 0x40                     // SRCID115: (16278-16282)
      00002cc8: DUP4                           // SRCID115: (16273-16276)
      00002cc9: ADD                            // SRCID115: (16269-16283)
      00002cca: PUSH0                          // SRCID115: (16365-16369)
      00002ccb: DUP4                           // SRCID115: (16358-16363)
      00002ccc: ADD                            // SRCID115: (16354-16370)
      00002ccd: MLOAD                          // SRCID115: (16348-16371)
      00002cce: PUSH2 0x2cd9                   // SRCID115: (16384-16447)
      00002cd1: PUSH0                          // SRCID115: (16441-16445)
      00002cd2: DUP7                           // SRCID115: (16436-16439)
      00002cd3: ADD                            // SRCID115: (16432-16446)
      00002cd4: DUP3                           // SRCID115: (16418-16430)
      00002cd5: PUSH2 0x270c                   // SRCID115: (16384-16447)
      00002cd8: JUMP                           // SRCID115: (16384-16447)
      00002cd9: JUMPDEST                       // SRCID115: (16384-16447)
      00002cda: POP                            // SRCID115: (16293-16457)
      00002cdb: PUSH1 0x20                     // SRCID115: (16544-16548)
      00002cdd: DUP4                           // SRCID115: (16537-16542)
      00002cde: ADD                            // SRCID115: (16533-16549)
      00002cdf: MLOAD                          // SRCID115: (16527-16550)
      00002ce0: DUP5                           // SRCID115: (16597-16600)
      00002ce1: DUP3                           // SRCID115: (16591-16595)
      00002ce2: SUB                            // SRCID115: (16587-16601)
      00002ce3: PUSH1 0x20                     // SRCID115: (16580-16584)
      00002ce5: DUP7                           // SRCID115: (16575-16578)
      00002ce6: ADD                            // SRCID115: (16571-16585)
      00002ce7: MSTORE                         // SRCID115: (16564-16602)
      00002ce8: PUSH2 0x2cf1                   // SRCID115: (16623-16724)
      00002ceb: DUP3                           // SRCID115: (16719-16723)
      00002cec: DUP3                           // SRCID115: (16705-16717)
      00002ced: PUSH2 0x2aa9                   // SRCID115: (16623-16724)
      00002cf0: JUMP                           // SRCID115: (16623-16724)
      00002cf1: JUMPDEST                       // SRCID115: (16623-16724)
      00002cf2: SWAP2                          // SRCID115: (16615-16724)
      00002cf3: POP                            // SRCID115: (16615-16724)
      00002cf4: POP                            // SRCID115: (16467-16735)
      00002cf5: DUP1                           // SRCID115: (16752-16756)
      00002cf6: SWAP2                          // SRCID115: (16745-16756)
      00002cf7: POP                            // SRCID115: (16745-16756)
      00002cf8: POP                            // SRCID115: (16247-16762)
      00002cf9: SWAP3                          // SRCID115: (16123-16762)
      00002cfa: SWAP2                          // SRCID115: (16123-16762)
      00002cfb: POP                            // SRCID115: (16123-16762)
      00002cfc: POP                            // SRCID115: (16123-16762)
      00002cfd: JUMP                           // SRCID115: (16123-16762)
      00002cfe: JUMPDEST                       // SRCID115: (16768-17044)
      00002cff: PUSH0                          // SRCID115: (16897-16907)
      00002d00: PUSH2 0x2d09                   // SRCID115: (16932-17038)
      00002d03: DUP4                           // SRCID115: (17034-17037)
      00002d04: DUP4                           // SRCID115: (17026-17032)
      00002d05: PUSH2 0x2cc4                   // SRCID115: (16932-17038)
      00002d08: JUMP                           // SRCID115: (16932-17038)
      00002d09: JUMPDEST                       // SRCID115: (16932-17038)
      00002d0a: SWAP1                          // SRCID115: (16918-17038)
      00002d0b: POP                            // SRCID115: (16918-17038)
      00002d0c: SWAP3                          // SRCID115: (16768-17044)
      00002d0d: SWAP2                          // SRCID115: (16768-17044)
      00002d0e: POP                            // SRCID115: (16768-17044)
      00002d0f: POP                            // SRCID115: (16768-17044)
      00002d10: JUMP                           // SRCID115: (16768-17044)
      00002d11: JUMPDEST                       // SRCID115: (17050-17193)
      00002d12: PUSH0                          // SRCID115: (17150-17154)
      00002d13: PUSH1 0x20                     // SRCID115: (17182-17186)
      00002d15: DUP3                           // SRCID115: (17177-17180)
      00002d16: ADD                            // SRCID115: (17173-17187)
      00002d17: SWAP1                          // SRCID115: (17165-17187)
      00002d18: POP                            // SRCID115: (17165-17187)
      00002d19: SWAP2                          // SRCID115: (17050-17193)
      00002d1a: SWAP1                          // SRCID115: (17050-17193)
      00002d1b: POP                            // SRCID115: (17050-17193)
      00002d1c: JUMP                           // SRCID115: (17050-17193)
      00002d1d: JUMPDEST                       // SRCID115: (17279-18430)
      00002d1e: PUSH0                          // SRCID115: (17458-17461)
      00002d1f: PUSH2 0x2d27                   // SRCID115: (17487-17571)
      00002d22: DUP3                           // SRCID115: (17565-17570)
      00002d23: PUSH2 0x2c9b                   // SRCID115: (17487-17571)
      00002d26: JUMP                           // SRCID115: (17487-17571)
      00002d27: JUMPDEST                       // SRCID115: (17487-17571)
      00002d28: PUSH2 0x2d31                   // SRCID115: (17587-17703)
      00002d2b: DUP2                           // SRCID115: (17696-17702)
      00002d2c: DUP6                           // SRCID115: (17691-17694)
      00002d2d: PUSH2 0x2ca5                   // SRCID115: (17587-17703)
      00002d30: JUMP                           // SRCID115: (17587-17703)
      00002d31: JUMPDEST                       // SRCID115: (17587-17703)
      00002d32: SWAP4                          // SRCID115: (17580-17703)
      00002d33: POP                            // SRCID115: (17580-17703)
      00002d34: DUP4                           // SRCID115: (17729-17732)
      00002d35: PUSH1 0x20                     // SRCID115: (17774-17778)
      00002d37: DUP3                           // SRCID115: (17766-17772)
      00002d38: MUL                            // SRCID115: (17762-17779)
      00002d39: DUP6                           // SRCID115: (17757-17760)
      00002d3a: ADD                            // SRCID115: (17753-17780)
      00002d3b: PUSH2 0x2d43                   // SRCID115: (17804-17890)
      00002d3e: DUP6                           // SRCID115: (17884-17889)
      00002d3f: PUSH2 0x2cb5                   // SRCID115: (17804-17890)
      00002d42: JUMP                           // SRCID115: (17804-17890)
      00002d43: JUMPDEST                       // SRCID115: (17804-17890)
      00002d44: DUP1                           // SRCID115: (17913-17920)
      00002d45: PUSH0                          // SRCID115: (17944-17945)
      00002d46: JUMPDEST                       // SRCID115: (17929-18385)
      00002d47: DUP6                           // SRCID115: (17954-17960)
      00002d48: DUP2                           // SRCID115: (17951-17952)
      00002d49: LT                             // SRCID115: (17948-17961)
      00002d4a: ISZERO                         // SRCID115: (17929-18385)
      00002d4b: PUSH2 0x2d7e                   // SRCID115: (17929-18385)
      00002d4e: JUMPI                          // SRCID115: (17929-18385)
      00002d4f: DUP5                           // SRCID115: (18025-18034)
      00002d50: DUP5                           // SRCID115: (18019-18023)
      00002d51: SUB                            // SRCID115: (18015-18035)
      00002d52: DUP10                          // SRCID115: (18010-18013)
      00002d53: MSTORE                         // SRCID115: (18003-18036)
      00002d54: DUP2                           // SRCID115: (18076-18082)
      00002d55: MLOAD                          // SRCID115: (18070-18083)
      00002d56: PUSH2 0x2d5f                   // SRCID115: (18104-18228)
      00002d59: DUP6                           // SRCID115: (18223-18227)
      00002d5a: DUP3                           // SRCID115: (18208-18221)
      00002d5b: PUSH2 0x2cfe                   // SRCID115: (18104-18228)
      00002d5e: JUMP                           // SRCID115: (18104-18228)
      00002d5f: JUMPDEST                       // SRCID115: (18104-18228)
      00002d60: SWAP5                          // SRCID115: (18096-18228)
      00002d61: POP                            // SRCID115: (18096-18228)
      00002d62: PUSH2 0x2d6a                   // SRCID115: (18251-18341)
      00002d65: DUP4                           // SRCID115: (18334-18340)
      00002d66: PUSH2 0x2d11                   // SRCID115: (18251-18341)
      00002d69: JUMP                           // SRCID115: (18251-18341)
      00002d6a: JUMPDEST                       // SRCID115: (18251-18341)
      00002d6b: SWAP3                          // SRCID115: (18241-18341)
      00002d6c: POP                            // SRCID115: (18241-18341)
      00002d6d: PUSH1 0x20                     // SRCID115: (18370-18374)
      00002d6f: DUP11                          // SRCID115: (18365-18368)
      00002d70: ADD                            // SRCID115: (18361-18375)
      00002d71: SWAP10                         // SRCID115: (18354-18375)
      00002d72: POP                            // SRCID115: (18354-18375)
      00002d73: POP                            // SRCID115: (17989-18385)
      00002d74: PUSH1 0x1                      // SRCID115: (17976-17977)
      00002d76: DUP2                           // SRCID115: (17973-17974)
      00002d77: ADD                            // SRCID115: (17969-17978)
      00002d78: SWAP1                          // SRCID115: (17964-17978)
      00002d79: POP                            // SRCID115: (17964-17978)
      00002d7a: PUSH2 0x2d46                   // SRCID115: (17929-18385)
      00002d7d: JUMP                           // SRCID115: (17929-18385)
      00002d7e: JUMPDEST                       // SRCID115: (17929-18385)
      00002d7f: POP                            // SRCID115: (17933-17947)
      00002d80: DUP3                           // SRCID115: (18401-18405)
      00002d81: SWAP8                          // SRCID115: (18394-18405)
      00002d82: POP                            // SRCID115: (18394-18405)
      00002d83: DUP8                           // SRCID115: (18421-18424)
      00002d84: SWAP6                          // SRCID115: (18414-18424)
      00002d85: POP                            // SRCID115: (18414-18424)
      00002d86: POP                            // SRCID115: (17463-18430)
      00002d87: POP                            // SRCID115: (17463-18430)
      00002d88: POP                            // SRCID115: (17463-18430)
      00002d89: POP                            // SRCID115: (17463-18430)
      00002d8a: POP                            // SRCID115: (17463-18430)
      00002d8b: SWAP3                          // SRCID115: (17279-18430)
      00002d8c: SWAP2                          // SRCID115: (17279-18430)
      00002d8d: POP                            // SRCID115: (17279-18430)
      00002d8e: POP                            // SRCID115: (17279-18430)
      00002d8f: JUMP                           // SRCID115: (17279-18430)
      00002d90: JUMPDEST                       // SRCID115: (18436-18929)
      00002d91: PUSH0                          // SRCID115: (18639-18643)
      00002d92: PUSH1 0x20                     // SRCID115: (18677-18679)
      00002d94: DUP3                           // SRCID115: (18666-18675)
      00002d95: ADD                            // SRCID115: (18662-18680)
      00002d96: SWAP1                          // SRCID115: (18654-18680)
      00002d97: POP                            // SRCID115: (18654-18680)
      00002d98: DUP2                           // SRCID115: (18726-18735)
      00002d99: DUP2                           // SRCID115: (18720-18724)
      00002d9a: SUB                            // SRCID115: (18716-18736)
      00002d9b: PUSH0                          // SRCID115: (18712-18713)
      00002d9c: DUP4                           // SRCID115: (18701-18710)
      00002d9d: ADD                            // SRCID115: (18697-18714)
      00002d9e: MSTORE                         // SRCID115: (18690-18737)
      00002d9f: PUSH2 0x2da8                   // SRCID115: (18754-18922)
      00002da2: DUP2                           // SRCID115: (18917-18921)
      00002da3: DUP5                           // SRCID115: (18908-18914)
      00002da4: PUSH2 0x2d1d                   // SRCID115: (18754-18922)
      00002da7: JUMP                           // SRCID115: (18754-18922)
      00002da8: JUMPDEST                       // SRCID115: (18754-18922)
      00002da9: SWAP1                          // SRCID115: (18746-18922)
      00002daa: POP                            // SRCID115: (18746-18922)
      00002dab: SWAP3                          // SRCID115: (18436-18929)
      00002dac: SWAP2                          // SRCID115: (18436-18929)
      00002dad: POP                            // SRCID115: (18436-18929)
      00002dae: POP                            // SRCID115: (18436-18929)
      00002daf: JUMP                           // SRCID115: (18436-18929)
[006] 00002db0: JUMPDEST                       // SRCID115: (18935-19025)
[006] 00002db1: PUSH0                          // SRCID115: (18969-18976)
[006] 00002db2: DUP2                           // SRCID115: (19012-19017)
[006] 00002db3: ISZERO                         // SRCID115: (19005-19018)
[006] 00002db4: ISZERO                         // SRCID115: (18998-19019)
[006] 00002db5: SWAP1                          // SRCID115: (18987-19019)
[006] 00002db6: POP                            // SRCID115: (18987-19019)
[006] 00002db7: SWAP2                          // SRCID115: (18935-19025)
[006] 00002db8: SWAP1                          // SRCID115: (18935-19025)
[006] 00002db9: POP                            // SRCID115: (18935-19025)
[006] 00002dba: JUMP                           // SRCID115: (18935-19025)
[002] 00002dbb: JUMPDEST                       // SRCID115: (19031-19140)
[002] 00002dbc: PUSH2 0x2dc4                   // SRCID115: (19112-19133)
[002] 00002dbf: DUP2                           // SRCID115: (19127-19132)
[002] 00002dc0: PUSH2 0x2db0                   // SRCID115: (19112-19133)
[002] 00002dc3: JUMP                           // SRCID115: (19112-19133)
[002] 00002dc4: JUMPDEST                       // SRCID115: (19112-19133)
[002] 00002dc5: DUP3                           // SRCID115: (19107-19110)
[002] 00002dc6: MSTORE                         // SRCID115: (19100-19134)
[002] 00002dc7: POP                            // SRCID115: (19031-19140)
[002] 00002dc8: POP                            // SRCID115: (19031-19140)
[002] 00002dc9: JUMP                           // SRCID115: (19031-19140)
      00002dca: JUMPDEST                       // SRCID115: (19146-19356)
      00002dcb: PUSH0                          // SRCID115: (19233-19237)
      00002dcc: PUSH1 0x20                     // SRCID115: (19271-19273)
      00002dce: DUP3                           // SRCID115: (19260-19269)
      00002dcf: ADD                            // SRCID115: (19256-19274)
      00002dd0: SWAP1                          // SRCID115: (19248-19274)
      00002dd1: POP                            // SRCID115: (19248-19274)
      00002dd2: PUSH2 0x2ddd                   // SRCID115: (19284-19349)
      00002dd5: PUSH0                          // SRCID115: (19346-19347)
      00002dd6: DUP4                           // SRCID115: (19335-19344)
      00002dd7: ADD                            // SRCID115: (19331-19348)
      00002dd8: DUP5                           // SRCID115: (19322-19328)
      00002dd9: PUSH2 0x2dbb                   // SRCID115: (19284-19349)
      00002ddc: JUMP                           // SRCID115: (19284-19349)
      00002ddd: JUMPDEST                       // SRCID115: (19284-19349)
      00002dde: SWAP3                          // SRCID115: (19146-19356)
      00002ddf: SWAP2                          // SRCID115: (19146-19356)
      00002de0: POP                            // SRCID115: (19146-19356)
      00002de1: POP                            // SRCID115: (19146-19356)
      00002de2: JUMP                           // SRCID115: (19146-19356)
[056] 00002de3: JUMPDEST                       // SRCID115: (19362-19480)
[056] 00002de4: PUSH2 0x2dec                   // SRCID115: (19449-19473)
[056] 00002de7: DUP2                           // SRCID115: (19467-19472)
[056] 00002de8: PUSH2 0x26fb                   // SRCID115: (19449-19473)
[056] 00002deb: JUMP                           // SRCID115: (19449-19473)
[056] 00002dec: JUMPDEST                       // SRCID115: (19449-19473)
[056] 00002ded: DUP3                           // SRCID115: (19444-19447)
[056] 00002dee: MSTORE                         // SRCID115: (19437-19474)
[056] 00002def: POP                            // SRCID115: (19362-19480)
[056] 00002df0: POP                            // SRCID115: (19362-19480)
[056] 00002df1: JUMP                           // SRCID115: (19362-19480)
[009] 00002df2: JUMPDEST                       // SRCID115: (19486-19818)
[009] 00002df3: PUSH0                          // SRCID115: (19607-19611)
[009] 00002df4: PUSH1 0x40                     // SRCID115: (19645-19647)
[009] 00002df6: DUP3                           // SRCID115: (19634-19643)
[009] 00002df7: ADD                            // SRCID115: (19630-19648)
[009] 00002df8: SWAP1                          // SRCID115: (19622-19648)
[009] 00002df9: POP                            // SRCID115: (19622-19648)
[009] 00002dfa: PUSH2 0x2e05                   // SRCID115: (19658-19729)
[009] 00002dfd: PUSH0                          // SRCID115: (19726-19727)
[009] 00002dfe: DUP4                           // SRCID115: (19715-19724)
[009] 00002dff: ADD                            // SRCID115: (19711-19728)
[009] 00002e00: DUP6                           // SRCID115: (19702-19708)
[009] 00002e01: PUSH2 0x2de3                   // SRCID115: (19658-19729)
[009] 00002e04: JUMP                           // SRCID115: (19658-19729)
[009] 00002e05: JUMPDEST                       // SRCID115: (19658-19729)
[009] 00002e06: PUSH2 0x2e12                   // SRCID115: (19739-19811)
[009] 00002e09: PUSH1 0x20                     // SRCID115: (19807-19809)
[009] 00002e0b: DUP4                           // SRCID115: (19796-19805)
[009] 00002e0c: ADD                            // SRCID115: (19792-19810)
[009] 00002e0d: DUP5                           // SRCID115: (19783-19789)
[009] 00002e0e: PUSH2 0x2de3                   // SRCID115: (19739-19811)
[009] 00002e11: JUMP                           // SRCID115: (19739-19811)
[009] 00002e12: JUMPDEST                       // SRCID115: (19739-19811)
[009] 00002e13: SWAP4                          // SRCID115: (19486-19818)
[009] 00002e14: SWAP3                          // SRCID115: (19486-19818)
[009] 00002e15: POP                            // SRCID115: (19486-19818)
[009] 00002e16: POP                            // SRCID115: (19486-19818)
[009] 00002e17: POP                            // SRCID115: (19486-19818)
[009] 00002e18: JUMP                           // SRCID115: (19486-19818)
[024] 00002e19: JUMPDEST                       // SRCID115: (19824-19884)
[024] 00002e1a: PUSH0                          // SRCID115: (19852-19855)
[024] 00002e1b: DUP2                           // SRCID115: (19873-19878)
[024] 00002e1c: SWAP1                          // SRCID115: (19866-19878)
[024] 00002e1d: POP                            // SRCID115: (19866-19878)
[024] 00002e1e: SWAP2                          // SRCID115: (19824-19884)
[024] 00002e1f: SWAP1                          // SRCID115: (19824-19884)
[024] 00002e20: POP                            // SRCID115: (19824-19884)
[024] 00002e21: JUMP                           // SRCID115: (19824-19884)
[007] 00002e22: JUMPDEST                       // SRCID115: (19890-20032)
[007] 00002e23: PUSH0                          // SRCID115: (19940-19949)
[007] 00002e24: PUSH2 0x2e3c                   // SRCID115: (19973-20026)
[007] 00002e27: PUSH2 0x2e37                   // SRCID115: (19991-20025)
[007] 00002e2a: PUSH2 0x2e32                   // SRCID115: (20000-20024)
[007] 00002e2d: DUP5                           // SRCID115: (20018-20023)
[007] 00002e2e: PUSH2 0x26dc                   // SRCID115: (20000-20024)
[007] 00002e31: JUMP                           // SRCID115: (20000-20024)
[007] 00002e32: JUMPDEST                       // SRCID115: (20000-20024)
[007] 00002e33: PUSH2 0x2e19                   // SRCID115: (19991-20025)
[007] 00002e36: JUMP                           // SRCID115: (19991-20025)
[007] 00002e37: JUMPDEST                       // SRCID115: (19991-20025)
[007] 00002e38: PUSH2 0x26dc                   // SRCID115: (19973-20026)
[007] 00002e3b: JUMP                           // SRCID115: (19973-20026)
[007] 00002e3c: JUMPDEST                       // SRCID115: (19973-20026)
[007] 00002e3d: SWAP1                          // SRCID115: (19960-20026)
[007] 00002e3e: POP                            // SRCID115: (19960-20026)
[007] 00002e3f: SWAP2                          // SRCID115: (19890-20032)
[007] 00002e40: SWAP1                          // SRCID115: (19890-20032)
[007] 00002e41: POP                            // SRCID115: (19890-20032)
[007] 00002e42: JUMP                           // SRCID115: (19890-20032)
[007] 00002e43: JUMPDEST                       // SRCID115: (20038-20164)
[007] 00002e44: PUSH0                          // SRCID115: (20088-20097)
[007] 00002e45: PUSH2 0x2e4d                   // SRCID115: (20121-20158)
[007] 00002e48: DUP3                           // SRCID115: (20152-20157)
[007] 00002e49: PUSH2 0x2e22                   // SRCID115: (20121-20158)
[007] 00002e4c: JUMP                           // SRCID115: (20121-20158)
[007] 00002e4d: JUMPDEST                       // SRCID115: (20121-20158)
[007] 00002e4e: SWAP1                          // SRCID115: (20108-20158)
[007] 00002e4f: POP                            // SRCID115: (20108-20158)
[007] 00002e50: SWAP2                          // SRCID115: (20038-20164)
[007] 00002e51: SWAP1                          // SRCID115: (20038-20164)
[007] 00002e52: POP                            // SRCID115: (20038-20164)
[007] 00002e53: JUMP                           // SRCID115: (20038-20164)
[006] 00002e54: JUMPDEST                       // SRCID115: (20170-20316)
[006] 00002e55: PUSH0                          // SRCID115: (20240-20249)
[006] 00002e56: PUSH2 0x2e5e                   // SRCID115: (20273-20310)
[006] 00002e59: DUP3                           // SRCID115: (20304-20309)
[006] 00002e5a: PUSH2 0x2e43                   // SRCID115: (20273-20310)
[006] 00002e5d: JUMP                           // SRCID115: (20273-20310)
[006] 00002e5e: JUMPDEST                       // SRCID115: (20273-20310)
[006] 00002e5f: SWAP1                          // SRCID115: (20260-20310)
[006] 00002e60: POP                            // SRCID115: (20260-20310)
[006] 00002e61: SWAP2                          // SRCID115: (20170-20316)
[006] 00002e62: SWAP1                          // SRCID115: (20170-20316)
[006] 00002e63: POP                            // SRCID115: (20170-20316)
[006] 00002e64: JUMP                           // SRCID115: (20170-20316)
[006] 00002e65: JUMPDEST                       // SRCID115: (20322-20493)
[006] 00002e66: PUSH2 0x2e6e                   // SRCID115: (20429-20486)
[006] 00002e69: DUP2                           // SRCID115: (20480-20485)
[006] 00002e6a: PUSH2 0x2e54                   // SRCID115: (20429-20486)
[006] 00002e6d: JUMP                           // SRCID115: (20429-20486)
[006] 00002e6e: JUMPDEST                       // SRCID115: (20429-20486)
[006] 00002e6f: DUP3                           // SRCID115: (20424-20427)
[006] 00002e70: MSTORE                         // SRCID115: (20417-20487)
[006] 00002e71: POP                            // SRCID115: (20322-20493)
[006] 00002e72: POP                            // SRCID115: (20322-20493)
[006] 00002e73: JUMP                           // SRCID115: (20322-20493)
[006] 00002e74: JUMPDEST                       // SRCID115: (20499-20761)
[006] 00002e75: PUSH0                          // SRCID115: (20612-20616)
[006] 00002e76: PUSH1 0x20                     // SRCID115: (20650-20652)
[006] 00002e78: DUP3                           // SRCID115: (20639-20648)
[006] 00002e79: ADD                            // SRCID115: (20635-20653)
[006] 00002e7a: SWAP1                          // SRCID115: (20627-20653)
[006] 00002e7b: POP                            // SRCID115: (20627-20653)
[006] 00002e7c: PUSH2 0x2e87                   // SRCID115: (20663-20754)
[006] 00002e7f: PUSH0                          // SRCID115: (20751-20752)
[006] 00002e80: DUP4                           // SRCID115: (20740-20749)
[006] 00002e81: ADD                            // SRCID115: (20736-20753)
[006] 00002e82: DUP5                           // SRCID115: (20727-20733)
[006] 00002e83: PUSH2 0x2e65                   // SRCID115: (20663-20754)
[006] 00002e86: JUMP                           // SRCID115: (20663-20754)
[006] 00002e87: JUMPDEST                       // SRCID115: (20663-20754)
[006] 00002e88: SWAP3                          // SRCID115: (20499-20761)
[006] 00002e89: SWAP2                          // SRCID115: (20499-20761)
[006] 00002e8a: POP                            // SRCID115: (20499-20761)
[006] 00002e8b: POP                            // SRCID115: (20499-20761)
[006] 00002e8c: JUMP                           // SRCID115: (20499-20761)
[008] 00002e8d: JUMPDEST                       // SRCID115: (20767-20852)
[008] 00002e8e: PUSH0                          // SRCID115: (20812-20819)
[008] 00002e8f: DUP2                           // SRCID115: (20841-20846)
[008] 00002e90: SWAP1                          // SRCID115: (20830-20846)
[008] 00002e91: POP                            // SRCID115: (20830-20846)
[008] 00002e92: SWAP2                          // SRCID115: (20767-20852)
[008] 00002e93: SWAP1                          // SRCID115: (20767-20852)
[008] 00002e94: POP                            // SRCID115: (20767-20852)
[008] 00002e95: JUMP                           // SRCID115: (20767-20852)
[051] 00002e96: JUMPDEST                       // SRCID115: (20858-20935)
[051] 00002e97: PUSH0                          // SRCID115: (20895-20902)
[051] 00002e98: DUP2                           // SRCID115: (20924-20929)
[051] 00002e99: SWAP1                          // SRCID115: (20913-20929)
[051] 00002e9a: POP                            // SRCID115: (20913-20929)
[051] 00002e9b: SWAP2                          // SRCID115: (20858-20935)
[051] 00002e9c: SWAP1                          // SRCID115: (20858-20935)
[051] 00002e9d: POP                            // SRCID115: (20858-20935)
[051] 00002e9e: JUMP                           // SRCID115: (20858-20935)
[008] 00002e9f: JUMPDEST                       // SRCID115: (20941-21099)
[008] 00002ea0: PUSH0                          // SRCID115: (20999-21008)
[008] 00002ea1: PUSH2 0x2eb9                   // SRCID115: (21032-21093)
[008] 00002ea4: PUSH2 0x2eb4                   // SRCID115: (21050-21092)
[008] 00002ea7: PUSH2 0x2eaf                   // SRCID115: (21059-21091)
[008] 00002eaa: DUP5                           // SRCID115: (21085-21090)
[008] 00002eab: PUSH2 0x2e8d                   // SRCID115: (21059-21091)
[008] 00002eae: JUMP                           // SRCID115: (21059-21091)
[008] 00002eaf: JUMPDEST                       // SRCID115: (21059-21091)
[008] 00002eb0: PUSH2 0x2e19                   // SRCID115: (21050-21092)
[008] 00002eb3: JUMP                           // SRCID115: (21050-21092)
[008] 00002eb4: JUMPDEST                       // SRCID115: (21050-21092)
[008] 00002eb5: PUSH2 0x2e96                   // SRCID115: (21032-21093)
[008] 00002eb8: JUMP                           // SRCID115: (21032-21093)
[008] 00002eb9: JUMPDEST                       // SRCID115: (21032-21093)
[008] 00002eba: SWAP1                          // SRCID115: (21019-21093)
[008] 00002ebb: POP                            // SRCID115: (21019-21093)
[008] 00002ebc: SWAP2                          // SRCID115: (20941-21099)
[008] 00002ebd: SWAP1                          // SRCID115: (20941-21099)
[008] 00002ebe: POP                            // SRCID115: (20941-21099)
[008] 00002ebf: JUMP                           // SRCID115: (20941-21099)
[008] 00002ec0: JUMPDEST                       // SRCID115: (21105-21252)
[008] 00002ec1: PUSH2 0x2ec9                   // SRCID115: (21200-21245)
[008] 00002ec4: DUP2                           // SRCID115: (21239-21244)
[008] 00002ec5: PUSH2 0x2e9f                   // SRCID115: (21200-21245)
[008] 00002ec8: JUMP                           // SRCID115: (21200-21245)
[008] 00002ec9: JUMPDEST                       // SRCID115: (21200-21245)
[008] 00002eca: DUP3                           // SRCID115: (21195-21198)
[008] 00002ecb: MSTORE                         // SRCID115: (21188-21246)
[008] 00002ecc: POP                            // SRCID115: (21105-21252)
[008] 00002ecd: POP                            // SRCID115: (21105-21252)
[008] 00002ece: JUMP                           // SRCID115: (21105-21252)
[006] 00002ecf: JUMPDEST                       // SRCID115: (21258-21606)
[006] 00002ed0: PUSH0                          // SRCID115: (21387-21391)
[006] 00002ed1: PUSH1 0x40                     // SRCID115: (21425-21427)
[006] 00002ed3: DUP3                           // SRCID115: (21414-21423)
[006] 00002ed4: ADD                            // SRCID115: (21410-21428)
[006] 00002ed5: SWAP1                          // SRCID115: (21402-21428)
[006] 00002ed6: POP                            // SRCID115: (21402-21428)
[006] 00002ed7: PUSH2 0x2ee2                   // SRCID115: (21438-21509)
[006] 00002eda: PUSH0                          // SRCID115: (21506-21507)
[006] 00002edb: DUP4                           // SRCID115: (21495-21504)
[006] 00002edc: ADD                            // SRCID115: (21491-21508)
[006] 00002edd: DUP6                           // SRCID115: (21482-21488)
[006] 00002ede: PUSH2 0x2de3                   // SRCID115: (21438-21509)
[006] 00002ee1: JUMP                           // SRCID115: (21438-21509)
[006] 00002ee2: JUMPDEST                       // SRCID115: (21438-21509)
[006] 00002ee3: PUSH2 0x2eef                   // SRCID115: (21519-21599)
[006] 00002ee6: PUSH1 0x20                     // SRCID115: (21595-21597)
[006] 00002ee8: DUP4                           // SRCID115: (21584-21593)
[006] 00002ee9: ADD                            // SRCID115: (21580-21598)
[006] 00002eea: DUP5                           // SRCID115: (21571-21577)
[006] 00002eeb: PUSH2 0x2ec0                   // SRCID115: (21519-21599)
[006] 00002eee: JUMP                           // SRCID115: (21519-21599)
[006] 00002eef: JUMPDEST                       // SRCID115: (21519-21599)
[006] 00002ef0: SWAP4                          // SRCID115: (21258-21606)
[006] 00002ef1: SWAP3                          // SRCID115: (21258-21606)
[006] 00002ef2: POP                            // SRCID115: (21258-21606)
[006] 00002ef3: POP                            // SRCID115: (21258-21606)
[006] 00002ef4: POP                            // SRCID115: (21258-21606)
[006] 00002ef5: JUMP                           // SRCID115: (21258-21606)
[004] 00002ef6: JUMPDEST                       // SRCID115: (21612-21687)
[004] 00002ef7: PUSH0                          // SRCID115: (21645-21651)
[004] 00002ef8: PUSH1 0x40                     // SRCID115: (21678-21680)
[004] 00002efa: MLOAD                          // SRCID115: (21672-21681)
[004] 00002efb: SWAP1                          // SRCID115: (21662-21681)
[004] 00002efc: POP                            // SRCID115: (21662-21681)
[004] 00002efd: SWAP1                          // SRCID115: (21612-21687)
[004] 00002efe: JUMP                           // SRCID115: (21612-21687)
      00002eff: JUMPDEST                       // SRCID115: (21693-21810)
      00002f00: PUSH0                          // SRCID115: (21802-21803)
      00002f01: DUP1                           // SRCID115: (21799-21800)
      00002f02: REVERT                         // SRCID115: (21792-21804)
[008] 00002f03: JUMPDEST                       // SRCID115: (21939-22043)
[008] 00002f04: PUSH0                          // SRCID115: (21984-21991)
[008] 00002f05: PUSH2 0x2f0d                   // SRCID115: (22013-22037)
[008] 00002f08: DUP3                           // SRCID115: (22031-22036)
[008] 00002f09: PUSH2 0x26dc                   // SRCID115: (22013-22037)
[008] 00002f0c: JUMP                           // SRCID115: (22013-22037)
[008] 00002f0d: JUMPDEST                       // SRCID115: (22013-22037)
[008] 00002f0e: SWAP1                          // SRCID115: (22002-22037)
[008] 00002f0f: POP                            // SRCID115: (22002-22037)
[008] 00002f10: SWAP2                          // SRCID115: (21939-22043)
[008] 00002f11: SWAP1                          // SRCID115: (21939-22043)
[008] 00002f12: POP                            // SRCID115: (21939-22043)
[008] 00002f13: JUMP                           // SRCID115: (21939-22043)
[006] 00002f14: JUMPDEST                       // SRCID115: (22049-22176)
[006] 00002f15: PUSH0                          // SRCID115: (22109-22116)
[006] 00002f16: PUSH2 0x2f1e                   // SRCID115: (22138-22170)
[006] 00002f19: DUP3                           // SRCID115: (22164-22169)
[006] 00002f1a: PUSH2 0x2f03                   // SRCID115: (22138-22170)
[006] 00002f1d: JUMP                           // SRCID115: (22138-22170)
[006] 00002f1e: JUMPDEST                       // SRCID115: (22138-22170)
[006] 00002f1f: SWAP1                          // SRCID115: (22127-22170)
[006] 00002f20: POP                            // SRCID115: (22127-22170)
[006] 00002f21: SWAP2                          // SRCID115: (22049-22176)
[006] 00002f22: SWAP1                          // SRCID115: (22049-22176)
[006] 00002f23: POP                            // SRCID115: (22049-22176)
[006] 00002f24: JUMP                           // SRCID115: (22049-22176)
[006] 00002f25: JUMPDEST                       // SRCID115: (22182-22350)
[006] 00002f26: PUSH2 0x2f2e                   // SRCID115: (22278-22325)
[006] 00002f29: DUP2                           // SRCID115: (22319-22324)
[006] 00002f2a: PUSH2 0x2f14                   // SRCID115: (22278-22325)
[006] 00002f2d: JUMP                           // SRCID115: (22278-22325)
[006] 00002f2e: JUMPDEST                       // SRCID115: (22278-22325)
[006] 00002f2f: DUP2                           // SRCID115: (22271-22276)
[006] 00002f30: EQ                             // SRCID115: (22268-22326)
[006] 00002f31: PUSH2 0x2f38                   // SRCID115: (22258-22344)
[006] 00002f34: JUMPI                          // SRCID115: (22258-22344)
      00002f35: PUSH0                          // SRCID115: (22340-22341)
      00002f36: DUP1                           // SRCID115: (22337-22338)
      00002f37: REVERT                         // SRCID115: (22330-22342)
[006] 00002f38: JUMPDEST                       // SRCID115: (22258-22344)
[006] 00002f39: POP                            // SRCID115: (22182-22350)
[006] 00002f3a: JUMP                           // SRCID115: (22182-22350)
[006] 00002f3b: JUMPDEST                       // SRCID115: (22356-22545)
[006] 00002f3c: PUSH0                          // SRCID115: (22436-22441)
[006] 00002f3d: DUP2                           // SRCID115: (22467-22473)
[006] 00002f3e: MLOAD                          // SRCID115: (22461-22474)
[006] 00002f3f: SWAP1                          // SRCID115: (22452-22474)
[006] 00002f40: POP                            // SRCID115: (22452-22474)
[006] 00002f41: PUSH2 0x2f49                   // SRCID115: (22483-22539)
[006] 00002f44: DUP2                           // SRCID115: (22533-22538)
[006] 00002f45: PUSH2 0x2f25                   // SRCID115: (22483-22539)
[006] 00002f48: JUMP                           // SRCID115: (22483-22539)
[006] 00002f49: JUMPDEST                       // SRCID115: (22483-22539)
[006] 00002f4a: SWAP3                          // SRCID115: (22356-22545)
[006] 00002f4b: SWAP2                          // SRCID115: (22356-22545)
[006] 00002f4c: POP                            // SRCID115: (22356-22545)
[006] 00002f4d: POP                            // SRCID115: (22356-22545)
[006] 00002f4e: JUMP                           // SRCID115: (22356-22545)
[006] 00002f4f: JUMPDEST                       // SRCID115: (22551-22948)
[006] 00002f50: PUSH0                          // SRCID115: (22644-22650)
[006] 00002f51: PUSH1 0x20                     // SRCID115: (22693-22695)
[006] 00002f53: DUP3                           // SRCID115: (22681-22690)
[006] 00002f54: DUP5                           // SRCID115: (22672-22679)
[006] 00002f55: SUB                            // SRCID115: (22668-22691)
[006] 00002f56: SLT                            // SRCID115: (22664-22696)
[006] 00002f57: ISZERO                         // SRCID115: (22661-22780)
[006] 00002f58: PUSH2 0x2f64                   // SRCID115: (22661-22780)
[006] 00002f5b: JUMPI                          // SRCID115: (22661-22780)
      00002f5c: PUSH2 0x2f63                   // SRCID115: (22699-22778)
      00002f5f: PUSH2 0x2eff                   // SRCID115: (22699-22778)
      00002f62: JUMP                           // SRCID115: (22699-22778)
      00002f63: JUMPDEST                       // SRCID115: (22699-22778)
[006] 00002f64: JUMPDEST                       // SRCID115: (22661-22780)
[006] 00002f65: PUSH0                          // SRCID115: (22819-22820)
[006] 00002f66: PUSH2 0x2f71                   // SRCID115: (22844-22931)
[006] 00002f69: DUP5                           // SRCID115: (22923-22930)
[006] 00002f6a: DUP3                           // SRCID115: (22914-22920)
[006] 00002f6b: DUP6                           // SRCID115: (22903-22912)
[006] 00002f6c: ADD                            // SRCID115: (22899-22921)
[006] 00002f6d: PUSH2 0x2f3b                   // SRCID115: (22844-22931)
[006] 00002f70: JUMP                           // SRCID115: (22844-22931)
[006] 00002f71: JUMPDEST                       // SRCID115: (22844-22931)
[006] 00002f72: SWAP2                          // SRCID115: (22834-22931)
[006] 00002f73: POP                            // SRCID115: (22834-22931)
[006] 00002f74: POP                            // SRCID115: (22790-22941)
[006] 00002f75: SWAP3                          // SRCID115: (22551-22948)
[006] 00002f76: SWAP2                          // SRCID115: (22551-22948)
[006] 00002f77: POP                            // SRCID115: (22551-22948)
[006] 00002f78: POP                            // SRCID115: (22551-22948)
[006] 00002f79: JUMP                           // SRCID115: (22551-22948)
[006] 00002f7a: JUMPDEST                       // SRCID115: (22954-23059)
[006] 00002f7b: PUSH0                          // SRCID115: (23019-23026)
[006] 00002f7c: DUP2                           // SRCID115: (23048-23053)
[006] 00002f7d: SWAP1                          // SRCID115: (23037-23053)
[006] 00002f7e: POP                            // SRCID115: (23037-23053)
[006] 00002f7f: SWAP2                          // SRCID115: (22954-23059)
[006] 00002f80: SWAP1                          // SRCID115: (22954-23059)
[006] 00002f81: POP                            // SRCID115: (22954-23059)
[006] 00002f82: JUMP                           // SRCID115: (22954-23059)
[006] 00002f83: JUMPDEST                       // SRCID115: (23065-23263)
[006] 00002f84: PUSH0                          // SRCID115: (23143-23152)
[006] 00002f85: PUSH2 0x2f9d                   // SRCID115: (23176-23257)
[006] 00002f88: PUSH2 0x2f98                   // SRCID115: (23194-23256)
[006] 00002f8b: PUSH2 0x2f93                   // SRCID115: (23203-23255)
[006] 00002f8e: DUP5                           // SRCID115: (23249-23254)
[006] 00002f8f: PUSH2 0x2f7a                   // SRCID115: (23203-23255)
[006] 00002f92: JUMP                           // SRCID115: (23203-23255)
[006] 00002f93: JUMPDEST                       // SRCID115: (23203-23255)
[006] 00002f94: PUSH2 0x2e19                   // SRCID115: (23194-23256)
[006] 00002f97: JUMP                           // SRCID115: (23194-23256)
[006] 00002f98: JUMPDEST                       // SRCID115: (23194-23256)
[006] 00002f99: PUSH2 0x2e96                   // SRCID115: (23176-23257)
[006] 00002f9c: JUMP                           // SRCID115: (23176-23257)
[006] 00002f9d: JUMPDEST                       // SRCID115: (23176-23257)
[006] 00002f9e: SWAP1                          // SRCID115: (23163-23257)
[006] 00002f9f: POP                            // SRCID115: (23163-23257)
[006] 00002fa0: SWAP2                          // SRCID115: (23065-23263)
[006] 00002fa1: SWAP1                          // SRCID115: (23065-23263)
[006] 00002fa2: POP                            // SRCID115: (23065-23263)
[006] 00002fa3: JUMP                           // SRCID115: (23065-23263)
[006] 00002fa4: JUMPDEST                       // SRCID115: (23269-23456)
[006] 00002fa5: PUSH2 0x2fad                   // SRCID115: (23384-23449)
[006] 00002fa8: DUP2                           // SRCID115: (23443-23448)
[006] 00002fa9: PUSH2 0x2f83                   // SRCID115: (23384-23449)
[006] 00002fac: JUMP                           // SRCID115: (23384-23449)
[006] 00002fad: JUMPDEST                       // SRCID115: (23384-23449)
[006] 00002fae: DUP3                           // SRCID115: (23379-23382)
[006] 00002faf: MSTORE                         // SRCID115: (23372-23450)
[006] 00002fb0: POP                            // SRCID115: (23269-23456)
[006] 00002fb1: POP                            // SRCID115: (23269-23456)
[006] 00002fb2: JUMP                           // SRCID115: (23269-23456)
[006] 00002fb3: JUMPDEST                       // SRCID115: (23462-23850)
[006] 00002fb4: PUSH0                          // SRCID115: (23611-23615)
[006] 00002fb5: PUSH1 0x40                     // SRCID115: (23649-23651)
[006] 00002fb7: DUP3                           // SRCID115: (23638-23647)
[006] 00002fb8: ADD                            // SRCID115: (23634-23652)
[006] 00002fb9: SWAP1                          // SRCID115: (23626-23652)
[006] 00002fba: POP                            // SRCID115: (23626-23652)
[006] 00002fbb: PUSH2 0x2fc6                   // SRCID115: (23662-23733)
[006] 00002fbe: PUSH0                          // SRCID115: (23730-23731)
[006] 00002fbf: DUP4                           // SRCID115: (23719-23728)
[006] 00002fc0: ADD                            // SRCID115: (23715-23732)
[006] 00002fc1: DUP6                           // SRCID115: (23706-23712)
[006] 00002fc2: PUSH2 0x2de3                   // SRCID115: (23662-23733)
[006] 00002fc5: JUMP                           // SRCID115: (23662-23733)
[006] 00002fc6: JUMPDEST                       // SRCID115: (23662-23733)
[006] 00002fc7: PUSH2 0x2fd3                   // SRCID115: (23743-23843)
[006] 00002fca: PUSH1 0x20                     // SRCID115: (23839-23841)
[006] 00002fcc: DUP4                           // SRCID115: (23828-23837)
[006] 00002fcd: ADD                            // SRCID115: (23824-23842)
[006] 00002fce: DUP5                           // SRCID115: (23815-23821)
[006] 00002fcf: PUSH2 0x2fa4                   // SRCID115: (23743-23843)
[006] 00002fd2: JUMP                           // SRCID115: (23743-23843)
[006] 00002fd3: JUMPDEST                       // SRCID115: (23743-23843)
[006] 00002fd4: SWAP4                          // SRCID115: (23462-23850)
[006] 00002fd5: SWAP3                          // SRCID115: (23462-23850)
[006] 00002fd6: POP                            // SRCID115: (23462-23850)
[006] 00002fd7: POP                            // SRCID115: (23462-23850)
[006] 00002fd8: POP                            // SRCID115: (23462-23850)
[006] 00002fd9: JUMP                           // SRCID115: (23462-23850)
[008] 00002fda: JUMPDEST                       // SRCID115: (23856-24078)
[008] 00002fdb: PUSH0                          // SRCID115: (23949-23953)
[008] 00002fdc: PUSH1 0x20                     // SRCID115: (23987-23989)
[008] 00002fde: DUP3                           // SRCID115: (23976-23985)
[008] 00002fdf: ADD                            // SRCID115: (23972-23990)
[008] 00002fe0: SWAP1                          // SRCID115: (23964-23990)
[008] 00002fe1: POP                            // SRCID115: (23964-23990)
[008] 00002fe2: PUSH2 0x2fed                   // SRCID115: (24000-24071)
[008] 00002fe5: PUSH0                          // SRCID115: (24068-24069)
[008] 00002fe6: DUP4                           // SRCID115: (24057-24066)
[008] 00002fe7: ADD                            // SRCID115: (24053-24070)
[008] 00002fe8: DUP5                           // SRCID115: (24044-24050)
[008] 00002fe9: PUSH2 0x2de3                   // SRCID115: (24000-24071)
[008] 00002fec: JUMP                           // SRCID115: (24000-24071)
[008] 00002fed: JUMPDEST                       // SRCID115: (24000-24071)
[008] 00002fee: SWAP3                          // SRCID115: (23856-24078)
[008] 00002fef: SWAP2                          // SRCID115: (23856-24078)
[008] 00002ff0: POP                            // SRCID115: (23856-24078)
[008] 00002ff1: POP                            // SRCID115: (23856-24078)
[008] 00002ff2: JUMP                           // SRCID115: (23856-24078)
[006] 00002ff3: JUMPDEST                       // SRCID115: (24084-24177)
[006] 00002ff4: PUSH0                          // SRCID115: (24120-24127)
[006] 00002ff5: PUSH4 0xffffffff               // SRCID115: (24160-24170)
[006] 00002ffa: DUP3                           // SRCID115: (24153-24158)
[006] 00002ffb: AND                            // SRCID115: (24149-24171)
[006] 00002ffc: SWAP1                          // SRCID115: (24138-24171)
[006] 00002ffd: POP                            // SRCID115: (24138-24171)
[006] 00002ffe: SWAP2                          // SRCID115: (24084-24177)
[006] 00002fff: SWAP1                          // SRCID115: (24084-24177)
[006] 00003000: POP                            // SRCID115: (24084-24177)
[006] 00003001: JUMP                           // SRCID115: (24084-24177)
[001] 00003002: JUMPDEST                       // SRCID115: (24183-24298)
[001] 00003003: PUSH2 0x300b                   // SRCID115: (24268-24291)
[001] 00003006: DUP2                           // SRCID115: (24285-24290)
[001] 00003007: PUSH2 0x2ff3                   // SRCID115: (24268-24291)
[001] 0000300a: JUMP                           // SRCID115: (24268-24291)
[001] 0000300b: JUMPDEST                       // SRCID115: (24268-24291)
[001] 0000300c: DUP3                           // SRCID115: (24263-24266)
[001] 0000300d: MSTORE                         // SRCID115: (24256-24292)
[001] 0000300e: POP                            // SRCID115: (24183-24298)
[001] 0000300f: POP                            // SRCID115: (24183-24298)
[001] 00003010: JUMP                           // SRCID115: (24183-24298)
[001] 00003011: JUMPDEST                       // SRCID115: (24304-24522)
[001] 00003012: PUSH0                          // SRCID115: (24395-24399)
[001] 00003013: PUSH1 0x20                     // SRCID115: (24433-24435)
[001] 00003015: DUP3                           // SRCID115: (24422-24431)
[001] 00003016: ADD                            // SRCID115: (24418-24436)
[001] 00003017: SWAP1                          // SRCID115: (24410-24436)
[001] 00003018: POP                            // SRCID115: (24410-24436)
[001] 00003019: PUSH2 0x3024                   // SRCID115: (24446-24515)
[001] 0000301c: PUSH0                          // SRCID115: (24512-24513)
[001] 0000301d: DUP4                           // SRCID115: (24501-24510)
[001] 0000301e: ADD                            // SRCID115: (24497-24514)
[001] 0000301f: DUP5                           // SRCID115: (24488-24494)
[001] 00003020: PUSH2 0x3002                   // SRCID115: (24446-24515)
[001] 00003023: JUMP                           // SRCID115: (24446-24515)
[001] 00003024: JUMPDEST                       // SRCID115: (24446-24515)
[001] 00003025: SWAP3                          // SRCID115: (24304-24522)
[001] 00003026: SWAP2                          // SRCID115: (24304-24522)
[001] 00003027: POP                            // SRCID115: (24304-24522)
[001] 00003028: POP                            // SRCID115: (24304-24522)
[001] 00003029: JUMP                           // SRCID115: (24304-24522)
      0000302a: JUMPDEST                       // SRCID115: (24528-24708)
      0000302b: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID115: (24576-24653)
      0000304c: PUSH0                          // SRCID115: (24573-24574)
      0000304d: MSTORE                         // SRCID115: (24566-24654)
      0000304e: PUSH1 0x11                     // SRCID115: (24673-24677)
      00003050: PUSH1 0x4                      // SRCID115: (24670-24671)
      00003052: MSTORE                         // SRCID115: (24663-24678)
      00003053: PUSH1 0x24                     // SRCID115: (24697-24701)
      00003055: PUSH0                          // SRCID115: (24694-24695)
      00003056: REVERT                         // SRCID115: (24687-24702)
[001] 00003057: JUMPDEST                       // SRCID115: (24714-24905)
[001] 00003058: PUSH0                          // SRCID115: (24754-24757)
[001] 00003059: PUSH2 0x3061                   // SRCID115: (24773-24793)
[001] 0000305c: DUP3                           // SRCID115: (24791-24792)
[001] 0000305d: PUSH2 0x2e96                   // SRCID115: (24773-24793)
[001] 00003060: JUMP                           // SRCID115: (24773-24793)
[001] 00003061: JUMPDEST                       // SRCID115: (24773-24793)
[001] 00003062: SWAP2                          // SRCID115: (24768-24793)
[001] 00003063: POP                            // SRCID115: (24768-24793)
[001] 00003064: PUSH2 0x306c                   // SRCID115: (24807-24827)
[001] 00003067: DUP4                           // SRCID115: (24825-24826)
[001] 00003068: PUSH2 0x2e96                   // SRCID115: (24807-24827)
[001] 0000306b: JUMP                           // SRCID115: (24807-24827)
[001] 0000306c: JUMPDEST                       // SRCID115: (24807-24827)
[001] 0000306d: SWAP3                          // SRCID115: (24802-24827)
[001] 0000306e: POP                            // SRCID115: (24802-24827)
[001] 0000306f: DUP3                           // SRCID115: (24850-24851)
[001] 00003070: DUP3                           // SRCID115: (24847-24848)
[001] 00003071: ADD                            // SRCID115: (24843-24852)
[001] 00003072: SWAP1                          // SRCID115: (24836-24852)
[001] 00003073: POP                            // SRCID115: (24836-24852)
[001] 00003074: DUP1                           // SRCID115: (24871-24874)
[001] 00003075: DUP3                           // SRCID115: (24868-24869)
[001] 00003076: GT                             // SRCID115: (24865-24875)
[001] 00003077: ISZERO                         // SRCID115: (24862-24898)
[001] 00003078: PUSH2 0x3084                   // SRCID115: (24862-24898)
[001] 0000307b: JUMPI                          // SRCID115: (24862-24898)
      0000307c: PUSH2 0x3083                   // SRCID115: (24878-24896)
      0000307f: PUSH2 0x302a                   // SRCID115: (24878-24896)
      00003082: JUMP                           // SRCID115: (24878-24896)
      00003083: JUMPDEST                       // SRCID115: (24878-24896)
[001] 00003084: JUMPDEST                       // SRCID115: (24862-24898)
[001] 00003085: SWAP3                          // SRCID115: (24714-24905)
[001] 00003086: SWAP2                          // SRCID115: (24714-24905)
[001] 00003087: POP                            // SRCID115: (24714-24905)
[001] 00003088: POP                            // SRCID115: (24714-24905)
[001] 00003089: JUMP                           // SRCID115: (24714-24905)
[028] 0000308a: JUMPDEST                       // SRCID115: (24911-25029)
[028] 0000308b: PUSH2 0x3093                   // SRCID115: (24998-25022)
[028] 0000308e: DUP2                           // SRCID115: (25016-25021)
[028] 0000308f: PUSH2 0x2e96                   // SRCID115: (24998-25022)
[028] 00003092: JUMP                           // SRCID115: (24998-25022)
[028] 00003093: JUMPDEST                       // SRCID115: (24998-25022)
[028] 00003094: DUP3                           // SRCID115: (24993-24996)
[028] 00003095: MSTORE                         // SRCID115: (24986-25023)
[028] 00003096: POP                            // SRCID115: (24911-25029)
[028] 00003097: POP                            // SRCID115: (24911-25029)
[028] 00003098: JUMP                           // SRCID115: (24911-25029)
[019] 00003099: JUMPDEST                       // SRCID115: (25035-25257)
[019] 0000309a: PUSH0                          // SRCID115: (25128-25132)
[019] 0000309b: PUSH1 0x20                     // SRCID115: (25166-25168)
[019] 0000309d: DUP3                           // SRCID115: (25155-25164)
[019] 0000309e: ADD                            // SRCID115: (25151-25169)
[019] 0000309f: SWAP1                          // SRCID115: (25143-25169)
[019] 000030a0: POP                            // SRCID115: (25143-25169)
[019] 000030a1: PUSH2 0x30ac                   // SRCID115: (25179-25250)
[019] 000030a4: PUSH0                          // SRCID115: (25247-25248)
[019] 000030a5: DUP4                           // SRCID115: (25236-25245)
[019] 000030a6: ADD                            // SRCID115: (25232-25249)
[019] 000030a7: DUP5                           // SRCID115: (25223-25229)
[019] 000030a8: PUSH2 0x308a                   // SRCID115: (25179-25250)
[019] 000030ab: JUMP                           // SRCID115: (25179-25250)
[019] 000030ac: JUMPDEST                       // SRCID115: (25179-25250)
[019] 000030ad: SWAP3                          // SRCID115: (25035-25257)
[019] 000030ae: SWAP2                          // SRCID115: (25035-25257)
[019] 000030af: POP                            // SRCID115: (25035-25257)
[019] 000030b0: POP                            // SRCID115: (25035-25257)
[019] 000030b1: JUMP                           // SRCID115: (25035-25257)
[002] 000030b2: JUMPDEST                       // SRCID115: (25263-25405)
[002] 000030b3: PUSH2 0x30bb                   // SRCID115: (25366-25398)
[002] 000030b6: DUP2                           // SRCID115: (25392-25397)
[002] 000030b7: PUSH2 0x2f03                   // SRCID115: (25366-25398)
[002] 000030ba: JUMP                           // SRCID115: (25366-25398)
[002] 000030bb: JUMPDEST                       // SRCID115: (25366-25398)
[002] 000030bc: DUP3                           // SRCID115: (25361-25364)
[002] 000030bd: MSTORE                         // SRCID115: (25354-25399)
[002] 000030be: POP                            // SRCID115: (25263-25405)
[002] 000030bf: POP                            // SRCID115: (25263-25405)
[002] 000030c0: JUMP                           // SRCID115: (25263-25405)
[001] 000030c1: JUMPDEST                       // SRCID115: (25411-25665)
[001] 000030c2: PUSH0                          // SRCID115: (25520-25524)
[001] 000030c3: PUSH1 0x20                     // SRCID115: (25558-25560)
[001] 000030c5: DUP3                           // SRCID115: (25547-25556)
[001] 000030c6: ADD                            // SRCID115: (25543-25561)
[001] 000030c7: SWAP1                          // SRCID115: (25535-25561)
[001] 000030c8: POP                            // SRCID115: (25535-25561)
[001] 000030c9: PUSH2 0x30d4                   // SRCID115: (25571-25658)
[001] 000030cc: PUSH0                          // SRCID115: (25655-25656)
[001] 000030cd: DUP4                           // SRCID115: (25644-25653)
[001] 000030ce: ADD                            // SRCID115: (25640-25657)
[001] 000030cf: DUP5                           // SRCID115: (25631-25637)
[001] 000030d0: PUSH2 0x30b2                   // SRCID115: (25571-25658)
[001] 000030d3: JUMP                           // SRCID115: (25571-25658)
[001] 000030d4: JUMPDEST                       // SRCID115: (25571-25658)
[001] 000030d5: SWAP3                          // SRCID115: (25411-25665)
[001] 000030d6: SWAP2                          // SRCID115: (25411-25665)
[001] 000030d7: POP                            // SRCID115: (25411-25665)
[001] 000030d8: POP                            // SRCID115: (25411-25665)
[001] 000030d9: JUMP                           // SRCID115: (25411-25665)
      000030da: JUMPDEST                       // SRCID115: (25671-25788)
      000030db: PUSH0                          // SRCID115: (25780-25781)
      000030dc: DUP1                           // SRCID115: (25777-25778)
      000030dd: REVERT                         // SRCID115: (25770-25782)
      000030de: JUMPDEST                       // SRCID115: (25794-25974)
      000030df: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID115: (25842-25919)
      00003100: PUSH0                          // SRCID115: (25839-25840)
      00003101: MSTORE                         // SRCID115: (25832-25920)
      00003102: PUSH1 0x41                     // SRCID115: (25939-25943)
      00003104: PUSH1 0x4                      // SRCID115: (25936-25937)
      00003106: MSTORE                         // SRCID115: (25929-25944)
      00003107: PUSH1 0x24                     // SRCID115: (25963-25967)
      00003109: PUSH0                          // SRCID115: (25960-25961)
      0000310a: REVERT                         // SRCID115: (25953-25968)
[004] 0000310b: JUMPDEST                       // SRCID115: (25980-26261)
[004] 0000310c: PUSH2 0x3114                   // SRCID115: (26063-26090)
[004] 0000310f: DUP3                           // SRCID115: (26085-26089)
[004] 00003110: PUSH2 0x2834                   // SRCID115: (26063-26090)
[004] 00003113: JUMP                           // SRCID115: (26063-26090)
[004] 00003114: JUMPDEST                       // SRCID115: (26063-26090)
[004] 00003115: DUP2                           // SRCID115: (26055-26061)
[004] 00003116: ADD                            // SRCID115: (26051-26091)
[004] 00003117: DUP2                           // SRCID115: (26193-26199)
[004] 00003118: DUP2                           // SRCID115: (26181-26191)
[004] 00003119: LT                             // SRCID115: (26178-26200)
[004] 0000311a: PUSH8 0xffffffffffffffff       // SRCID115: (26157-26175)
[004] 00003123: DUP3                           // SRCID115: (26145-26155)
[004] 00003124: GT                             // SRCID115: (26142-26176)
[004] 00003125: OR                             // SRCID115: (26139-26201)
[004] 00003126: ISZERO                         // SRCID115: (26136-26224)
[004] 00003127: PUSH2 0x3133                   // SRCID115: (26136-26224)
[004] 0000312a: JUMPI                          // SRCID115: (26136-26224)
      0000312b: PUSH2 0x3132                   // SRCID115: (26204-26222)
      0000312e: PUSH2 0x30de                   // SRCID115: (26204-26222)
      00003131: JUMP                           // SRCID115: (26204-26222)
      00003132: JUMPDEST                       // SRCID115: (26204-26222)
[004] 00003133: JUMPDEST                       // SRCID115: (26136-26224)
[004] 00003134: DUP1                           // SRCID115: (26244-26254)
[004] 00003135: PUSH1 0x40                     // SRCID115: (26240-26242)
[004] 00003137: MSTORE                         // SRCID115: (26233-26255)
[004] 00003138: POP                            // SRCID115: (26023-26261)
[004] 00003139: POP                            // SRCID115: (25980-26261)
[004] 0000313a: POP                            // SRCID115: (25980-26261)
[004] 0000313b: JUMP                           // SRCID115: (25980-26261)
[004] 0000313c: JUMPDEST                       // SRCID115: (26267-26396)
[004] 0000313d: PUSH0                          // SRCID115: (26301-26307)
[004] 0000313e: PUSH2 0x3145                   // SRCID115: (26328-26348)
[004] 00003141: PUSH2 0x2ef6                   // SRCID115: (26328-26348)
[004] 00003144: JUMP                           // SRCID115: (26328-26348)
[004] 00003145: JUMPDEST                       // SRCID115: (26328-26348)
[004] 00003146: SWAP1                          // SRCID115: (26318-26348)
[004] 00003147: POP                            // SRCID115: (26318-26348)
[004] 00003148: PUSH2 0x3151                   // SRCID115: (26357-26390)
[004] 0000314b: DUP3                           // SRCID115: (26385-26389)
[004] 0000314c: DUP3                           // SRCID115: (26377-26383)
[004] 0000314d: PUSH2 0x310b                   // SRCID115: (26357-26390)
[004] 00003150: JUMP                           // SRCID115: (26357-26390)
[004] 00003151: JUMPDEST                       // SRCID115: (26357-26390)
[004] 00003152: SWAP2                          // SRCID115: (26267-26396)
[004] 00003153: SWAP1                          // SRCID115: (26267-26396)
[004] 00003154: POP                            // SRCID115: (26267-26396)
[004] 00003155: JUMP                           // SRCID115: (26267-26396)
[005] 00003156: JUMPDEST                       // SRCID115: (26525-26647)
[005] 00003157: PUSH2 0x315f                   // SRCID115: (26598-26622)
[005] 0000315a: DUP2                           // SRCID115: (26616-26621)
[005] 0000315b: PUSH2 0x2e96                   // SRCID115: (26598-26622)
[005] 0000315e: JUMP                           // SRCID115: (26598-26622)
[005] 0000315f: JUMPDEST                       // SRCID115: (26598-26622)
[005] 00003160: DUP2                           // SRCID115: (26591-26596)
[005] 00003161: EQ                             // SRCID115: (26588-26623)
[005] 00003162: PUSH2 0x3169                   // SRCID115: (26578-26641)
[005] 00003165: JUMPI                          // SRCID115: (26578-26641)
      00003166: PUSH0                          // SRCID115: (26637-26638)
      00003167: DUP1                           // SRCID115: (26634-26635)
      00003168: REVERT                         // SRCID115: (26627-26639)
[005] 00003169: JUMPDEST                       // SRCID115: (26578-26641)
[005] 0000316a: POP                            // SRCID115: (26525-26647)
[005] 0000316b: JUMP                           // SRCID115: (26525-26647)
[005] 0000316c: JUMPDEST                       // SRCID115: (26653-26796)
[005] 0000316d: PUSH0                          // SRCID115: (26710-26715)
[005] 0000316e: DUP2                           // SRCID115: (26741-26747)
[005] 0000316f: MLOAD                          // SRCID115: (26735-26748)
[005] 00003170: SWAP1                          // SRCID115: (26726-26748)
[005] 00003171: POP                            // SRCID115: (26726-26748)
[005] 00003172: PUSH2 0x317a                   // SRCID115: (26757-26790)
[005] 00003175: DUP2                           // SRCID115: (26784-26789)
[005] 00003176: PUSH2 0x3156                   // SRCID115: (26757-26790)
[005] 00003179: JUMP                           // SRCID115: (26757-26790)
[005] 0000317a: JUMPDEST                       // SRCID115: (26757-26790)
[005] 0000317b: SWAP3                          // SRCID115: (26653-26796)
[005] 0000317c: SWAP2                          // SRCID115: (26653-26796)
[005] 0000317d: POP                            // SRCID115: (26653-26796)
[005] 0000317e: POP                            // SRCID115: (26653-26796)
[005] 0000317f: JUMP                           // SRCID115: (26653-26796)
[004] 00003180: JUMPDEST                       // SRCID115: (26802-26918)
[004] 00003181: PUSH2 0x3189                   // SRCID115: (26872-26893)
[004] 00003184: DUP2                           // SRCID115: (26887-26892)
[004] 00003185: PUSH2 0x2db0                   // SRCID115: (26872-26893)
[004] 00003188: JUMP                           // SRCID115: (26872-26893)
[004] 00003189: JUMPDEST                       // SRCID115: (26872-26893)
[004] 0000318a: DUP2                           // SRCID115: (26865-26870)
[004] 0000318b: EQ                             // SRCID115: (26862-26894)
[004] 0000318c: PUSH2 0x3193                   // SRCID115: (26852-26912)
[004] 0000318f: JUMPI                          // SRCID115: (26852-26912)
      00003190: PUSH0                          // SRCID115: (26908-26909)
      00003191: DUP1                           // SRCID115: (26905-26906)
      00003192: REVERT                         // SRCID115: (26898-26910)
[004] 00003193: JUMPDEST                       // SRCID115: (26852-26912)
[004] 00003194: POP                            // SRCID115: (26802-26918)
[004] 00003195: JUMP                           // SRCID115: (26802-26918)
[004] 00003196: JUMPDEST                       // SRCID115: (26924-27061)
[004] 00003197: PUSH0                          // SRCID115: (26978-26983)
[004] 00003198: DUP2                           // SRCID115: (27009-27015)
[004] 00003199: MLOAD                          // SRCID115: (27003-27016)
[004] 0000319a: SWAP1                          // SRCID115: (26994-27016)
[004] 0000319b: POP                            // SRCID115: (26994-27016)
[004] 0000319c: PUSH2 0x31a4                   // SRCID115: (27025-27055)
[004] 0000319f: DUP2                           // SRCID115: (27049-27054)
[004] 000031a0: PUSH2 0x3180                   // SRCID115: (27025-27055)
[004] 000031a3: JUMP                           // SRCID115: (27025-27055)
[004] 000031a4: JUMPDEST                       // SRCID115: (27025-27055)
[004] 000031a5: SWAP3                          // SRCID115: (26924-27061)
[004] 000031a6: SWAP2                          // SRCID115: (26924-27061)
[004] 000031a7: POP                            // SRCID115: (26924-27061)
[004] 000031a8: POP                            // SRCID115: (26924-27061)
[004] 000031a9: JUMP                           // SRCID115: (26924-27061)
[006] 000031aa: JUMPDEST                       // SRCID115: (27067-27181)
[006] 000031ab: PUSH0                          // SRCID115: (27104-27111)
[006] 000031ac: PUSH14 0xffffffffffffffffffffffffffff // SRCID115: (27144-27174)
[006] 000031bb: DUP3                           // SRCID115: (27137-27142)
[006] 000031bc: AND                            // SRCID115: (27133-27175)
[006] 000031bd: SWAP1                          // SRCID115: (27122-27175)
[006] 000031be: POP                            // SRCID115: (27122-27175)
[006] 000031bf: SWAP2                          // SRCID115: (27067-27181)
[006] 000031c0: SWAP1                          // SRCID115: (27067-27181)
[006] 000031c1: POP                            // SRCID115: (27067-27181)
[006] 000031c2: JUMP                           // SRCID115: (27067-27181)
[004] 000031c3: JUMPDEST                       // SRCID115: (27187-27309)
[004] 000031c4: PUSH2 0x31cc                   // SRCID115: (27260-27284)
[004] 000031c7: DUP2                           // SRCID115: (27278-27283)
[004] 000031c8: PUSH2 0x31aa                   // SRCID115: (27260-27284)
[004] 000031cb: JUMP                           // SRCID115: (27260-27284)
[004] 000031cc: JUMPDEST                       // SRCID115: (27260-27284)
[004] 000031cd: DUP2                           // SRCID115: (27253-27258)
[004] 000031ce: EQ                             // SRCID115: (27250-27285)
[004] 000031cf: PUSH2 0x31d6                   // SRCID115: (27240-27303)
[004] 000031d2: JUMPI                          // SRCID115: (27240-27303)
      000031d3: PUSH0                          // SRCID115: (27299-27300)
      000031d4: DUP1                           // SRCID115: (27296-27297)
      000031d5: REVERT                         // SRCID115: (27289-27301)
[004] 000031d6: JUMPDEST                       // SRCID115: (27240-27303)
[004] 000031d7: POP                            // SRCID115: (27187-27309)
[004] 000031d8: JUMP                           // SRCID115: (27187-27309)
[004] 000031d9: JUMPDEST                       // SRCID115: (27315-27458)
[004] 000031da: PUSH0                          // SRCID115: (27372-27377)
[004] 000031db: DUP2                           // SRCID115: (27403-27409)
[004] 000031dc: MLOAD                          // SRCID115: (27397-27410)
[004] 000031dd: SWAP1                          // SRCID115: (27388-27410)
[004] 000031de: POP                            // SRCID115: (27388-27410)
[004] 000031df: PUSH2 0x31e7                   // SRCID115: (27419-27452)
[004] 000031e2: DUP2                           // SRCID115: (27446-27451)
[004] 000031e3: PUSH2 0x31c3                   // SRCID115: (27419-27452)
[004] 000031e6: JUMP                           // SRCID115: (27419-27452)
[004] 000031e7: JUMPDEST                       // SRCID115: (27419-27452)
[004] 000031e8: SWAP3                          // SRCID115: (27315-27458)
[004] 000031e9: SWAP2                          // SRCID115: (27315-27458)
[004] 000031ea: POP                            // SRCID115: (27315-27458)
[004] 000031eb: POP                            // SRCID115: (27315-27458)
[004] 000031ec: JUMP                           // SRCID115: (27315-27458)
[004] 000031ed: JUMPDEST                       // SRCID115: (27464-27584)
[004] 000031ee: PUSH2 0x31f6                   // SRCID115: (27536-27559)
[004] 000031f1: DUP2                           // SRCID115: (27553-27558)
[004] 000031f2: PUSH2 0x2ff3                   // SRCID115: (27536-27559)
[004] 000031f5: JUMP                           // SRCID115: (27536-27559)
[004] 000031f6: JUMPDEST                       // SRCID115: (27536-27559)
[004] 000031f7: DUP2                           // SRCID115: (27529-27534)
[004] 000031f8: EQ                             // SRCID115: (27526-27560)
[004] 000031f9: PUSH2 0x3200                   // SRCID115: (27516-27578)
[004] 000031fc: JUMPI                          // SRCID115: (27516-27578)
      000031fd: PUSH0                          // SRCID115: (27574-27575)
      000031fe: DUP1                           // SRCID115: (27571-27572)
      000031ff: REVERT                         // SRCID115: (27564-27576)
[004] 00003200: JUMPDEST                       // SRCID115: (27516-27578)
[004] 00003201: POP                            // SRCID115: (27464-27584)
[004] 00003202: JUMP                           // SRCID115: (27464-27584)
[004] 00003203: JUMPDEST                       // SRCID115: (27590-27731)
[004] 00003204: PUSH0                          // SRCID115: (27646-27651)
[004] 00003205: DUP2                           // SRCID115: (27677-27683)
[004] 00003206: MLOAD                          // SRCID115: (27671-27684)
[004] 00003207: SWAP1                          // SRCID115: (27662-27684)
[004] 00003208: POP                            // SRCID115: (27662-27684)
[004] 00003209: PUSH2 0x3211                   // SRCID115: (27693-27725)
[004] 0000320c: DUP2                           // SRCID115: (27719-27724)
[004] 0000320d: PUSH2 0x31ed                   // SRCID115: (27693-27725)
[004] 00003210: JUMP                           // SRCID115: (27693-27725)
[004] 00003211: JUMPDEST                       // SRCID115: (27693-27725)
[004] 00003212: SWAP3                          // SRCID115: (27590-27731)
[004] 00003213: SWAP2                          // SRCID115: (27590-27731)
[004] 00003214: POP                            // SRCID115: (27590-27731)
[004] 00003215: POP                            // SRCID115: (27590-27731)
[004] 00003216: JUMP                           // SRCID115: (27590-27731)
[004] 00003217: JUMPDEST                       // SRCID115: (27737-27834)
[004] 00003218: PUSH0                          // SRCID115: (27773-27780)
[004] 00003219: PUSH6 0xffffffffffff           // SRCID115: (27813-27827)
[004] 00003220: DUP3                           // SRCID115: (27806-27811)
[004] 00003221: AND                            // SRCID115: (27802-27828)
[004] 00003222: SWAP1                          // SRCID115: (27791-27828)
[004] 00003223: POP                            // SRCID115: (27791-27828)
[004] 00003224: SWAP2                          // SRCID115: (27737-27834)
[004] 00003225: SWAP1                          // SRCID115: (27737-27834)
[004] 00003226: POP                            // SRCID115: (27737-27834)
[004] 00003227: JUMP                           // SRCID115: (27737-27834)
[004] 00003228: JUMPDEST                       // SRCID115: (27840-27960)
[004] 00003229: PUSH2 0x3231                   // SRCID115: (27912-27935)
[004] 0000322c: DUP2                           // SRCID115: (27929-27934)
[004] 0000322d: PUSH2 0x3217                   // SRCID115: (27912-27935)
[004] 00003230: JUMP                           // SRCID115: (27912-27935)
[004] 00003231: JUMPDEST                       // SRCID115: (27912-27935)
[004] 00003232: DUP2                           // SRCID115: (27905-27910)
[004] 00003233: EQ                             // SRCID115: (27902-27936)
[004] 00003234: PUSH2 0x323b                   // SRCID115: (27892-27954)
[004] 00003237: JUMPI                          // SRCID115: (27892-27954)
      00003238: PUSH0                          // SRCID115: (27950-27951)
      00003239: DUP1                           // SRCID115: (27947-27948)
      0000323a: REVERT                         // SRCID115: (27940-27952)
[004] 0000323b: JUMPDEST                       // SRCID115: (27892-27954)
[004] 0000323c: POP                            // SRCID115: (27840-27960)
[004] 0000323d: JUMP                           // SRCID115: (27840-27960)
[004] 0000323e: JUMPDEST                       // SRCID115: (27966-28107)
[004] 0000323f: PUSH0                          // SRCID115: (28022-28027)
[004] 00003240: DUP2                           // SRCID115: (28053-28059)
[004] 00003241: MLOAD                          // SRCID115: (28047-28060)
[004] 00003242: SWAP1                          // SRCID115: (28038-28060)
[004] 00003243: POP                            // SRCID115: (28038-28060)
[004] 00003244: PUSH2 0x324c                   // SRCID115: (28069-28101)
[004] 00003247: DUP2                           // SRCID115: (28095-28100)
[004] 00003248: PUSH2 0x3228                   // SRCID115: (28069-28101)
[004] 0000324b: JUMP                           // SRCID115: (28069-28101)
[004] 0000324c: JUMPDEST                       // SRCID115: (28069-28101)
[004] 0000324d: SWAP3                          // SRCID115: (27966-28107)
[004] 0000324e: SWAP2                          // SRCID115: (27966-28107)
[004] 0000324f: POP                            // SRCID115: (27966-28107)
[004] 00003250: POP                            // SRCID115: (27966-28107)
[004] 00003251: JUMP                           // SRCID115: (27966-28107)
[004] 00003252: JUMPDEST                       // SRCID115: (28153-29301)
[004] 00003253: PUSH0                          // SRCID115: (28242-28247)
[004] 00003254: PUSH1 0xa0                     // SRCID115: (28286-28290)
[004] 00003256: DUP3                           // SRCID115: (28274-28283)
[004] 00003257: DUP5                           // SRCID115: (28269-28272)
[004] 00003258: SUB                            // SRCID115: (28265-28284)
[004] 00003259: SLT                            // SRCID115: (28261-28291)
[004] 0000325a: ISZERO                         // SRCID115: (28258-28375)
[004] 0000325b: PUSH2 0x3267                   // SRCID115: (28258-28375)
[004] 0000325e: JUMPI                          // SRCID115: (28258-28375)
      0000325f: PUSH2 0x3266                   // SRCID115: (28294-28373)
      00003262: PUSH2 0x30da                   // SRCID115: (28294-28373)
      00003265: JUMP                           // SRCID115: (28294-28373)
      00003266: JUMPDEST                       // SRCID115: (28294-28373)
[004] 00003267: JUMPDEST                       // SRCID115: (28258-28375)
[004] 00003268: PUSH2 0x3271                   // SRCID115: (28393-28414)
[004] 0000326b: PUSH1 0xa0                     // SRCID115: (28409-28413)
[004] 0000326d: PUSH2 0x313c                   // SRCID115: (28393-28414)
[004] 00003270: JUMP                           // SRCID115: (28393-28414)
[004] 00003271: JUMPDEST                       // SRCID115: (28393-28414)
[004] 00003272: SWAP1                          // SRCID115: (28384-28414)
[004] 00003273: POP                            // SRCID115: (28384-28414)
[004] 00003274: PUSH0                          // SRCID115: (28476-28477)
[004] 00003275: PUSH2 0x3280                   // SRCID115: (28516-28576)
[004] 00003278: DUP5                           // SRCID115: (28572-28575)
[004] 00003279: DUP3                           // SRCID115: (28563-28569)
[004] 0000327a: DUP6                           // SRCID115: (28552-28561)
[004] 0000327b: ADD                            // SRCID115: (28548-28570)
[004] 0000327c: PUSH2 0x316c                   // SRCID115: (28516-28576)
[004] 0000327f: JUMP                           // SRCID115: (28516-28576)
[004] 00003280: JUMPDEST                       // SRCID115: (28516-28576)
[004] 00003281: PUSH0                          // SRCID115: (28509-28513)
[004] 00003282: DUP4                           // SRCID115: (28502-28507)
[004] 00003283: ADD                            // SRCID115: (28498-28514)
[004] 00003284: MSTORE                         // SRCID115: (28491-28577)
[004] 00003285: POP                            // SRCID115: (28424-28588)
[004] 00003286: PUSH1 0x20                     // SRCID115: (28649-28651)
[004] 00003288: PUSH2 0x3293                   // SRCID115: (28690-28747)
[004] 0000328b: DUP5                           // SRCID115: (28743-28746)
[004] 0000328c: DUP3                           // SRCID115: (28734-28740)
[004] 0000328d: DUP6                           // SRCID115: (28723-28732)
[004] 0000328e: ADD                            // SRCID115: (28719-28741)
[004] 0000328f: PUSH2 0x3196                   // SRCID115: (28690-28747)
[004] 00003292: JUMP                           // SRCID115: (28690-28747)
[004] 00003293: JUMPDEST                       // SRCID115: (28690-28747)
[004] 00003294: PUSH1 0x20                     // SRCID115: (28683-28687)
[004] 00003296: DUP4                           // SRCID115: (28676-28681)
[004] 00003297: ADD                            // SRCID115: (28672-28688)
[004] 00003298: MSTORE                         // SRCID115: (28665-28748)
[004] 00003299: POP                            // SRCID115: (28598-28759)
[004] 0000329a: PUSH1 0x40                     // SRCID115: (28819-28821)
[004] 0000329c: PUSH2 0x32a7                   // SRCID115: (28860-28920)
[004] 0000329f: DUP5                           // SRCID115: (28916-28919)
[004] 000032a0: DUP3                           // SRCID115: (28907-28913)
[004] 000032a1: DUP6                           // SRCID115: (28896-28905)
[004] 000032a2: ADD                            // SRCID115: (28892-28914)
[004] 000032a3: PUSH2 0x31d9                   // SRCID115: (28860-28920)
[004] 000032a6: JUMP                           // SRCID115: (28860-28920)
[004] 000032a7: JUMPDEST                       // SRCID115: (28860-28920)
[004] 000032a8: PUSH1 0x40                     // SRCID115: (28853-28857)
[004] 000032aa: DUP4                           // SRCID115: (28846-28851)
[004] 000032ab: ADD                            // SRCID115: (28842-28858)
[004] 000032ac: MSTORE                         // SRCID115: (28835-28921)
[004] 000032ad: POP                            // SRCID115: (28769-28932)
[004] 000032ae: PUSH1 0x60                     // SRCID115: (29002-29004)
[004] 000032b0: PUSH2 0x32bb                   // SRCID115: (29043-29102)
[004] 000032b3: DUP5                           // SRCID115: (29098-29101)
[004] 000032b4: DUP3                           // SRCID115: (29089-29095)
[004] 000032b5: DUP6                           // SRCID115: (29078-29087)
[004] 000032b6: ADD                            // SRCID115: (29074-29096)
[004] 000032b7: PUSH2 0x3203                   // SRCID115: (29043-29102)
[004] 000032ba: JUMP                           // SRCID115: (29043-29102)
[004] 000032bb: JUMPDEST                       // SRCID115: (29043-29102)
[004] 000032bc: PUSH1 0x60                     // SRCID115: (29036-29040)
[004] 000032be: DUP4                           // SRCID115: (29029-29034)
[004] 000032bf: ADD                            // SRCID115: (29025-29041)
[004] 000032c0: MSTORE                         // SRCID115: (29018-29103)
[004] 000032c1: POP                            // SRCID115: (28942-29114)
[004] 000032c2: PUSH1 0x80                     // SRCID115: (29181-29184)
[004] 000032c4: PUSH2 0x32cf                   // SRCID115: (29223-29282)
[004] 000032c7: DUP5                           // SRCID115: (29278-29281)
[004] 000032c8: DUP3                           // SRCID115: (29269-29275)
[004] 000032c9: DUP6                           // SRCID115: (29258-29267)
[004] 000032ca: ADD                            // SRCID115: (29254-29276)
[004] 000032cb: PUSH2 0x323e                   // SRCID115: (29223-29282)
[004] 000032ce: JUMP                           // SRCID115: (29223-29282)
[004] 000032cf: JUMPDEST                       // SRCID115: (29223-29282)
[004] 000032d0: PUSH1 0x80                     // SRCID115: (29216-29220)
[004] 000032d2: DUP4                           // SRCID115: (29209-29214)
[004] 000032d3: ADD                            // SRCID115: (29205-29221)
[004] 000032d4: MSTORE                         // SRCID115: (29198-29283)
[004] 000032d5: POP                            // SRCID115: (29124-29294)
[004] 000032d6: SWAP3                          // SRCID115: (28153-29301)
[004] 000032d7: SWAP2                          // SRCID115: (28153-29301)
[004] 000032d8: POP                            // SRCID115: (28153-29301)
[004] 000032d9: POP                            // SRCID115: (28153-29301)
[004] 000032da: JUMP                           // SRCID115: (28153-29301)
[004] 000032db: JUMPDEST                       // SRCID115: (29307-29717)
[004] 000032dc: PUSH0                          // SRCID115: (29406-29412)
[004] 000032dd: PUSH1 0xa0                     // SRCID115: (29455-29458)
[004] 000032df: DUP3                           // SRCID115: (29443-29452)
[004] 000032e0: DUP5                           // SRCID115: (29434-29441)
[004] 000032e1: SUB                            // SRCID115: (29430-29453)
[004] 000032e2: SLT                            // SRCID115: (29426-29459)
[004] 000032e3: ISZERO                         // SRCID115: (29423-29543)
[004] 000032e4: PUSH2 0x32f0                   // SRCID115: (29423-29543)
[004] 000032e7: JUMPI                          // SRCID115: (29423-29543)
      000032e8: PUSH2 0x32ef                   // SRCID115: (29462-29541)
      000032eb: PUSH2 0x2eff                   // SRCID115: (29462-29541)
      000032ee: JUMP                           // SRCID115: (29462-29541)
      000032ef: JUMPDEST                       // SRCID115: (29462-29541)
[004] 000032f0: JUMPDEST                       // SRCID115: (29423-29543)
[004] 000032f1: PUSH0                          // SRCID115: (29582-29583)
[004] 000032f2: PUSH2 0x32fd                   // SRCID115: (29607-29700)
[004] 000032f5: DUP5                           // SRCID115: (29692-29699)
[004] 000032f6: DUP3                           // SRCID115: (29683-29689)
[004] 000032f7: DUP6                           // SRCID115: (29672-29681)
[004] 000032f8: ADD                            // SRCID115: (29668-29690)
[004] 000032f9: PUSH2 0x3252                   // SRCID115: (29607-29700)
[004] 000032fc: JUMP                           // SRCID115: (29607-29700)
[004] 000032fd: JUMPDEST                       // SRCID115: (29607-29700)
[004] 000032fe: SWAP2                          // SRCID115: (29597-29700)
[004] 000032ff: POP                            // SRCID115: (29597-29700)
[004] 00003300: POP                            // SRCID115: (29553-29710)
[004] 00003301: SWAP3                          // SRCID115: (29307-29717)
[004] 00003302: SWAP2                          // SRCID115: (29307-29717)
[004] 00003303: POP                            // SRCID115: (29307-29717)
[004] 00003304: POP                            // SRCID115: (29307-29717)
[004] 00003305: JUMP                           // SRCID115: (29307-29717)
[026] 00003306: JUMPDEST                       // SRCID115: (29723-29892)
[026] 00003307: PUSH0                          // SRCID115: (29807-29818)
[026] 00003308: DUP3                           // SRCID115: (29841-29847)
[026] 00003309: DUP3                           // SRCID115: (29836-29839)
[026] 0000330a: MSTORE                         // SRCID115: (29829-29848)
[026] 0000330b: PUSH1 0x20                     // SRCID115: (29881-29885)
[026] 0000330d: DUP3                           // SRCID115: (29876-29879)
[026] 0000330e: ADD                            // SRCID115: (29872-29886)
[026] 0000330f: SWAP1                          // SRCID115: (29857-29886)
[026] 00003310: POP                            // SRCID115: (29857-29886)
[026] 00003311: SWAP3                          // SRCID115: (29723-29892)
[026] 00003312: SWAP2                          // SRCID115: (29723-29892)
[026] 00003313: POP                            // SRCID115: (29723-29892)
[026] 00003314: POP                            // SRCID115: (29723-29892)
[026] 00003315: JUMP                           // SRCID115: (29723-29892)
[001] 00003316: JUMPDEST                       // SRCID115: (29898-30078)
[001] 00003317: PUSH32 0x5061796d61737465722073686f756c64206e6f74206265207374616b65640000 // SRCID115: (30038-30070)
[001] 00003338: PUSH0                          // SRCID115: (30034-30035)
[001] 00003339: DUP3                           // SRCID115: (30026-30032)
[001] 0000333a: ADD                            // SRCID115: (30022-30036)
[001] 0000333b: MSTORE                         // SRCID115: (30015-30071)
[001] 0000333c: POP                            // SRCID115: (29898-30078)
[001] 0000333d: JUMP                           // SRCID115: (29898-30078)
[001] 0000333e: JUMPDEST                       // SRCID115: (30084-30450)
[001] 0000333f: PUSH0                          // SRCID115: (30226-30229)
[001] 00003340: PUSH2 0x334a                   // SRCID115: (30247-30314)
[001] 00003343: PUSH1 0x1e                     // SRCID115: (30311-30313)
[001] 00003345: DUP4                           // SRCID115: (30306-30309)
[001] 00003346: PUSH2 0x3306                   // SRCID115: (30247-30314)
[001] 00003349: JUMP                           // SRCID115: (30247-30314)
[001] 0000334a: JUMPDEST                       // SRCID115: (30247-30314)
[001] 0000334b: SWAP2                          // SRCID115: (30240-30314)
[001] 0000334c: POP                            // SRCID115: (30240-30314)
[001] 0000334d: PUSH2 0x3355                   // SRCID115: (30323-30416)
[001] 00003350: DUP3                           // SRCID115: (30412-30415)
[001] 00003351: PUSH2 0x3316                   // SRCID115: (30323-30416)
[001] 00003354: JUMP                           // SRCID115: (30323-30416)
[001] 00003355: JUMPDEST                       // SRCID115: (30323-30416)
[001] 00003356: PUSH1 0x20                     // SRCID115: (30441-30443)
[001] 00003358: DUP3                           // SRCID115: (30436-30439)
[001] 00003359: ADD                            // SRCID115: (30432-30444)
[001] 0000335a: SWAP1                          // SRCID115: (30425-30444)
[001] 0000335b: POP                            // SRCID115: (30425-30444)
[001] 0000335c: SWAP2                          // SRCID115: (30084-30450)
[001] 0000335d: SWAP1                          // SRCID115: (30084-30450)
[001] 0000335e: POP                            // SRCID115: (30084-30450)
[001] 0000335f: JUMP                           // SRCID115: (30084-30450)
[001] 00003360: JUMPDEST                       // SRCID115: (30456-30973)
[001] 00003361: PUSH0                          // SRCID115: (30644-30648)
[001] 00003362: PUSH1 0x40                     // SRCID115: (30682-30684)
[001] 00003364: DUP3                           // SRCID115: (30671-30680)
[001] 00003365: ADD                            // SRCID115: (30667-30685)
[001] 00003366: SWAP1                          // SRCID115: (30659-30685)
[001] 00003367: POP                            // SRCID115: (30659-30685)
[001] 00003368: PUSH2 0x3373                   // SRCID115: (30695-30760)
[001] 0000336b: PUSH0                          // SRCID115: (30757-30758)
[001] 0000336c: DUP4                           // SRCID115: (30746-30755)
[001] 0000336d: ADD                            // SRCID115: (30742-30759)
[001] 0000336e: DUP5                           // SRCID115: (30733-30739)
[001] 0000336f: PUSH2 0x2dbb                   // SRCID115: (30695-30760)
[001] 00003372: JUMP                           // SRCID115: (30695-30760)
[001] 00003373: JUMPDEST                       // SRCID115: (30695-30760)
[001] 00003374: DUP2                           // SRCID115: (30807-30816)
[001] 00003375: DUP2                           // SRCID115: (30801-30805)
[001] 00003376: SUB                            // SRCID115: (30797-30817)
[001] 00003377: PUSH1 0x20                     // SRCID115: (30792-30794)
[001] 00003379: DUP4                           // SRCID115: (30781-30790)
[001] 0000337a: ADD                            // SRCID115: (30777-30795)
[001] 0000337b: MSTORE                         // SRCID115: (30770-30818)
[001] 0000337c: PUSH2 0x3384                   // SRCID115: (30835-30966)
[001] 0000337f: DUP2                           // SRCID115: (30961-30965)
[001] 00003380: PUSH2 0x333e                   // SRCID115: (30835-30966)
[001] 00003383: JUMP                           // SRCID115: (30835-30966)
[001] 00003384: JUMPDEST                       // SRCID115: (30835-30966)
[001] 00003385: SWAP1                          // SRCID115: (30827-30966)
[001] 00003386: POP                            // SRCID115: (30827-30966)
[001] 00003387: SWAP3                          // SRCID115: (30456-30973)
[001] 00003388: SWAP2                          // SRCID115: (30456-30973)
[001] 00003389: POP                            // SRCID115: (30456-30973)
[001] 0000338a: POP                            // SRCID115: (30456-30973)
[001] 0000338b: JUMP                           // SRCID115: (30456-30973)
[002] 0000338c: JUMPDEST                       // SRCID115: (30979-31121)
[002] 0000338d: PUSH0                          // SRCID115: (31029-31038)
[002] 0000338e: PUSH2 0x33a6                   // SRCID115: (31062-31115)
[002] 00003391: PUSH2 0x33a1                   // SRCID115: (31080-31114)
[002] 00003394: PUSH2 0x339c                   // SRCID115: (31089-31113)
[002] 00003397: DUP5                           // SRCID115: (31107-31112)
[002] 00003398: PUSH2 0x31aa                   // SRCID115: (31089-31113)
[002] 0000339b: JUMP                           // SRCID115: (31089-31113)
[002] 0000339c: JUMPDEST                       // SRCID115: (31089-31113)
[002] 0000339d: PUSH2 0x2e19                   // SRCID115: (31080-31114)
[002] 000033a0: JUMP                           // SRCID115: (31080-31114)
[002] 000033a1: JUMPDEST                       // SRCID115: (31080-31114)
[002] 000033a2: PUSH2 0x2e96                   // SRCID115: (31062-31115)
[002] 000033a5: JUMP                           // SRCID115: (31062-31115)
[002] 000033a6: JUMPDEST                       // SRCID115: (31062-31115)
[002] 000033a7: SWAP1                          // SRCID115: (31049-31115)
[002] 000033a8: POP                            // SRCID115: (31049-31115)
[002] 000033a9: SWAP2                          // SRCID115: (30979-31121)
[002] 000033aa: SWAP1                          // SRCID115: (30979-31121)
[002] 000033ab: POP                            // SRCID115: (30979-31121)
[002] 000033ac: JUMP                           // SRCID115: (30979-31121)
[002] 000033ad: JUMPDEST                       // SRCID115: (31127-31258)
[002] 000033ae: PUSH2 0x33b6                   // SRCID115: (31214-31251)
[002] 000033b1: DUP2                           // SRCID115: (31245-31250)
[002] 000033b2: PUSH2 0x338c                   // SRCID115: (31214-31251)
[002] 000033b5: JUMP                           // SRCID115: (31214-31251)
[002] 000033b6: JUMPDEST                       // SRCID115: (31214-31251)
[002] 000033b7: DUP3                           // SRCID115: (31209-31212)
[002] 000033b8: MSTORE                         // SRCID115: (31202-31252)
[002] 000033b9: POP                            // SRCID115: (31127-31258)
[002] 000033ba: POP                            // SRCID115: (31127-31258)
[002] 000033bb: JUMP                           // SRCID115: (31127-31258)
[001] 000033bc: JUMPDEST                       // SRCID115: (31264-31484)
[001] 000033bd: PUSH32 0x5061796d61737465722773207374616b652073686f756c6420626520656d7074 // SRCID115: (31404-31438)
[001] 000033de: PUSH0                          // SRCID115: (31400-31401)
[001] 000033df: DUP3                           // SRCID115: (31392-31398)
[001] 000033e0: ADD                            // SRCID115: (31388-31402)
[001] 000033e1: MSTORE                         // SRCID115: (31381-31439)
[001] 000033e2: PUSH32 0x7900000000000000000000000000000000000000000000000000000000000000 // SRCID115: (31473-31476)
[001] 00003403: PUSH1 0x20                     // SRCID115: (31468-31470)
[001] 00003405: DUP3                           // SRCID115: (31460-31466)
[001] 00003406: ADD                            // SRCID115: (31456-31471)
[001] 00003407: MSTORE                         // SRCID115: (31449-31477)
[001] 00003408: POP                            // SRCID115: (31264-31484)
[001] 00003409: JUMP                           // SRCID115: (31264-31484)
[001] 0000340a: JUMPDEST                       // SRCID115: (31490-31856)
[001] 0000340b: PUSH0                          // SRCID115: (31632-31635)
[001] 0000340c: PUSH2 0x3416                   // SRCID115: (31653-31720)
[001] 0000340f: PUSH1 0x21                     // SRCID115: (31717-31719)
[001] 00003411: DUP4                           // SRCID115: (31712-31715)
[001] 00003412: PUSH2 0x3306                   // SRCID115: (31653-31720)
[001] 00003415: JUMP                           // SRCID115: (31653-31720)
[001] 00003416: JUMPDEST                       // SRCID115: (31653-31720)
[001] 00003417: SWAP2                          // SRCID115: (31646-31720)
[001] 00003418: POP                            // SRCID115: (31646-31720)
[001] 00003419: PUSH2 0x3421                   // SRCID115: (31729-31822)
[001] 0000341c: DUP3                           // SRCID115: (31818-31821)
[001] 0000341d: PUSH2 0x33bc                   // SRCID115: (31729-31822)
[001] 00003420: JUMP                           // SRCID115: (31729-31822)
[001] 00003421: JUMPDEST                       // SRCID115: (31729-31822)
[001] 00003422: PUSH1 0x40                     // SRCID115: (31847-31849)
[001] 00003424: DUP3                           // SRCID115: (31842-31845)
[001] 00003425: ADD                            // SRCID115: (31838-31850)
[001] 00003426: SWAP1                          // SRCID115: (31831-31850)
[001] 00003427: POP                            // SRCID115: (31831-31850)
[001] 00003428: SWAP2                          // SRCID115: (31490-31856)
[001] 00003429: SWAP1                          // SRCID115: (31490-31856)
[001] 0000342a: POP                            // SRCID115: (31490-31856)
[001] 0000342b: JUMP                           // SRCID115: (31490-31856)
[001] 0000342c: JUMPDEST                       // SRCID115: (31862-32517)
[001] 0000342d: PUSH0                          // SRCID115: (32092-32096)
[001] 0000342e: PUSH1 0x60                     // SRCID115: (32130-32132)
[001] 00003430: DUP3                           // SRCID115: (32119-32128)
[001] 00003431: ADD                            // SRCID115: (32115-32133)
[001] 00003432: SWAP1                          // SRCID115: (32107-32133)
[001] 00003433: POP                            // SRCID115: (32107-32133)
[001] 00003434: PUSH2 0x343f                   // SRCID115: (32143-32214)
[001] 00003437: PUSH0                          // SRCID115: (32211-32212)
[001] 00003438: DUP4                           // SRCID115: (32200-32209)
[001] 00003439: ADD                            // SRCID115: (32196-32213)
[001] 0000343a: DUP6                           // SRCID115: (32187-32193)
[001] 0000343b: PUSH2 0x33ad                   // SRCID115: (32143-32214)
[001] 0000343e: JUMP                           // SRCID115: (32143-32214)
[001] 0000343f: JUMPDEST                       // SRCID115: (32143-32214)
[001] 00003440: PUSH2 0x344c                   // SRCID115: (32224-32304)
[001] 00003443: PUSH1 0x20                     // SRCID115: (32300-32302)
[001] 00003445: DUP4                           // SRCID115: (32289-32298)
[001] 00003446: ADD                            // SRCID115: (32285-32303)
[001] 00003447: DUP5                           // SRCID115: (32276-32282)
[001] 00003448: PUSH2 0x2ec0                   // SRCID115: (32224-32304)
[001] 0000344b: JUMP                           // SRCID115: (32224-32304)
[001] 0000344c: JUMPDEST                       // SRCID115: (32224-32304)
[001] 0000344d: DUP2                           // SRCID115: (32351-32360)
[001] 0000344e: DUP2                           // SRCID115: (32345-32349)
[001] 0000344f: SUB                            // SRCID115: (32341-32361)
[001] 00003450: PUSH1 0x40                     // SRCID115: (32336-32338)
[001] 00003452: DUP4                           // SRCID115: (32325-32334)
[001] 00003453: ADD                            // SRCID115: (32321-32339)
[001] 00003454: MSTORE                         // SRCID115: (32314-32362)
[001] 00003455: PUSH2 0x345d                   // SRCID115: (32379-32510)
[001] 00003458: DUP2                           // SRCID115: (32505-32509)
[001] 00003459: PUSH2 0x340a                   // SRCID115: (32379-32510)
[001] 0000345c: JUMP                           // SRCID115: (32379-32510)
[001] 0000345d: JUMPDEST                       // SRCID115: (32379-32510)
[001] 0000345e: SWAP1                          // SRCID115: (32371-32510)
[001] 0000345f: POP                            // SRCID115: (32371-32510)
[001] 00003460: SWAP4                          // SRCID115: (31862-32517)
[001] 00003461: SWAP3                          // SRCID115: (31862-32517)
[001] 00003462: POP                            // SRCID115: (31862-32517)
[001] 00003463: POP                            // SRCID115: (31862-32517)
[001] 00003464: POP                            // SRCID115: (31862-32517)
[001] 00003465: JUMP                           // SRCID115: (31862-32517)
[001] 00003466: JUMPDEST                       // SRCID115: (32523-32757)
[001] 00003467: PUSH32 0x5374616b6520726563697069656e742073686f756c6420686176652072656365 // SRCID115: (32663-32697)
[001] 00003488: PUSH0                          // SRCID115: (32659-32660)
[001] 00003489: DUP3                           // SRCID115: (32651-32657)
[001] 0000348a: ADD                            // SRCID115: (32647-32661)
[001] 0000348b: MSTORE                         // SRCID115: (32640-32698)
[001] 0000348c: PUSH32 0x697665642066756c6c207374616b650000000000000000000000000000000000 // SRCID115: (32732-32749)
[001] 000034ad: PUSH1 0x20                     // SRCID115: (32727-32729)
[001] 000034af: DUP3                           // SRCID115: (32719-32725)
[001] 000034b0: ADD                            // SRCID115: (32715-32730)
[001] 000034b1: MSTORE                         // SRCID115: (32708-32750)
[001] 000034b2: POP                            // SRCID115: (32523-32757)
[001] 000034b3: JUMP                           // SRCID115: (32523-32757)
[001] 000034b4: JUMPDEST                       // SRCID115: (32763-33129)
[001] 000034b5: PUSH0                          // SRCID115: (32905-32908)
[001] 000034b6: PUSH2 0x34c0                   // SRCID115: (32926-32993)
[001] 000034b9: PUSH1 0x2f                     // SRCID115: (32990-32992)
[001] 000034bb: DUP4                           // SRCID115: (32985-32988)
[001] 000034bc: PUSH2 0x3306                   // SRCID115: (32926-32993)
[001] 000034bf: JUMP                           // SRCID115: (32926-32993)
[001] 000034c0: JUMPDEST                       // SRCID115: (32926-32993)
[001] 000034c1: SWAP2                          // SRCID115: (32919-32993)
[001] 000034c2: POP                            // SRCID115: (32919-32993)
[001] 000034c3: PUSH2 0x34cb                   // SRCID115: (33002-33095)
[001] 000034c6: DUP3                           // SRCID115: (33091-33094)
[001] 000034c7: PUSH2 0x3466                   // SRCID115: (33002-33095)
[001] 000034ca: JUMP                           // SRCID115: (33002-33095)
[001] 000034cb: JUMPDEST                       // SRCID115: (33002-33095)
[001] 000034cc: PUSH1 0x40                     // SRCID115: (33120-33122)
[001] 000034ce: DUP3                           // SRCID115: (33115-33118)
[001] 000034cf: ADD                            // SRCID115: (33111-33123)
[001] 000034d0: SWAP1                          // SRCID115: (33104-33123)
[001] 000034d1: POP                            // SRCID115: (33104-33123)
[001] 000034d2: SWAP2                          // SRCID115: (32763-33129)
[001] 000034d3: SWAP1                          // SRCID115: (32763-33129)
[001] 000034d4: POP                            // SRCID115: (32763-33129)
[001] 000034d5: JUMP                           // SRCID115: (32763-33129)
[001] 000034d6: JUMPDEST                       // SRCID115: (33135-33774)
[001] 000034d7: PUSH0                          // SRCID115: (33357-33361)
[001] 000034d8: PUSH1 0x60                     // SRCID115: (33395-33397)
[001] 000034da: DUP3                           // SRCID115: (33384-33393)
[001] 000034db: ADD                            // SRCID115: (33380-33398)
[001] 000034dc: SWAP1                          // SRCID115: (33372-33398)
[001] 000034dd: POP                            // SRCID115: (33372-33398)
[001] 000034de: PUSH2 0x34e9                   // SRCID115: (33408-33479)
[001] 000034e1: PUSH0                          // SRCID115: (33476-33477)
[001] 000034e2: DUP4                           // SRCID115: (33465-33474)
[001] 000034e3: ADD                            // SRCID115: (33461-33478)
[001] 000034e4: DUP6                           // SRCID115: (33452-33458)
[001] 000034e5: PUSH2 0x308a                   // SRCID115: (33408-33479)
[001] 000034e8: JUMP                           // SRCID115: (33408-33479)
[001] 000034e9: JUMPDEST                       // SRCID115: (33408-33479)
[001] 000034ea: PUSH2 0x34f6                   // SRCID115: (33489-33561)
[001] 000034ed: PUSH1 0x20                     // SRCID115: (33557-33559)
[001] 000034ef: DUP4                           // SRCID115: (33546-33555)
[001] 000034f0: ADD                            // SRCID115: (33542-33560)
[001] 000034f1: DUP5                           // SRCID115: (33533-33539)
[001] 000034f2: PUSH2 0x308a                   // SRCID115: (33489-33561)
[001] 000034f5: JUMP                           // SRCID115: (33489-33561)
[001] 000034f6: JUMPDEST                       // SRCID115: (33489-33561)
[001] 000034f7: DUP2                           // SRCID115: (33608-33617)
[001] 000034f8: DUP2                           // SRCID115: (33602-33606)
[001] 000034f9: SUB                            // SRCID115: (33598-33618)
[001] 000034fa: PUSH1 0x40                     // SRCID115: (33593-33595)
[001] 000034fc: DUP4                           // SRCID115: (33582-33591)
[001] 000034fd: ADD                            // SRCID115: (33578-33596)
[001] 000034fe: MSTORE                         // SRCID115: (33571-33619)
[001] 000034ff: PUSH2 0x3507                   // SRCID115: (33636-33767)
[001] 00003502: DUP2                           // SRCID115: (33762-33766)
[001] 00003503: PUSH2 0x34b4                   // SRCID115: (33636-33767)
[001] 00003506: JUMP                           // SRCID115: (33636-33767)
[001] 00003507: JUMPDEST                       // SRCID115: (33636-33767)
[001] 00003508: SWAP1                          // SRCID115: (33628-33767)
[001] 00003509: POP                            // SRCID115: (33628-33767)
[001] 0000350a: SWAP4                          // SRCID115: (33135-33774)
[001] 0000350b: SWAP3                          // SRCID115: (33135-33774)
[001] 0000350c: POP                            // SRCID115: (33135-33774)
[001] 0000350d: POP                            // SRCID115: (33135-33774)
[001] 0000350e: POP                            // SRCID115: (33135-33774)
[001] 0000350f: JUMP                           // SRCID115: (33135-33774)
[001] 00003510: JUMPDEST                       // SRCID115: (33780-34131)
[001] 00003511: PUSH0                          // SRCID115: (33850-33856)
[001] 00003512: PUSH1 0x20                     // SRCID115: (33899-33901)
[001] 00003514: DUP3                           // SRCID115: (33887-33896)
[001] 00003515: DUP5                           // SRCID115: (33878-33885)
[001] 00003516: SUB                            // SRCID115: (33874-33897)
[001] 00003517: SLT                            // SRCID115: (33870-33902)
[001] 00003518: ISZERO                         // SRCID115: (33867-33986)
[001] 00003519: PUSH2 0x3525                   // SRCID115: (33867-33986)
[001] 0000351c: JUMPI                          // SRCID115: (33867-33986)
      0000351d: PUSH2 0x3524                   // SRCID115: (33905-33984)
      00003520: PUSH2 0x2eff                   // SRCID115: (33905-33984)
      00003523: JUMP                           // SRCID115: (33905-33984)
      00003524: JUMPDEST                       // SRCID115: (33905-33984)
[001] 00003525: JUMPDEST                       // SRCID115: (33867-33986)
[001] 00003526: PUSH0                          // SRCID115: (34025-34026)
[001] 00003527: PUSH2 0x3532                   // SRCID115: (34050-34114)
[001] 0000352a: DUP5                           // SRCID115: (34106-34113)
[001] 0000352b: DUP3                           // SRCID115: (34097-34103)
[001] 0000352c: DUP6                           // SRCID115: (34086-34095)
[001] 0000352d: ADD                            // SRCID115: (34082-34104)
[001] 0000352e: PUSH2 0x316c                   // SRCID115: (34050-34114)
[001] 00003531: JUMP                           // SRCID115: (34050-34114)
[001] 00003532: JUMPDEST                       // SRCID115: (34050-34114)
[001] 00003533: SWAP2                          // SRCID115: (34040-34114)
[001] 00003534: POP                            // SRCID115: (34040-34114)
[001] 00003535: POP                            // SRCID115: (33996-34124)
[001] 00003536: SWAP3                          // SRCID115: (33780-34131)
[001] 00003537: SWAP2                          // SRCID115: (33780-34131)
[001] 00003538: POP                            // SRCID115: (33780-34131)
[001] 00003539: POP                            // SRCID115: (33780-34131)
[001] 0000353a: JUMP                           // SRCID115: (33780-34131)
[001] 0000353b: JUMPDEST                       // SRCID115: (34137-34381)
[001] 0000353c: PUSH32 0x7061796d6173746572206d757374206465706f73697420746f20456e74727950 // SRCID115: (34277-34311)
[001] 0000355d: PUSH0                          // SRCID115: (34273-34274)
[001] 0000355e: DUP3                           // SRCID115: (34265-34271)
[001] 0000355f: ADD                            // SRCID115: (34261-34275)
[001] 00003560: MSTORE                         // SRCID115: (34254-34312)
[001] 00003561: PUSH32 0x6f696e7420647572696e6720666f756e64727920736574557000000000000000 // SRCID115: (34346-34373)
[001] 00003582: PUSH1 0x20                     // SRCID115: (34341-34343)
[001] 00003584: DUP3                           // SRCID115: (34333-34339)
[001] 00003585: ADD                            // SRCID115: (34329-34344)
[001] 00003586: MSTORE                         // SRCID115: (34322-34374)
[001] 00003587: POP                            // SRCID115: (34137-34381)
[001] 00003588: JUMP                           // SRCID115: (34137-34381)
[001] 00003589: JUMPDEST                       // SRCID115: (34387-34753)
[001] 0000358a: PUSH0                          // SRCID115: (34529-34532)
[001] 0000358b: PUSH2 0x3595                   // SRCID115: (34550-34617)
[001] 0000358e: PUSH1 0x39                     // SRCID115: (34614-34616)
[001] 00003590: DUP4                           // SRCID115: (34609-34612)
[001] 00003591: PUSH2 0x3306                   // SRCID115: (34550-34617)
[001] 00003594: JUMP                           // SRCID115: (34550-34617)
[001] 00003595: JUMPDEST                       // SRCID115: (34550-34617)
[001] 00003596: SWAP2                          // SRCID115: (34543-34617)
[001] 00003597: POP                            // SRCID115: (34543-34617)
[001] 00003598: PUSH2 0x35a0                   // SRCID115: (34626-34719)
[001] 0000359b: DUP3                           // SRCID115: (34715-34718)
[001] 0000359c: PUSH2 0x353b                   // SRCID115: (34626-34719)
[001] 0000359f: JUMP                           // SRCID115: (34626-34719)
[001] 000035a0: JUMPDEST                       // SRCID115: (34626-34719)
[001] 000035a1: PUSH1 0x40                     // SRCID115: (34744-34746)
[001] 000035a3: DUP3                           // SRCID115: (34739-34742)
[001] 000035a4: ADD                            // SRCID115: (34735-34747)
[001] 000035a5: SWAP1                          // SRCID115: (34728-34747)
[001] 000035a6: POP                            // SRCID115: (34728-34747)
[001] 000035a7: SWAP2                          // SRCID115: (34387-34753)
[001] 000035a8: SWAP1                          // SRCID115: (34387-34753)
[001] 000035a9: POP                            // SRCID115: (34387-34753)
[001] 000035aa: JUMP                           // SRCID115: (34387-34753)
[001] 000035ab: JUMPDEST                       // SRCID115: (34759-35398)
[001] 000035ac: PUSH0                          // SRCID115: (34981-34985)
[001] 000035ad: PUSH1 0x60                     // SRCID115: (35019-35021)
[001] 000035af: DUP3                           // SRCID115: (35008-35017)
[001] 000035b0: ADD                            // SRCID115: (35004-35022)
[001] 000035b1: SWAP1                          // SRCID115: (34996-35022)
[001] 000035b2: POP                            // SRCID115: (34996-35022)
[001] 000035b3: PUSH2 0x35be                   // SRCID115: (35032-35103)
[001] 000035b6: PUSH0                          // SRCID115: (35100-35101)
[001] 000035b7: DUP4                           // SRCID115: (35089-35098)
[001] 000035b8: ADD                            // SRCID115: (35085-35102)
[001] 000035b9: DUP6                           // SRCID115: (35076-35082)
[001] 000035ba: PUSH2 0x308a                   // SRCID115: (35032-35103)
[001] 000035bd: JUMP                           // SRCID115: (35032-35103)
[001] 000035be: JUMPDEST                       // SRCID115: (35032-35103)
[001] 000035bf: PUSH2 0x35cb                   // SRCID115: (35113-35185)
[001] 000035c2: PUSH1 0x20                     // SRCID115: (35181-35183)
[001] 000035c4: DUP4                           // SRCID115: (35170-35179)
[001] 000035c5: ADD                            // SRCID115: (35166-35184)
[001] 000035c6: DUP5                           // SRCID115: (35157-35163)
[001] 000035c7: PUSH2 0x308a                   // SRCID115: (35113-35185)
[001] 000035ca: JUMP                           // SRCID115: (35113-35185)
[001] 000035cb: JUMPDEST                       // SRCID115: (35113-35185)
[001] 000035cc: DUP2                           // SRCID115: (35232-35241)
[001] 000035cd: DUP2                           // SRCID115: (35226-35230)
[001] 000035ce: SUB                            // SRCID115: (35222-35242)
[001] 000035cf: PUSH1 0x40                     // SRCID115: (35217-35219)
[001] 000035d1: DUP4                           // SRCID115: (35206-35215)
[001] 000035d2: ADD                            // SRCID115: (35202-35220)
[001] 000035d3: MSTORE                         // SRCID115: (35195-35243)
[001] 000035d4: PUSH2 0x35dc                   // SRCID115: (35260-35391)
[001] 000035d7: DUP2                           // SRCID115: (35386-35390)
[001] 000035d8: PUSH2 0x3589                   // SRCID115: (35260-35391)
[001] 000035db: JUMP                           // SRCID115: (35260-35391)
[001] 000035dc: JUMPDEST                       // SRCID115: (35260-35391)
[001] 000035dd: SWAP1                          // SRCID115: (35252-35391)
[001] 000035de: POP                            // SRCID115: (35252-35391)
[001] 000035df: SWAP4                          // SRCID115: (34759-35398)
[001] 000035e0: SWAP3                          // SRCID115: (34759-35398)
[001] 000035e1: POP                            // SRCID115: (34759-35398)
[001] 000035e2: POP                            // SRCID115: (34759-35398)
[001] 000035e3: POP                            // SRCID115: (34759-35398)
[001] 000035e4: JUMP                           // SRCID115: (34759-35398)
      000035e5: JUMPDEST                       // SRCID115: (35404-35584)
      000035e6: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID115: (35452-35529)
      00003607: PUSH0                          // SRCID115: (35449-35450)
      00003608: MSTORE                         // SRCID115: (35442-35530)
      00003609: PUSH1 0x22                     // SRCID115: (35549-35553)
      0000360b: PUSH1 0x4                      // SRCID115: (35546-35547)
      0000360d: MSTORE                         // SRCID115: (35539-35554)
      0000360e: PUSH1 0x24                     // SRCID115: (35573-35577)
      00003610: PUSH0                          // SRCID115: (35570-35571)
      00003611: REVERT                         // SRCID115: (35563-35578)
      00003612: JUMPDEST                       // SRCID115: (35590-35910)
      00003613: PUSH0                          // SRCID115: (35634-35640)
      00003614: PUSH1 0x2                      // SRCID115: (35671-35672)
      00003616: DUP3                           // SRCID115: (35665-35669)
      00003617: DIV                            // SRCID115: (35661-35673)
      00003618: SWAP1                          // SRCID115: (35651-35673)
      00003619: POP                            // SRCID115: (35651-35673)
      0000361a: PUSH1 0x1                      // SRCID115: (35718-35719)
      0000361c: DUP3                           // SRCID115: (35712-35716)
      0000361d: AND                            // SRCID115: (35708-35720)
      0000361e: DUP1                           // SRCID115: (35739-35757)
      0000361f: PUSH2 0x3629                   // SRCID115: (35729-35810)
      00003622: JUMPI                          // SRCID115: (35729-35810)
      00003623: PUSH1 0x7f                     // SRCID115: (35795-35799)
      00003625: DUP3                           // SRCID115: (35787-35793)
      00003626: AND                            // SRCID115: (35783-35800)
      00003627: SWAP2                          // SRCID115: (35773-35800)
      00003628: POP                            // SRCID115: (35773-35800)
      00003629: JUMPDEST                       // SRCID115: (35729-35810)
      0000362a: PUSH1 0x20                     // SRCID115: (35857-35859)
      0000362c: DUP3                           // SRCID115: (35849-35855)
      0000362d: LT                             // SRCID115: (35846-35860)
      0000362e: DUP2                           // SRCID115: (35826-35844)
      0000362f: SUB                            // SRCID115: (35823-35861)
      00003630: PUSH2 0x363c                   // SRCID115: (35820-35904)
      00003633: JUMPI                          // SRCID115: (35820-35904)
      00003634: PUSH2 0x363b                   // SRCID115: (35876-35894)
      00003637: PUSH2 0x35e5                   // SRCID115: (35876-35894)
      0000363a: JUMP                           // SRCID115: (35876-35894)
      0000363b: JUMPDEST                       // SRCID115: (35876-35894)
      0000363c: JUMPDEST                       // SRCID115: (35820-35904)
      0000363d: POP                            // SRCID115: (35641-35910)
      0000363e: SWAP2                          // SRCID115: (35590-35910)
      0000363f: SWAP1                          // SRCID115: (35590-35910)
      00003640: POP                            // SRCID115: (35590-35910)
      00003641: JUMP                           // SRCID115: (35590-35910)
[020] 00003642: JUMPDEST                       // SRCID115: (35916-36038)
[020] 00003643: PUSH2 0x364b                   // SRCID115: (35989-36013)
[020] 00003646: DUP2                           // SRCID115: (36007-36012)
[020] 00003647: PUSH2 0x26fb                   // SRCID115: (35989-36013)
[020] 0000364a: JUMP                           // SRCID115: (35989-36013)
[020] 0000364b: JUMPDEST                       // SRCID115: (35989-36013)
[020] 0000364c: DUP2                           // SRCID115: (35982-35987)
[020] 0000364d: EQ                             // SRCID115: (35979-36014)
[020] 0000364e: PUSH2 0x3655                   // SRCID115: (35969-36032)
[020] 00003651: JUMPI                          // SRCID115: (35969-36032)
      00003652: PUSH0                          // SRCID115: (36028-36029)
      00003653: DUP1                           // SRCID115: (36025-36026)
      00003654: REVERT                         // SRCID115: (36018-36030)
[020] 00003655: JUMPDEST                       // SRCID115: (35969-36032)
[020] 00003656: POP                            // SRCID115: (35916-36038)
[020] 00003657: JUMP                           // SRCID115: (35916-36038)
[020] 00003658: JUMPDEST                       // SRCID115: (36044-36187)
[020] 00003659: PUSH0                          // SRCID115: (36101-36106)
[020] 0000365a: DUP2                           // SRCID115: (36132-36138)
[020] 0000365b: MLOAD                          // SRCID115: (36126-36139)
[020] 0000365c: SWAP1                          // SRCID115: (36117-36139)
[020] 0000365d: POP                            // SRCID115: (36117-36139)
[020] 0000365e: PUSH2 0x3666                   // SRCID115: (36148-36181)
[020] 00003661: DUP2                           // SRCID115: (36175-36180)
[020] 00003662: PUSH2 0x3642                   // SRCID115: (36148-36181)
[020] 00003665: JUMP                           // SRCID115: (36148-36181)
[020] 00003666: JUMPDEST                       // SRCID115: (36148-36181)
[020] 00003667: SWAP3                          // SRCID115: (36044-36187)
[020] 00003668: SWAP2                          // SRCID115: (36044-36187)
[020] 00003669: POP                            // SRCID115: (36044-36187)
[020] 0000366a: POP                            // SRCID115: (36044-36187)
[020] 0000366b: JUMP                           // SRCID115: (36044-36187)
[020] 0000366c: JUMPDEST                       // SRCID115: (36193-36544)
[020] 0000366d: PUSH0                          // SRCID115: (36263-36269)
[020] 0000366e: PUSH1 0x20                     // SRCID115: (36312-36314)
[020] 00003670: DUP3                           // SRCID115: (36300-36309)
[020] 00003671: DUP5                           // SRCID115: (36291-36298)
[020] 00003672: SUB                            // SRCID115: (36287-36310)
[020] 00003673: SLT                            // SRCID115: (36283-36315)
[020] 00003674: ISZERO                         // SRCID115: (36280-36399)
[020] 00003675: PUSH2 0x3681                   // SRCID115: (36280-36399)
[020] 00003678: JUMPI                          // SRCID115: (36280-36399)
      00003679: PUSH2 0x3680                   // SRCID115: (36318-36397)
      0000367c: PUSH2 0x2eff                   // SRCID115: (36318-36397)
      0000367f: JUMP                           // SRCID115: (36318-36397)
      00003680: JUMPDEST                       // SRCID115: (36318-36397)
[020] 00003681: JUMPDEST                       // SRCID115: (36280-36399)
[020] 00003682: PUSH0                          // SRCID115: (36438-36439)
[020] 00003683: PUSH2 0x368e                   // SRCID115: (36463-36527)
[020] 00003686: DUP5                           // SRCID115: (36519-36526)
[020] 00003687: DUP3                           // SRCID115: (36510-36516)
[020] 00003688: DUP6                           // SRCID115: (36499-36508)
[020] 00003689: ADD                            // SRCID115: (36495-36517)
[020] 0000368a: PUSH2 0x3658                   // SRCID115: (36463-36527)
[020] 0000368d: JUMP                           // SRCID115: (36463-36527)
[020] 0000368e: JUMPDEST                       // SRCID115: (36463-36527)
[020] 0000368f: SWAP2                          // SRCID115: (36453-36527)
[020] 00003690: POP                            // SRCID115: (36453-36527)
[020] 00003691: POP                            // SRCID115: (36409-36537)
[020] 00003692: SWAP3                          // SRCID115: (36193-36544)
[020] 00003693: SWAP2                          // SRCID115: (36193-36544)
[020] 00003694: POP                            // SRCID115: (36193-36544)
[020] 00003695: POP                            // SRCID115: (36193-36544)
[020] 00003696: JUMP                           // SRCID115: (36193-36544)
[001] 00003697: JUMPDEST                       // SRCID115: (36550-36684)
[001] 00003698: PUSH0                          // SRCID115: (36608-36617)
[001] 00003699: PUSH2 0x36a1                   // SRCID115: (36641-36678)
[001] 0000369c: DUP3                           // SRCID115: (36672-36677)
[001] 0000369d: PUSH2 0x2e43                   // SRCID115: (36641-36678)
[001] 000036a0: JUMP                           // SRCID115: (36641-36678)
[001] 000036a1: JUMPDEST                       // SRCID115: (36641-36678)
[001] 000036a2: SWAP1                          // SRCID115: (36628-36678)
[001] 000036a3: POP                            // SRCID115: (36628-36678)
[001] 000036a4: SWAP2                          // SRCID115: (36550-36684)
[001] 000036a5: SWAP1                          // SRCID115: (36550-36684)
[001] 000036a6: POP                            // SRCID115: (36550-36684)
[001] 000036a7: JUMP                           // SRCID115: (36550-36684)
[001] 000036a8: JUMPDEST                       // SRCID115: (36690-36837)
[001] 000036a9: PUSH2 0x36b1                   // SRCID115: (36785-36830)
[001] 000036ac: DUP2                           // SRCID115: (36824-36829)
[001] 000036ad: PUSH2 0x3697                   // SRCID115: (36785-36830)
[001] 000036b0: JUMP                           // SRCID115: (36785-36830)
[001] 000036b1: JUMPDEST                       // SRCID115: (36785-36830)
[001] 000036b2: DUP3                           // SRCID115: (36780-36783)
[001] 000036b3: MSTORE                         // SRCID115: (36773-36831)
[001] 000036b4: POP                            // SRCID115: (36690-36837)
[001] 000036b5: POP                            // SRCID115: (36690-36837)
[001] 000036b6: JUMP                           // SRCID115: (36690-36837)
[001] 000036b7: JUMPDEST                       // SRCID115: (36843-37081)
[001] 000036b8: PUSH0                          // SRCID115: (36944-36948)
[001] 000036b9: PUSH1 0x20                     // SRCID115: (36982-36984)
[001] 000036bb: DUP3                           // SRCID115: (36971-36980)
[001] 000036bc: ADD                            // SRCID115: (36967-36985)
[001] 000036bd: SWAP1                          // SRCID115: (36959-36985)
[001] 000036be: POP                            // SRCID115: (36959-36985)
[001] 000036bf: PUSH2 0x36ca                   // SRCID115: (36995-37074)
[001] 000036c2: PUSH0                          // SRCID115: (37071-37072)
[001] 000036c3: DUP4                           // SRCID115: (37060-37069)
[001] 000036c4: ADD                            // SRCID115: (37056-37073)
[001] 000036c5: DUP5                           // SRCID115: (37047-37053)
[001] 000036c6: PUSH2 0x36a8                   // SRCID115: (36995-37074)
[001] 000036c9: JUMP                           // SRCID115: (36995-37074)
[001] 000036ca: JUMPDEST                       // SRCID115: (36995-37074)
[001] 000036cb: SWAP3                          // SRCID115: (36843-37081)
[001] 000036cc: SWAP2                          // SRCID115: (36843-37081)
[001] 000036cd: POP                            // SRCID115: (36843-37081)
[001] 000036ce: POP                            // SRCID115: (36843-37081)
[001] 000036cf: JUMP                           // SRCID115: (36843-37081)
[001] 000036d0: JUMPDEST                       // SRCID115: (37087-37173)
[001] 000036d1: PUSH0                          // SRCID115: (37133-37140)
[001] 000036d2: DUP2                           // SRCID115: (37162-37167)
[001] 000036d3: SWAP1                          // SRCID115: (37151-37167)
[001] 000036d4: POP                            // SRCID115: (37151-37167)
[001] 000036d5: SWAP2                          // SRCID115: (37087-37173)
[001] 000036d6: SWAP1                          // SRCID115: (37087-37173)
[001] 000036d7: POP                            // SRCID115: (37087-37173)
[001] 000036d8: JUMP                           // SRCID115: (37087-37173)
[001] 000036d9: JUMPDEST                       // SRCID115: (37179-37337)
[001] 000036da: PUSH0                          // SRCID115: (37237-37246)
[001] 000036db: PUSH2 0x36f3                   // SRCID115: (37270-37331)
[001] 000036de: PUSH2 0x36ee                   // SRCID115: (37287-37330)
[001] 000036e1: PUSH2 0x36e9                   // SRCID115: (37296-37329)
[001] 000036e4: DUP5                           // SRCID115: (37323-37328)
[001] 000036e5: PUSH2 0x36d0                   // SRCID115: (37296-37329)
[001] 000036e8: JUMP                           // SRCID115: (37296-37329)
[001] 000036e9: JUMPDEST                       // SRCID115: (37296-37329)
[001] 000036ea: PUSH2 0x2e19                   // SRCID115: (37287-37330)
[001] 000036ed: JUMP                           // SRCID115: (37287-37330)
[001] 000036ee: JUMPDEST                       // SRCID115: (37287-37330)
[001] 000036ef: PUSH2 0x2ff3                   // SRCID115: (37270-37331)
[001] 000036f2: JUMP                           // SRCID115: (37270-37331)
[001] 000036f3: JUMPDEST                       // SRCID115: (37270-37331)
[001] 000036f4: SWAP1                          // SRCID115: (37257-37331)
[001] 000036f5: POP                            // SRCID115: (37257-37331)
[001] 000036f6: SWAP2                          // SRCID115: (37179-37337)
[001] 000036f7: SWAP1                          // SRCID115: (37179-37337)
[001] 000036f8: POP                            // SRCID115: (37179-37337)
[001] 000036f9: JUMP                           // SRCID115: (37179-37337)
[001] 000036fa: JUMPDEST                       // SRCID115: (37343-37490)
[001] 000036fb: PUSH2 0x3703                   // SRCID115: (37438-37483)
[001] 000036fe: DUP2                           // SRCID115: (37477-37482)
[001] 000036ff: PUSH2 0x36d9                   // SRCID115: (37438-37483)
[001] 00003702: JUMP                           // SRCID115: (37438-37483)
[001] 00003703: JUMPDEST                       // SRCID115: (37438-37483)
[001] 00003704: DUP3                           // SRCID115: (37433-37436)
[001] 00003705: MSTORE                         // SRCID115: (37426-37484)
[001] 00003706: POP                            // SRCID115: (37343-37490)
[001] 00003707: POP                            // SRCID115: (37343-37490)
[001] 00003708: JUMP                           // SRCID115: (37343-37490)
[001] 00003709: JUMPDEST                       // SRCID115: (37496-37734)
[001] 0000370a: PUSH0                          // SRCID115: (37597-37601)
[001] 0000370b: PUSH1 0x20                     // SRCID115: (37635-37637)
[001] 0000370d: DUP3                           // SRCID115: (37624-37633)
[001] 0000370e: ADD                            // SRCID115: (37620-37638)
[001] 0000370f: SWAP1                          // SRCID115: (37612-37638)
[001] 00003710: POP                            // SRCID115: (37612-37638)
[001] 00003711: PUSH2 0x371c                   // SRCID115: (37648-37727)
[001] 00003714: PUSH0                          // SRCID115: (37724-37725)
[001] 00003715: DUP4                           // SRCID115: (37713-37722)
[001] 00003716: ADD                            // SRCID115: (37709-37726)
[001] 00003717: DUP5                           // SRCID115: (37700-37706)
[001] 00003718: PUSH2 0x36fa                   // SRCID115: (37648-37727)
[001] 0000371b: JUMP                           // SRCID115: (37648-37727)
[001] 0000371c: JUMPDEST                       // SRCID115: (37648-37727)
[001] 0000371d: SWAP3                          // SRCID115: (37496-37734)
[001] 0000371e: SWAP2                          // SRCID115: (37496-37734)
[001] 0000371f: POP                            // SRCID115: (37496-37734)
[001] 00003720: POP                            // SRCID115: (37496-37734)
[001] 00003721: JUMP                           // SRCID115: (37496-37734)
[001] 00003722: JUMPDEST                       // SRCID115: (37740-37916)
[001] 00003723: PUSH32 0x5061796d61737465722073686f756c64206265207374616b6564000000000000 // SRCID115: (37880-37908)
[001] 00003744: PUSH0                          // SRCID115: (37876-37877)
[001] 00003745: DUP3                           // SRCID115: (37868-37874)
[001] 00003746: ADD                            // SRCID115: (37864-37878)
[001] 00003747: MSTORE                         // SRCID115: (37857-37909)
[001] 00003748: POP                            // SRCID115: (37740-37916)
[001] 00003749: JUMP                           // SRCID115: (37740-37916)
[001] 0000374a: JUMPDEST                       // SRCID115: (37922-38288)
[001] 0000374b: PUSH0                          // SRCID115: (38064-38067)
[001] 0000374c: PUSH2 0x3756                   // SRCID115: (38085-38152)
[001] 0000374f: PUSH1 0x1a                     // SRCID115: (38149-38151)
[001] 00003751: DUP4                           // SRCID115: (38144-38147)
[001] 00003752: PUSH2 0x3306                   // SRCID115: (38085-38152)
[001] 00003755: JUMP                           // SRCID115: (38085-38152)
[001] 00003756: JUMPDEST                       // SRCID115: (38085-38152)
[001] 00003757: SWAP2                          // SRCID115: (38078-38152)
[001] 00003758: POP                            // SRCID115: (38078-38152)
[001] 00003759: PUSH2 0x3761                   // SRCID115: (38161-38254)
[001] 0000375c: DUP3                           // SRCID115: (38250-38253)
[001] 0000375d: PUSH2 0x3722                   // SRCID115: (38161-38254)
[001] 00003760: JUMP                           // SRCID115: (38161-38254)
[001] 00003761: JUMPDEST                       // SRCID115: (38161-38254)
[001] 00003762: PUSH1 0x20                     // SRCID115: (38279-38281)
[001] 00003764: DUP3                           // SRCID115: (38274-38277)
[001] 00003765: ADD                            // SRCID115: (38270-38282)
[001] 00003766: SWAP1                          // SRCID115: (38263-38282)
[001] 00003767: POP                            // SRCID115: (38263-38282)
[001] 00003768: SWAP2                          // SRCID115: (37922-38288)
[001] 00003769: SWAP1                          // SRCID115: (37922-38288)
[001] 0000376a: POP                            // SRCID115: (37922-38288)
[001] 0000376b: JUMP                           // SRCID115: (37922-38288)
[001] 0000376c: JUMPDEST                       // SRCID115: (38294-38811)
[001] 0000376d: PUSH0                          // SRCID115: (38482-38486)
[001] 0000376e: PUSH1 0x40                     // SRCID115: (38520-38522)
[001] 00003770: DUP3                           // SRCID115: (38509-38518)
[001] 00003771: ADD                            // SRCID115: (38505-38523)
[001] 00003772: SWAP1                          // SRCID115: (38497-38523)
[001] 00003773: POP                            // SRCID115: (38497-38523)
[001] 00003774: PUSH2 0x377f                   // SRCID115: (38533-38598)
[001] 00003777: PUSH0                          // SRCID115: (38595-38596)
[001] 00003778: DUP4                           // SRCID115: (38584-38593)
[001] 00003779: ADD                            // SRCID115: (38580-38597)
[001] 0000377a: DUP5                           // SRCID115: (38571-38577)
[001] 0000377b: PUSH2 0x2dbb                   // SRCID115: (38533-38598)
[001] 0000377e: JUMP                           // SRCID115: (38533-38598)
[001] 0000377f: JUMPDEST                       // SRCID115: (38533-38598)
[001] 00003780: DUP2                           // SRCID115: (38645-38654)
[001] 00003781: DUP2                           // SRCID115: (38639-38643)
[001] 00003782: SUB                            // SRCID115: (38635-38655)
[001] 00003783: PUSH1 0x20                     // SRCID115: (38630-38632)
[001] 00003785: DUP4                           // SRCID115: (38619-38628)
[001] 00003786: ADD                            // SRCID115: (38615-38633)
[001] 00003787: MSTORE                         // SRCID115: (38608-38656)
[001] 00003788: PUSH2 0x3790                   // SRCID115: (38673-38804)
[001] 0000378b: DUP2                           // SRCID115: (38799-38803)
[001] 0000378c: PUSH2 0x374a                   // SRCID115: (38673-38804)
[001] 0000378f: JUMP                           // SRCID115: (38673-38804)
[001] 00003790: JUMPDEST                       // SRCID115: (38673-38804)
[001] 00003791: SWAP1                          // SRCID115: (38665-38804)
[001] 00003792: POP                            // SRCID115: (38665-38804)
[001] 00003793: SWAP3                          // SRCID115: (38294-38811)
[001] 00003794: SWAP2                          // SRCID115: (38294-38811)
[001] 00003795: POP                            // SRCID115: (38294-38811)
[001] 00003796: POP                            // SRCID115: (38294-38811)
[001] 00003797: JUMP                           // SRCID115: (38294-38811)
[001] 00003798: JUMPDEST                       // SRCID115: (38817-39047)
[001] 00003799: PUSH32 0x5061796d617374657227732073686f756c64207374616b652074686520636f72 // SRCID115: (38957-38991)
[001] 000037ba: PUSH0                          // SRCID115: (38953-38954)
[001] 000037bb: DUP3                           // SRCID115: (38945-38951)
[001] 000037bc: ADD                            // SRCID115: (38941-38955)
[001] 000037bd: MSTORE                         // SRCID115: (38934-38992)
[001] 000037be: PUSH32 0x7265637420616d6f756e74000000000000000000000000000000000000000000 // SRCID115: (39026-39039)
[001] 000037df: PUSH1 0x20                     // SRCID115: (39021-39023)
[001] 000037e1: DUP3                           // SRCID115: (39013-39019)
[001] 000037e2: ADD                            // SRCID115: (39009-39024)
[001] 000037e3: MSTORE                         // SRCID115: (39002-39040)
[001] 000037e4: POP                            // SRCID115: (38817-39047)
[001] 000037e5: JUMP                           // SRCID115: (38817-39047)
[001] 000037e6: JUMPDEST                       // SRCID115: (39053-39419)
[001] 000037e7: PUSH0                          // SRCID115: (39195-39198)
[001] 000037e8: PUSH2 0x37f2                   // SRCID115: (39216-39283)
[001] 000037eb: PUSH1 0x2b                     // SRCID115: (39280-39282)
[001] 000037ed: DUP4                           // SRCID115: (39275-39278)
[001] 000037ee: PUSH2 0x3306                   // SRCID115: (39216-39283)
[001] 000037f1: JUMP                           // SRCID115: (39216-39283)
[001] 000037f2: JUMPDEST                       // SRCID115: (39216-39283)
[001] 000037f3: SWAP2                          // SRCID115: (39209-39283)
[001] 000037f4: POP                            // SRCID115: (39209-39283)
[001] 000037f5: PUSH2 0x37fd                   // SRCID115: (39292-39385)
[001] 000037f8: DUP3                           // SRCID115: (39381-39384)
[001] 000037f9: PUSH2 0x3798                   // SRCID115: (39292-39385)
[001] 000037fc: JUMP                           // SRCID115: (39292-39385)
[001] 000037fd: JUMPDEST                       // SRCID115: (39292-39385)
[001] 000037fe: PUSH1 0x40                     // SRCID115: (39410-39412)
[001] 00003800: DUP3                           // SRCID115: (39405-39408)
[001] 00003801: ADD                            // SRCID115: (39401-39413)
[001] 00003802: SWAP1                          // SRCID115: (39394-39413)
[001] 00003803: POP                            // SRCID115: (39394-39413)
[001] 00003804: SWAP2                          // SRCID115: (39053-39419)
[001] 00003805: SWAP1                          // SRCID115: (39053-39419)
[001] 00003806: POP                            // SRCID115: (39053-39419)
[001] 00003807: JUMP                           // SRCID115: (39053-39419)
[001] 00003808: JUMPDEST                       // SRCID115: (39425-40064)
[001] 00003809: PUSH0                          // SRCID115: (39647-39651)
[001] 0000380a: PUSH1 0x60                     // SRCID115: (39685-39687)
[001] 0000380c: DUP3                           // SRCID115: (39674-39683)
[001] 0000380d: ADD                            // SRCID115: (39670-39688)
[001] 0000380e: SWAP1                          // SRCID115: (39662-39688)
[001] 0000380f: POP                            // SRCID115: (39662-39688)
[001] 00003810: PUSH2 0x381b                   // SRCID115: (39698-39769)
[001] 00003813: PUSH0                          // SRCID115: (39766-39767)
[001] 00003814: DUP4                           // SRCID115: (39755-39764)
[001] 00003815: ADD                            // SRCID115: (39751-39768)
[001] 00003816: DUP6                           // SRCID115: (39742-39748)
[001] 00003817: PUSH2 0x33ad                   // SRCID115: (39698-39769)
[001] 0000381a: JUMP                           // SRCID115: (39698-39769)
[001] 0000381b: JUMPDEST                       // SRCID115: (39698-39769)
[001] 0000381c: PUSH2 0x3828                   // SRCID115: (39779-39851)
[001] 0000381f: PUSH1 0x20                     // SRCID115: (39847-39849)
[001] 00003821: DUP4                           // SRCID115: (39836-39845)
[001] 00003822: ADD                            // SRCID115: (39832-39850)
[001] 00003823: DUP5                           // SRCID115: (39823-39829)
[001] 00003824: PUSH2 0x308a                   // SRCID115: (39779-39851)
[001] 00003827: JUMP                           // SRCID115: (39779-39851)
[001] 00003828: JUMPDEST                       // SRCID115: (39779-39851)
[001] 00003829: DUP2                           // SRCID115: (39898-39907)
[001] 0000382a: DUP2                           // SRCID115: (39892-39896)
[001] 0000382b: SUB                            // SRCID115: (39888-39908)
[001] 0000382c: PUSH1 0x40                     // SRCID115: (39883-39885)
[001] 0000382e: DUP4                           // SRCID115: (39872-39881)
[001] 0000382f: ADD                            // SRCID115: (39868-39886)
[001] 00003830: MSTORE                         // SRCID115: (39861-39909)
[001] 00003831: PUSH2 0x3839                   // SRCID115: (39926-40057)
[001] 00003834: DUP2                           // SRCID115: (40052-40056)
[001] 00003835: PUSH2 0x37e6                   // SRCID115: (39926-40057)
[001] 00003838: JUMP                           // SRCID115: (39926-40057)
[001] 00003839: JUMPDEST                       // SRCID115: (39926-40057)
[001] 0000383a: SWAP1                          // SRCID115: (39918-40057)
[001] 0000383b: POP                            // SRCID115: (39918-40057)
[001] 0000383c: SWAP4                          // SRCID115: (39425-40064)
[001] 0000383d: SWAP3                          // SRCID115: (39425-40064)
[001] 0000383e: POP                            // SRCID115: (39425-40064)
[001] 0000383f: POP                            // SRCID115: (39425-40064)
[001] 00003840: POP                            // SRCID115: (39425-40064)
[001] 00003841: JUMP                           // SRCID115: (39425-40064)
      00003842: JUMPDEST                       // SRCID115: (40070-40147)
      00003843: PUSH0                          // SRCID115: (40107-40114)
      00003844: DUP2                           // SRCID115: (40136-40141)
      00003845: SWAP1                          // SRCID115: (40125-40141)
      00003846: POP                            // SRCID115: (40125-40141)
      00003847: SWAP2                          // SRCID115: (40070-40147)
      00003848: SWAP1                          // SRCID115: (40070-40147)
      00003849: POP                            // SRCID115: (40070-40147)
      0000384a: JUMP                           // SRCID115: (40070-40147)
      0000384b: JUMPDEST                       // SRCID115: (40153-40271)
      0000384c: PUSH2 0x3854                   // SRCID115: (40240-40264)
      0000384f: DUP2                           // SRCID115: (40258-40263)
      00003850: PUSH2 0x3842                   // SRCID115: (40240-40264)
      00003853: JUMP                           // SRCID115: (40240-40264)
      00003854: JUMPDEST                       // SRCID115: (40240-40264)
      00003855: DUP3                           // SRCID115: (40235-40238)
      00003856: MSTORE                         // SRCID115: (40228-40265)
      00003857: POP                            // SRCID115: (40153-40271)
      00003858: POP                            // SRCID115: (40153-40271)
      00003859: JUMP                           // SRCID115: (40153-40271)
      0000385a: JUMPDEST                       // SRCID115: (40277-40609)
      0000385b: PUSH0                          // SRCID115: (40398-40402)
      0000385c: PUSH1 0x40                     // SRCID115: (40436-40438)
      0000385e: DUP3                           // SRCID115: (40425-40434)
      0000385f: ADD                            // SRCID115: (40421-40439)
      00003860: SWAP1                          // SRCID115: (40413-40439)
      00003861: POP                            // SRCID115: (40413-40439)
      00003862: PUSH2 0x386d                   // SRCID115: (40449-40520)
      00003865: PUSH0                          // SRCID115: (40517-40518)
      00003866: DUP4                           // SRCID115: (40506-40515)
      00003867: ADD                            // SRCID115: (40502-40519)
      00003868: DUP6                           // SRCID115: (40493-40499)
      00003869: PUSH2 0x2de3                   // SRCID115: (40449-40520)
      0000386c: JUMP                           // SRCID115: (40449-40520)
      0000386d: JUMPDEST                       // SRCID115: (40449-40520)
      0000386e: PUSH2 0x387a                   // SRCID115: (40530-40602)
      00003871: PUSH1 0x20                     // SRCID115: (40598-40600)
      00003873: DUP4                           // SRCID115: (40587-40596)
      00003874: ADD                            // SRCID115: (40583-40601)
      00003875: DUP5                           // SRCID115: (40574-40580)
      00003876: PUSH2 0x384b                   // SRCID115: (40530-40602)
      00003879: JUMP                           // SRCID115: (40530-40602)
      0000387a: JUMPDEST                       // SRCID115: (40530-40602)
      0000387b: SWAP4                          // SRCID115: (40277-40609)
      0000387c: SWAP3                          // SRCID115: (40277-40609)
      0000387d: POP                            // SRCID115: (40277-40609)
      0000387e: POP                            // SRCID115: (40277-40609)
      0000387f: POP                            // SRCID115: (40277-40609)
      00003880: JUMP                           // SRCID115: (40277-40609)
      00003881: JUMPDEST                       // SRCID115: (40615-40737)
      00003882: PUSH2 0x388a                   // SRCID115: (40688-40712)
      00003885: DUP2                           // SRCID115: (40706-40711)
      00003886: PUSH2 0x3842                   // SRCID115: (40688-40712)
      00003889: JUMP                           // SRCID115: (40688-40712)
      0000388a: JUMPDEST                       // SRCID115: (40688-40712)
      0000388b: DUP2                           // SRCID115: (40681-40686)
      0000388c: EQ                             // SRCID115: (40678-40713)
      0000388d: PUSH2 0x3894                   // SRCID115: (40668-40731)
      00003890: JUMPI                          // SRCID115: (40668-40731)
      00003891: PUSH0                          // SRCID115: (40727-40728)
      00003892: DUP1                           // SRCID115: (40724-40725)
      00003893: REVERT                         // SRCID115: (40717-40729)
      00003894: JUMPDEST                       // SRCID115: (40668-40731)
      00003895: POP                            // SRCID115: (40615-40737)
      00003896: JUMP                           // SRCID115: (40615-40737)
      00003897: JUMPDEST                       // SRCID115: (40743-40886)
      00003898: PUSH0                          // SRCID115: (40800-40805)
      00003899: DUP2                           // SRCID115: (40831-40837)
      0000389a: MLOAD                          // SRCID115: (40825-40838)
      0000389b: SWAP1                          // SRCID115: (40816-40838)
      0000389c: POP                            // SRCID115: (40816-40838)
      0000389d: PUSH2 0x38a5                   // SRCID115: (40847-40880)
      000038a0: DUP2                           // SRCID115: (40874-40879)
      000038a1: PUSH2 0x3881                   // SRCID115: (40847-40880)
      000038a4: JUMP                           // SRCID115: (40847-40880)
      000038a5: JUMPDEST                       // SRCID115: (40847-40880)
      000038a6: SWAP3                          // SRCID115: (40743-40886)
      000038a7: SWAP2                          // SRCID115: (40743-40886)
      000038a8: POP                            // SRCID115: (40743-40886)
      000038a9: POP                            // SRCID115: (40743-40886)
      000038aa: JUMP                           // SRCID115: (40743-40886)
      000038ab: JUMPDEST                       // SRCID115: (40892-41243)
      000038ac: PUSH0                          // SRCID115: (40962-40968)
      000038ad: PUSH1 0x20                     // SRCID115: (41011-41013)
      000038af: DUP3                           // SRCID115: (40999-41008)
      000038b0: DUP5                           // SRCID115: (40990-40997)
      000038b1: SUB                            // SRCID115: (40986-41009)
      000038b2: SLT                            // SRCID115: (40982-41014)
      000038b3: ISZERO                         // SRCID115: (40979-41098)
      000038b4: PUSH2 0x38c0                   // SRCID115: (40979-41098)
      000038b7: JUMPI                          // SRCID115: (40979-41098)
      000038b8: PUSH2 0x38bf                   // SRCID115: (41017-41096)
      000038bb: PUSH2 0x2eff                   // SRCID115: (41017-41096)
      000038be: JUMP                           // SRCID115: (41017-41096)
      000038bf: JUMPDEST                       // SRCID115: (41017-41096)
      000038c0: JUMPDEST                       // SRCID115: (40979-41098)
      000038c1: PUSH0                          // SRCID115: (41137-41138)
      000038c2: PUSH2 0x38cd                   // SRCID115: (41162-41226)
      000038c5: DUP5                           // SRCID115: (41218-41225)
      000038c6: DUP3                           // SRCID115: (41209-41215)
      000038c7: DUP6                           // SRCID115: (41198-41207)
      000038c8: ADD                            // SRCID115: (41194-41216)
      000038c9: PUSH2 0x3897                   // SRCID115: (41162-41226)
      000038cc: JUMP                           // SRCID115: (41162-41226)
      000038cd: JUMPDEST                       // SRCID115: (41162-41226)
      000038ce: SWAP2                          // SRCID115: (41152-41226)
      000038cf: POP                            // SRCID115: (41152-41226)
      000038d0: POP                            // SRCID115: (41108-41236)
      000038d1: SWAP3                          // SRCID115: (40892-41243)
      000038d2: SWAP2                          // SRCID115: (40892-41243)
      000038d3: POP                            // SRCID115: (40892-41243)
      000038d4: POP                            // SRCID115: (40892-41243)
      000038d5: JUMP                           // SRCID115: (40892-41243)
[001] 000038d6: JUMPDEST                       // SRCID115: (41249-41613)
[001] 000038d7: PUSH0                          // SRCID115: (41386-41390)
[001] 000038d8: PUSH1 0x40                     // SRCID115: (41424-41426)
[001] 000038da: DUP3                           // SRCID115: (41413-41422)
[001] 000038db: ADD                            // SRCID115: (41409-41427)
[001] 000038dc: SWAP1                          // SRCID115: (41401-41427)
[001] 000038dd: POP                            // SRCID115: (41401-41427)
[001] 000038de: PUSH2 0x38e9                   // SRCID115: (41437-41524)
[001] 000038e1: PUSH0                          // SRCID115: (41521-41522)
[001] 000038e2: DUP4                           // SRCID115: (41510-41519)
[001] 000038e3: ADD                            // SRCID115: (41506-41523)
[001] 000038e4: DUP6                           // SRCID115: (41497-41503)
[001] 000038e5: PUSH2 0x30b2                   // SRCID115: (41437-41524)
[001] 000038e8: JUMP                           // SRCID115: (41437-41524)
[001] 000038e9: JUMPDEST                       // SRCID115: (41437-41524)
[001] 000038ea: PUSH2 0x38f6                   // SRCID115: (41534-41606)
[001] 000038ed: PUSH1 0x20                     // SRCID115: (41602-41604)
[001] 000038ef: DUP4                           // SRCID115: (41591-41600)
[001] 000038f0: ADD                            // SRCID115: (41587-41605)
[001] 000038f1: DUP5                           // SRCID115: (41578-41584)
[001] 000038f2: PUSH2 0x308a                   // SRCID115: (41534-41606)
[001] 000038f5: JUMP                           // SRCID115: (41534-41606)
[001] 000038f6: JUMPDEST                       // SRCID115: (41534-41606)
[001] 000038f7: SWAP4                          // SRCID115: (41249-41613)
[001] 000038f8: SWAP3                          // SRCID115: (41249-41613)
[001] 000038f9: POP                            // SRCID115: (41249-41613)
[001] 000038fa: POP                            // SRCID115: (41249-41613)
[001] 000038fb: POP                            // SRCID115: (41249-41613)
[001] 000038fc: JUMP                           // SRCID115: (41249-41613)
[001] 000038fd: JUMPDEST                       // SRCID115: (41619-41908)
[001] 000038fe: PUSH32 0x5061796d61737465722062616c616e63652073686f756c64206265207a65726f // SRCID115: (41759-41793)
[001] 0000391f: PUSH0                          // SRCID115: (41755-41756)
[001] 00003920: DUP3                           // SRCID115: (41747-41753)
[001] 00003921: ADD                            // SRCID115: (41743-41757)
[001] 00003922: MSTORE                         // SRCID115: (41736-41794)
[001] 00003923: PUSH32 0x206166746572207769746864726177616c2066726f6d20456e747279506f696e // SRCID115: (41828-41862)
[001] 00003944: PUSH1 0x20                     // SRCID115: (41823-41825)
[001] 00003946: DUP3                           // SRCID115: (41815-41821)
[001] 00003947: ADD                            // SRCID115: (41811-41826)
[001] 00003948: MSTORE                         // SRCID115: (41804-41863)
[001] 00003949: PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 // SRCID115: (41897-41900)
[001] 0000396a: PUSH1 0x40                     // SRCID115: (41892-41894)
[001] 0000396c: DUP3                           // SRCID115: (41884-41890)
[001] 0000396d: ADD                            // SRCID115: (41880-41895)
[001] 0000396e: MSTORE                         // SRCID115: (41873-41901)
[001] 0000396f: POP                            // SRCID115: (41619-41908)
[001] 00003970: JUMP                           // SRCID115: (41619-41908)
[001] 00003971: JUMPDEST                       // SRCID115: (41914-42280)
[001] 00003972: PUSH0                          // SRCID115: (42056-42059)
[001] 00003973: PUSH2 0x397d                   // SRCID115: (42077-42144)
[001] 00003976: PUSH1 0x41                     // SRCID115: (42141-42143)
[001] 00003978: DUP4                           // SRCID115: (42136-42139)
[001] 00003979: PUSH2 0x3306                   // SRCID115: (42077-42144)
[001] 0000397c: JUMP                           // SRCID115: (42077-42144)
[001] 0000397d: JUMPDEST                       // SRCID115: (42077-42144)
[001] 0000397e: SWAP2                          // SRCID115: (42070-42144)
[001] 0000397f: POP                            // SRCID115: (42070-42144)
[001] 00003980: PUSH2 0x3988                   // SRCID115: (42153-42246)
[001] 00003983: DUP3                           // SRCID115: (42242-42245)
[001] 00003984: PUSH2 0x38fd                   // SRCID115: (42153-42246)
[001] 00003987: JUMP                           // SRCID115: (42153-42246)
[001] 00003988: JUMPDEST                       // SRCID115: (42153-42246)
[001] 00003989: PUSH1 0x60                     // SRCID115: (42271-42273)
[001] 0000398b: DUP3                           // SRCID115: (42266-42269)
[001] 0000398c: ADD                            // SRCID115: (42262-42274)
[001] 0000398d: SWAP1                          // SRCID115: (42255-42274)
[001] 0000398e: POP                            // SRCID115: (42255-42274)
[001] 0000398f: SWAP2                          // SRCID115: (41914-42280)
[001] 00003990: SWAP1                          // SRCID115: (41914-42280)
[001] 00003991: POP                            // SRCID115: (41914-42280)
[001] 00003992: JUMP                           // SRCID115: (41914-42280)
[001] 00003993: JUMPDEST                       // SRCID115: (42286-42941)
[001] 00003994: PUSH0                          // SRCID115: (42516-42520)
[001] 00003995: PUSH1 0x60                     // SRCID115: (42554-42556)
[001] 00003997: DUP3                           // SRCID115: (42543-42552)
[001] 00003998: ADD                            // SRCID115: (42539-42557)
[001] 00003999: SWAP1                          // SRCID115: (42531-42557)
[001] 0000399a: POP                            // SRCID115: (42531-42557)
[001] 0000399b: PUSH2 0x39a6                   // SRCID115: (42567-42638)
[001] 0000399e: PUSH0                          // SRCID115: (42635-42636)
[001] 0000399f: DUP4                           // SRCID115: (42624-42633)
[001] 000039a0: ADD                            // SRCID115: (42620-42637)
[001] 000039a1: DUP6                           // SRCID115: (42611-42617)
[001] 000039a2: PUSH2 0x308a                   // SRCID115: (42567-42638)
[001] 000039a5: JUMP                           // SRCID115: (42567-42638)
[001] 000039a6: JUMPDEST                       // SRCID115: (42567-42638)
[001] 000039a7: PUSH2 0x39b3                   // SRCID115: (42648-42728)
[001] 000039aa: PUSH1 0x20                     // SRCID115: (42724-42726)
[001] 000039ac: DUP4                           // SRCID115: (42713-42722)
[001] 000039ad: ADD                            // SRCID115: (42709-42727)
[001] 000039ae: DUP5                           // SRCID115: (42700-42706)
[001] 000039af: PUSH2 0x2ec0                   // SRCID115: (42648-42728)
[001] 000039b2: JUMP                           // SRCID115: (42648-42728)
[001] 000039b3: JUMPDEST                       // SRCID115: (42648-42728)
[001] 000039b4: DUP2                           // SRCID115: (42775-42784)
[001] 000039b5: DUP2                           // SRCID115: (42769-42773)
[001] 000039b6: SUB                            // SRCID115: (42765-42785)
[001] 000039b7: PUSH1 0x40                     // SRCID115: (42760-42762)
[001] 000039b9: DUP4                           // SRCID115: (42749-42758)
[001] 000039ba: ADD                            // SRCID115: (42745-42763)
[001] 000039bb: MSTORE                         // SRCID115: (42738-42786)
[001] 000039bc: PUSH2 0x39c4                   // SRCID115: (42803-42934)
[001] 000039bf: DUP2                           // SRCID115: (42929-42933)
[001] 000039c0: PUSH2 0x3971                   // SRCID115: (42803-42934)
[001] 000039c3: JUMP                           // SRCID115: (42803-42934)
[001] 000039c4: JUMPDEST                       // SRCID115: (42803-42934)
[001] 000039c5: SWAP1                          // SRCID115: (42795-42934)
[001] 000039c6: POP                            // SRCID115: (42795-42934)
[001] 000039c7: SWAP4                          // SRCID115: (42286-42941)
[001] 000039c8: SWAP3                          // SRCID115: (42286-42941)
[001] 000039c9: POP                            // SRCID115: (42286-42941)
[001] 000039ca: POP                            // SRCID115: (42286-42941)
[001] 000039cb: POP                            // SRCID115: (42286-42941)
[001] 000039cc: JUMP                           // SRCID115: (42286-42941)
[001] 000039cd: JUMPDEST                       // SRCID115: (42947-43236)
[001] 000039ce: PUSH32 0x557365722062616c616e63652073686f756c6420657175616c20696e69746961 // SRCID115: (43087-43121)
[001] 000039ef: PUSH0                          // SRCID115: (43083-43084)
[001] 000039f0: DUP3                           // SRCID115: (43075-43081)
[001] 000039f1: ADD                            // SRCID115: (43071-43085)
[001] 000039f2: MSTORE                         // SRCID115: (43064-43122)
[001] 000039f3: PUSH32 0x6c206465706f73697420616d6f756e7420616674657220776974686472617761 // SRCID115: (43156-43190)
[001] 00003a14: PUSH1 0x20                     // SRCID115: (43151-43153)
[001] 00003a16: DUP3                           // SRCID115: (43143-43149)
[001] 00003a17: ADD                            // SRCID115: (43139-43154)
[001] 00003a18: MSTORE                         // SRCID115: (43132-43191)
[001] 00003a19: PUSH32 0x6c00000000000000000000000000000000000000000000000000000000000000 // SRCID115: (43225-43228)
[001] 00003a3a: PUSH1 0x40                     // SRCID115: (43220-43222)
[001] 00003a3c: DUP3                           // SRCID115: (43212-43218)
[001] 00003a3d: ADD                            // SRCID115: (43208-43223)
[001] 00003a3e: MSTORE                         // SRCID115: (43201-43229)
[001] 00003a3f: POP                            // SRCID115: (42947-43236)
[001] 00003a40: JUMP                           // SRCID115: (42947-43236)
[001] 00003a41: JUMPDEST                       // SRCID115: (43242-43608)
[001] 00003a42: PUSH0                          // SRCID115: (43384-43387)
[001] 00003a43: PUSH2 0x3a4d                   // SRCID115: (43405-43472)
[001] 00003a46: PUSH1 0x41                     // SRCID115: (43469-43471)
[001] 00003a48: DUP4                           // SRCID115: (43464-43467)
[001] 00003a49: PUSH2 0x3306                   // SRCID115: (43405-43472)
[001] 00003a4c: JUMP                           // SRCID115: (43405-43472)
[001] 00003a4d: JUMPDEST                       // SRCID115: (43405-43472)
[001] 00003a4e: SWAP2                          // SRCID115: (43398-43472)
[001] 00003a4f: POP                            // SRCID115: (43398-43472)
[001] 00003a50: PUSH2 0x3a58                   // SRCID115: (43481-43574)
[001] 00003a53: DUP3                           // SRCID115: (43570-43573)
[001] 00003a54: PUSH2 0x39cd                   // SRCID115: (43481-43574)
[001] 00003a57: JUMP                           // SRCID115: (43481-43574)
[001] 00003a58: JUMPDEST                       // SRCID115: (43481-43574)
[001] 00003a59: PUSH1 0x60                     // SRCID115: (43599-43601)
[001] 00003a5b: DUP3                           // SRCID115: (43594-43597)
[001] 00003a5c: ADD                            // SRCID115: (43590-43602)
[001] 00003a5d: SWAP1                          // SRCID115: (43583-43602)
[001] 00003a5e: POP                            // SRCID115: (43583-43602)
[001] 00003a5f: SWAP2                          // SRCID115: (43242-43608)
[001] 00003a60: SWAP1                          // SRCID115: (43242-43608)
[001] 00003a61: POP                            // SRCID115: (43242-43608)
[001] 00003a62: JUMP                           // SRCID115: (43242-43608)
[001] 00003a63: JUMPDEST                       // SRCID115: (43614-44253)
[001] 00003a64: PUSH0                          // SRCID115: (43836-43840)
[001] 00003a65: PUSH1 0x60                     // SRCID115: (43874-43876)
[001] 00003a67: DUP3                           // SRCID115: (43863-43872)
[001] 00003a68: ADD                            // SRCID115: (43859-43877)
[001] 00003a69: SWAP1                          // SRCID115: (43851-43877)
[001] 00003a6a: POP                            // SRCID115: (43851-43877)
[001] 00003a6b: PUSH2 0x3a76                   // SRCID115: (43887-43958)
[001] 00003a6e: PUSH0                          // SRCID115: (43955-43956)
[001] 00003a6f: DUP4                           // SRCID115: (43944-43953)
[001] 00003a70: ADD                            // SRCID115: (43940-43957)
[001] 00003a71: DUP6                           // SRCID115: (43931-43937)
[001] 00003a72: PUSH2 0x308a                   // SRCID115: (43887-43958)
[001] 00003a75: JUMP                           // SRCID115: (43887-43958)
[001] 00003a76: JUMPDEST                       // SRCID115: (43887-43958)
[001] 00003a77: PUSH2 0x3a83                   // SRCID115: (43968-44040)
[001] 00003a7a: PUSH1 0x20                     // SRCID115: (44036-44038)
[001] 00003a7c: DUP4                           // SRCID115: (44025-44034)
[001] 00003a7d: ADD                            // SRCID115: (44021-44039)
[001] 00003a7e: DUP5                           // SRCID115: (44012-44018)
[001] 00003a7f: PUSH2 0x308a                   // SRCID115: (43968-44040)
[001] 00003a82: JUMP                           // SRCID115: (43968-44040)
[001] 00003a83: JUMPDEST                       // SRCID115: (43968-44040)
[001] 00003a84: DUP2                           // SRCID115: (44087-44096)
[001] 00003a85: DUP2                           // SRCID115: (44081-44085)
[001] 00003a86: SUB                            // SRCID115: (44077-44097)
[001] 00003a87: PUSH1 0x40                     // SRCID115: (44072-44074)
[001] 00003a89: DUP4                           // SRCID115: (44061-44070)
[001] 00003a8a: ADD                            // SRCID115: (44057-44075)
[001] 00003a8b: MSTORE                         // SRCID115: (44050-44098)
[001] 00003a8c: PUSH2 0x3a94                   // SRCID115: (44115-44246)
[001] 00003a8f: DUP2                           // SRCID115: (44241-44245)
[001] 00003a90: PUSH2 0x3a41                   // SRCID115: (44115-44246)
[001] 00003a93: JUMP                           // SRCID115: (44115-44246)
[001] 00003a94: JUMPDEST                       // SRCID115: (44115-44246)
[001] 00003a95: SWAP1                          // SRCID115: (44107-44246)
[001] 00003a96: POP                            // SRCID115: (44107-44246)
[001] 00003a97: SWAP4                          // SRCID115: (43614-44253)
[001] 00003a98: SWAP3                          // SRCID115: (43614-44253)
[001] 00003a99: POP                            // SRCID115: (43614-44253)
[001] 00003a9a: POP                            // SRCID115: (43614-44253)
[001] 00003a9b: POP                            // SRCID115: (43614-44253)
[001] 00003a9c: JUMP                           // SRCID115: (43614-44253)
[018] 00003a9d: JUMPDEST                       // SRCID115: (44259-44407)
[018] 00003a9e: PUSH0                          // SRCID115: (44361-44372)
[018] 00003a9f: DUP2                           // SRCID115: (44398-44401)
[018] 00003aa0: SWAP1                          // SRCID115: (44383-44401)
[018] 00003aa1: POP                            // SRCID115: (44383-44401)
[018] 00003aa2: SWAP3                          // SRCID115: (44259-44407)
[018] 00003aa3: SWAP2                          // SRCID115: (44259-44407)
[018] 00003aa4: POP                            // SRCID115: (44259-44407)
[018] 00003aa5: POP                            // SRCID115: (44259-44407)
[018] 00003aa6: JUMP                           // SRCID115: (44259-44407)
[018] 00003aa7: JUMPDEST                       // SRCID115: (44413-44803)
[018] 00003aa8: PUSH0                          // SRCID115: (44519-44522)
[018] 00003aa9: PUSH2 0x3ab1                   // SRCID115: (44547-44586)
[018] 00003aac: DUP3                           // SRCID115: (44580-44585)
[018] 00003aad: PUSH2 0x280c                   // SRCID115: (44547-44586)
[018] 00003ab0: JUMP                           // SRCID115: (44547-44586)
[018] 00003ab1: JUMPDEST                       // SRCID115: (44547-44586)
[018] 00003ab2: PUSH2 0x3abb                   // SRCID115: (44602-44691)
[018] 00003ab5: DUP2                           // SRCID115: (44684-44690)
[018] 00003ab6: DUP6                           // SRCID115: (44679-44682)
[018] 00003ab7: PUSH2 0x3a9d                   // SRCID115: (44602-44691)
[018] 00003aba: JUMP                           // SRCID115: (44602-44691)
[018] 00003abb: JUMPDEST                       // SRCID115: (44602-44691)
[018] 00003abc: SWAP4                          // SRCID115: (44595-44691)
[018] 00003abd: POP                            // SRCID115: (44595-44691)
[018] 00003abe: PUSH2 0x3acb                   // SRCID115: (44700-44765)
[018] 00003ac1: DUP2                           // SRCID115: (44758-44764)
[018] 00003ac2: DUP6                           // SRCID115: (44753-44756)
[018] 00003ac3: PUSH1 0x20                     // SRCID115: (44746-44750)
[018] 00003ac5: DUP7                           // SRCID115: (44739-44744)
[018] 00003ac6: ADD                            // SRCID115: (44735-44751)
[018] 00003ac7: PUSH2 0x2826                   // SRCID115: (44700-44765)
[018] 00003aca: JUMP                           // SRCID115: (44700-44765)
[018] 00003acb: JUMPDEST                       // SRCID115: (44700-44765)
[018] 00003acc: DUP1                           // SRCID115: (44790-44796)
[018] 00003acd: DUP5                           // SRCID115: (44785-44788)
[018] 00003ace: ADD                            // SRCID115: (44781-44797)
[018] 00003acf: SWAP2                          // SRCID115: (44774-44797)
[018] 00003ad0: POP                            // SRCID115: (44774-44797)
[018] 00003ad1: POP                            // SRCID115: (44523-44803)
[018] 00003ad2: SWAP3                          // SRCID115: (44413-44803)
[018] 00003ad3: SWAP2                          // SRCID115: (44413-44803)
[018] 00003ad4: POP                            // SRCID115: (44413-44803)
[018] 00003ad5: POP                            // SRCID115: (44413-44803)
[018] 00003ad6: JUMP                           // SRCID115: (44413-44803)
[018] 00003ad7: JUMPDEST                       // SRCID115: (44809-45084)
[018] 00003ad8: PUSH0                          // SRCID115: (44941-44944)
[018] 00003ad9: PUSH2 0x3ae2                   // SRCID115: (44963-45058)
[018] 00003adc: DUP3                           // SRCID115: (45054-45057)
[018] 00003add: DUP5                           // SRCID115: (45045-45051)
[018] 00003ade: PUSH2 0x3aa7                   // SRCID115: (44963-45058)
[018] 00003ae1: JUMP                           // SRCID115: (44963-45058)
[018] 00003ae2: JUMPDEST                       // SRCID115: (44963-45058)
[018] 00003ae3: SWAP2                          // SRCID115: (44956-45058)
[018] 00003ae4: POP                            // SRCID115: (44956-45058)
[018] 00003ae5: DUP2                           // SRCID115: (45075-45078)
[018] 00003ae6: SWAP1                          // SRCID115: (45068-45078)
[018] 00003ae7: POP                            // SRCID115: (45068-45078)
[018] 00003ae8: SWAP3                          // SRCID115: (44809-45084)
[018] 00003ae9: SWAP2                          // SRCID115: (44809-45084)
[018] 00003aea: POP                            // SRCID115: (44809-45084)
[018] 00003aeb: POP                            // SRCID115: (44809-45084)
[018] 00003aec: JUMP                           // SRCID115: (44809-45084)
[018] 00003aed: JUMPDEST                       // SRCID115: (45090-45467)
[018] 00003aee: PUSH0                          // SRCID115: (45178-45181)
[018] 00003aef: PUSH2 0x3af7                   // SRCID115: (45206-45245)
[018] 00003af2: DUP3                           // SRCID115: (45239-45244)
[018] 00003af3: PUSH2 0x280c                   // SRCID115: (45206-45245)
[018] 00003af6: JUMP                           // SRCID115: (45206-45245)
[018] 00003af7: JUMPDEST                       // SRCID115: (45206-45245)
[018] 00003af8: PUSH2 0x3b01                   // SRCID115: (45261-45332)
[018] 00003afb: DUP2                           // SRCID115: (45325-45331)
[018] 00003afc: DUP6                           // SRCID115: (45320-45323)
[018] 00003afd: PUSH2 0x3306                   // SRCID115: (45261-45332)
[018] 00003b00: JUMP                           // SRCID115: (45261-45332)
[018] 00003b01: JUMPDEST                       // SRCID115: (45261-45332)
[018] 00003b02: SWAP4                          // SRCID115: (45254-45332)
[018] 00003b03: POP                            // SRCID115: (45254-45332)
[018] 00003b04: PUSH2 0x3b11                   // SRCID115: (45341-45406)
[018] 00003b07: DUP2                           // SRCID115: (45399-45405)
[018] 00003b08: DUP6                           // SRCID115: (45394-45397)
[018] 00003b09: PUSH1 0x20                     // SRCID115: (45387-45391)
[018] 00003b0b: DUP7                           // SRCID115: (45380-45385)
[018] 00003b0c: ADD                            // SRCID115: (45376-45392)
[018] 00003b0d: PUSH2 0x2826                   // SRCID115: (45341-45406)
[018] 00003b10: JUMP                           // SRCID115: (45341-45406)
[018] 00003b11: JUMPDEST                       // SRCID115: (45341-45406)
[018] 00003b12: PUSH2 0x3b1a                   // SRCID115: (45431-45460)
[018] 00003b15: DUP2                           // SRCID115: (45453-45459)
[018] 00003b16: PUSH2 0x2834                   // SRCID115: (45431-45460)
[018] 00003b19: JUMP                           // SRCID115: (45431-45460)
[018] 00003b1a: JUMPDEST                       // SRCID115: (45431-45460)
[018] 00003b1b: DUP5                           // SRCID115: (45426-45429)
[018] 00003b1c: ADD                            // SRCID115: (45422-45461)
[018] 00003b1d: SWAP2                          // SRCID115: (45415-45461)
[018] 00003b1e: POP                            // SRCID115: (45415-45461)
[018] 00003b1f: POP                            // SRCID115: (45182-45467)
[018] 00003b20: SWAP3                          // SRCID115: (45090-45467)
[018] 00003b21: SWAP2                          // SRCID115: (45090-45467)
[018] 00003b22: POP                            // SRCID115: (45090-45467)
[018] 00003b23: POP                            // SRCID115: (45090-45467)
[018] 00003b24: JUMP                           // SRCID115: (45090-45467)
[018] 00003b25: JUMPDEST                       // SRCID115: (45473-45896)
[018] 00003b26: PUSH0                          // SRCID115: (45614-45618)
[018] 00003b27: PUSH1 0x40                     // SRCID115: (45652-45654)
[018] 00003b29: DUP3                           // SRCID115: (45641-45650)
[018] 00003b2a: ADD                            // SRCID115: (45637-45655)
[018] 00003b2b: SWAP1                          // SRCID115: (45629-45655)
[018] 00003b2c: POP                            // SRCID115: (45629-45655)
[018] 00003b2d: PUSH2 0x3b38                   // SRCID115: (45665-45736)
[018] 00003b30: PUSH0                          // SRCID115: (45733-45734)
[018] 00003b31: DUP4                           // SRCID115: (45722-45731)
[018] 00003b32: ADD                            // SRCID115: (45718-45735)
[018] 00003b33: DUP6                           // SRCID115: (45709-45715)
[018] 00003b34: PUSH2 0x2de3                   // SRCID115: (45665-45736)
[018] 00003b37: JUMP                           // SRCID115: (45665-45736)
[018] 00003b38: JUMPDEST                       // SRCID115: (45665-45736)
[018] 00003b39: DUP2                           // SRCID115: (45783-45792)
[018] 00003b3a: DUP2                           // SRCID115: (45777-45781)
[018] 00003b3b: SUB                            // SRCID115: (45773-45793)
[018] 00003b3c: PUSH1 0x20                     // SRCID115: (45768-45770)
[018] 00003b3e: DUP4                           // SRCID115: (45757-45766)
[018] 00003b3f: ADD                            // SRCID115: (45753-45771)
[018] 00003b40: MSTORE                         // SRCID115: (45746-45794)
[018] 00003b41: PUSH2 0x3b4a                   // SRCID115: (45811-45889)
[018] 00003b44: DUP2                           // SRCID115: (45884-45888)
[018] 00003b45: DUP5                           // SRCID115: (45875-45881)
[018] 00003b46: PUSH2 0x3aed                   // SRCID115: (45811-45889)
[018] 00003b49: JUMP                           // SRCID115: (45811-45889)
[018] 00003b4a: JUMPDEST                       // SRCID115: (45811-45889)
[018] 00003b4b: SWAP1                          // SRCID115: (45803-45889)
[018] 00003b4c: POP                            // SRCID115: (45803-45889)
[018] 00003b4d: SWAP4                          // SRCID115: (45473-45896)
[018] 00003b4e: SWAP3                          // SRCID115: (45473-45896)
[018] 00003b4f: POP                            // SRCID115: (45473-45896)
[018] 00003b50: POP                            // SRCID115: (45473-45896)
[018] 00003b51: POP                            // SRCID115: (45473-45896)
[018] 00003b52: JUMP                           // SRCID115: (45473-45896)
