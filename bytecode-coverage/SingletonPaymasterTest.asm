[008] 00000000: PUSH1 0x80                     // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000002: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000004: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000005: CALLVALUE                      // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000006: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000007: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000008: PUSH2 0xf                      // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 0000000b: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000000c: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000000d: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000000e: REVERT                         // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 0000000f: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000010: POP                            // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000011: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000013: CALLDATASIZE                   // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000014: LT                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000015: PUSH2 0x109                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000018: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000019: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 0000001a: CALLDATALOAD                   // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 0000001b: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 0000001d: SHR                            // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 0000001e: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 0000001f: PUSH4 0x85226c81               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000024: GT                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000025: PUSH2 0xa0                     // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[008] 00000028: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[002] 00000029: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[002] 0000002a: PUSH4 0xb5508aa9               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[002] 0000002f: GT                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[002] 00000030: PUSH2 0x6f                     // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[002] 00000033: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000034: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000035: PUSH4 0xb5508aa9               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000003a: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000003b: PUSH2 0x225                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000003e: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000003f: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000040: PUSH4 0xba414fa6               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000045: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000046: PUSH2 0x243                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000049: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000004a: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000004b: PUSH4 0xd2908bff               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000050: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000051: PUSH2 0x261                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000054: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000055: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000056: PUSH4 0xe20c9f71               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000005b: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000005c: PUSH2 0x26b                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000005f: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000060: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000061: PUSH4 0xfa7626d4               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000066: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000067: PUSH2 0x289                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000006a: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000006b: PUSH2 0x109                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000006e: JUMP                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000006f: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000070: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000071: PUSH4 0x85226c81               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000076: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000077: PUSH2 0x1c1                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000007a: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000007b: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000007c: PUSH4 0x916a17c6               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000081: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000082: PUSH2 0x1df                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000085: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000086: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000087: PUSH4 0xadb59428               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000008c: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 0000008d: PUSH2 0x1fd                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000090: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000091: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000092: PUSH4 0xb0464fdc               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000097: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000098: PUSH2 0x207                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000009b: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000009c: PUSH2 0x109                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000009f: JUMP                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[006] 000000a0: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[006] 000000a1: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[006] 000000a2: PUSH4 0x3e5e3c23               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[006] 000000a7: GT                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[006] 000000a8: PUSH2 0xdc                     // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[006] 000000ab: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000ac: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000ad: PUSH4 0x3e5e3c23               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000b2: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000b3: PUSH2 0x15d                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000b6: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000b7: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000b8: PUSH4 0x3f7286f4               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000bd: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000be: PUSH2 0x17b                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000c1: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000c2: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000c3: PUSH4 0x66d9a9a0               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000c8: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000c9: PUSH2 0x199                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000cc: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000cd: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000ce: PUSH4 0x8191c2ac               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000d3: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000d4: PUSH2 0x1b7                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000d7: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      000000d8: PUSH2 0x109                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      000000db: JUMP                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[005] 000000dc: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[005] 000000dd: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[005] 000000de: PUSH4 0xa9254e4                // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[005] 000000e3: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[005] 000000e4: PUSH2 0x10d                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[005] 000000e7: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000e8: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000e9: PUSH4 0x1ed7831c               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000ee: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000ef: PUSH2 0x117                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000f2: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000f3: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000f4: PUSH4 0x2ade3880               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000f9: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000fa: PUSH2 0x135                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000fd: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000fe: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 000000ff: PUSH4 0x354b2735               // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000104: EQ                             // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000105: PUSH2 0x153                    // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[001] 00000108: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      00000109: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000010a: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000010b: DUP1                           // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
      0000010c: REVERT                         // test/BaseSingletonPaymaster.t.sol: 15:1-74:2 (697-2680)
[004] 0000010d: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 30:5-43:6 (1054-1633)
[004] 0000010e: PUSH2 0x115                    // test/BaseSingletonPaymaster.t.sol: 30:5-43:6 (1054-1633)
[004] 00000111: PUSH2 0x2a7                    // test/BaseSingletonPaymaster.t.sol: 30:5-43:6 (1054-1633)
[004] 00000114: JUMP                           // test/BaseSingletonPaymaster.t.sol: 30:5-43:6 (1054-1633)
[004] 00000115: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 30:5-43:6 (1054-1633)
[004] 00000116: STOP                           // test/BaseSingletonPaymaster.t.sol: 30:5-43:6 (1054-1633)
      00000117: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000118: PUSH2 0x11f                    // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000011b: PUSH2 0x83e                    // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000011e: JUMP                           // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000011f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000120: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000122: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000123: PUSH2 0x12c                    // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000126: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000127: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000128: PUSH2 0x231d                   // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000012b: JUMP                           // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000012c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000012d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000012f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000130: DUP1                           // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000131: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000132: SUB                            // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000133: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000134: RETURN                         // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      00000135: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000136: PUSH2 0x13d                    // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000139: PUSH2 0x8c9                    // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000013c: JUMP                           // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000013d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000013e: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000140: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000141: PUSH2 0x14a                    // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000144: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000145: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000146: PUSH2 0x255d                   // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000149: JUMP                           // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000014a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000014b: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000014d: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000014e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      0000014f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000150: SUB                            // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000151: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000152: RETURN                         // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
[001] 00000153: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 45:5-49:6 (1639-1881)
[001] 00000154: PUSH2 0x15b                    // test/BaseSingletonPaymaster.t.sol: 45:5-49:6 (1639-1881)
[001] 00000157: PUSH2 0xa4d                    // test/BaseSingletonPaymaster.t.sol: 45:5-49:6 (1639-1881)
[001] 0000015a: JUMP                           // test/BaseSingletonPaymaster.t.sol: 45:5-49:6 (1639-1881)
[001] 0000015b: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 45:5-49:6 (1639-1881)
[001] 0000015c: STOP                           // test/BaseSingletonPaymaster.t.sol: 45:5-49:6 (1639-1881)
      0000015d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000015e: PUSH2 0x165                    // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000161: PUSH2 0xc77                    // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000164: JUMP                           // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000165: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000166: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000168: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000169: PUSH2 0x172                    // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000016c: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000016d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000016e: PUSH2 0x231d                   // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000171: JUMP                           // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000172: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000173: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000175: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000176: DUP1                           // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000177: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000178: SUB                            // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000179: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000017a: RETURN                         // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      0000017b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      0000017c: PUSH2 0x183                    // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      0000017f: PUSH2 0xd02                    // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000182: JUMP                           // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000183: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000184: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000186: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000187: PUSH2 0x190                    // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      0000018a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      0000018b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      0000018c: PUSH2 0x231d                   // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      0000018f: JUMP                           // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000190: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000191: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000193: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000194: DUP1                           // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000195: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000196: SUB                            // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000197: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000198: RETURN                         // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000199: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      0000019a: PUSH2 0x1a1                    // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      0000019d: PUSH2 0xd8d                    // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001a0: JUMP                           // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001a1: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001a2: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001a4: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001a5: PUSH2 0x1ae                    // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001a8: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001a9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001aa: PUSH2 0x275b                   // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001ad: JUMP                           // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001ae: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001af: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001b1: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001b2: DUP1                           // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001b3: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001b4: SUB                            // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001b5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      000001b6: RETURN                         // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
[001] 000001b7: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 59:5-65:6 (2155-2406)
[001] 000001b8: PUSH2 0x1bf                    // test/BaseSingletonPaymaster.t.sol: 59:5-65:6 (2155-2406)
[001] 000001bb: PUSH2 0xf0f                    // test/BaseSingletonPaymaster.t.sol: 59:5-65:6 (2155-2406)
[001] 000001be: JUMP                           // test/BaseSingletonPaymaster.t.sol: 59:5-65:6 (2155-2406)
[001] 000001bf: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 59:5-65:6 (2155-2406)
[001] 000001c0: STOP                           // test/BaseSingletonPaymaster.t.sol: 59:5-65:6 (2155-2406)
      000001c1: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001c2: PUSH2 0x1c9                    // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001c5: PUSH2 0x1266                   // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001c8: JUMP                           // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001c9: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001ca: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001cc: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001cd: PUSH2 0x1d6                    // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001d0: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001d1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001d2: PUSH2 0x27fe                   // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001d5: JUMP                           // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001d6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001d7: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001d9: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001da: DUP1                           // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001db: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001dc: SUB                            // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001dd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001de: RETURN                         // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      000001df: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001e0: PUSH2 0x1e7                    // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001e3: PUSH2 0x133a                   // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001e6: JUMP                           // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001e7: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001e8: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001ea: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001eb: PUSH2 0x1f4                    // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001ee: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001ef: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001f0: PUSH2 0x2913                   // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001f3: JUMP                           // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001f4: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001f5: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001f7: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001f8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001f9: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001fa: SUB                            // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001fb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      000001fc: RETURN                         // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
[001] 000001fd: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 67:5-73:6 (2412-2678)
[001] 000001fe: PUSH2 0x205                    // test/BaseSingletonPaymaster.t.sol: 67:5-73:6 (2412-2678)
[001] 00000201: PUSH2 0x1481                   // test/BaseSingletonPaymaster.t.sol: 67:5-73:6 (2412-2678)
[001] 00000204: JUMP                           // test/BaseSingletonPaymaster.t.sol: 67:5-73:6 (2412-2678)
[001] 00000205: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 67:5-73:6 (2412-2678)
[001] 00000206: STOP                           // test/BaseSingletonPaymaster.t.sol: 67:5-73:6 (2412-2678)
      00000207: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000208: PUSH2 0x20f                    // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000020b: PUSH2 0x17d5                   // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000020e: JUMP                           // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000020f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000210: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000212: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000213: PUSH2 0x21c                    // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000216: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000217: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000218: PUSH2 0x2913                   // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000021b: JUMP                           // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000021c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000021d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000021f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000220: DUP1                           // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000221: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000222: SUB                            // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000223: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000224: RETURN                         // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      00000225: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000226: PUSH2 0x22d                    // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000229: PUSH2 0x191c                   // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000022c: JUMP                           // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000022d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000022e: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000230: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000231: PUSH2 0x23a                    // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000234: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000235: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000236: PUSH2 0x27fe                   // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000239: JUMP                           // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000023a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000023b: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000023d: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000023e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000023f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000240: SUB                            // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000241: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000242: RETURN                         // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      00000243: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000244: PUSH2 0x24b                    // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000247: PUSH2 0x19f0                   // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000024a: JUMP                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000024b: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000024c: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000024e: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000024f: PUSH2 0x258                    // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000252: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000253: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000254: PUSH2 0x294d                   // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000257: JUMP                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000258: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000259: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000025b: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000025c: DUP1                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000025d: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000025e: SUB                            // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      0000025f: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00000260: RETURN                         // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
[001] 00000261: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 51:5-57:6 (1887-2149)
[001] 00000262: PUSH2 0x269                    // test/BaseSingletonPaymaster.t.sol: 51:5-57:6 (1887-2149)
[001] 00000265: PUSH2 0x1b04                   // test/BaseSingletonPaymaster.t.sol: 51:5-57:6 (1887-2149)
[001] 00000268: JUMP                           // test/BaseSingletonPaymaster.t.sol: 51:5-57:6 (1887-2149)
[001] 00000269: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 51:5-57:6 (1887-2149)
[001] 0000026a: STOP                           // test/BaseSingletonPaymaster.t.sol: 51:5-57:6 (1887-2149)
      0000026b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000026c: PUSH2 0x273                    // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000026f: PUSH2 0x1e46                   // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000272: JUMP                           // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000273: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000274: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000276: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000277: PUSH2 0x280                    // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000027a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000027b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000027c: PUSH2 0x231d                   // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      0000027f: JUMP                           // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000280: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000281: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000283: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000284: DUP1                           // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000285: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000286: SUB                            // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000287: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000288: RETURN                         // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00000289: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000028a: PUSH2 0x291                    // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000028d: PUSH2 0x1ed1                   // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000290: JUMP                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000291: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000292: PUSH1 0x40                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000294: MLOAD                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000295: PUSH2 0x29e                    // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000298: SWAP2                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000299: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000029a: PUSH2 0x294d                   // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000029d: JUMP                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000029e: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000029f: PUSH1 0x40                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002a1: MLOAD                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002a2: DUP1                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002a3: SWAP2                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002a4: SUB                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002a5: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002a6: RETURN                         // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
[004] 000002a7: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 30:5-43:6 (1054-1633)
[004] 000002a8: PUSH1 0x12                     // test/BaseSingletonPaymaster.t.sol: 31:31-31:33 (1112-1114)
[004] 000002aa: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002ac: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002ad: PUSH2 0x2b5                    // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002b0: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002b1: PUSH2 0x21f0                   // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002b4: JUMP                           // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002b5: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002b6: PUSH2 0x2bf                    // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002b9: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002ba: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002bb: PUSH2 0x29b4                   // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002be: JUMP                           // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002bf: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002c0: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002c2: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002c3: DUP1                           // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002c4: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002c5: SUB                            // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002c6: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002c7: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002c8: CREATE                         // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002c9: DUP1                           // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002ca: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002cb: DUP1                           // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002cc: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002cd: PUSH2 0x2d8                    // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002d0: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
      000002d1: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
      000002d2: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
      000002d3: DUP1                           // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
      000002d4: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
      000002d5: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
      000002d6: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
      000002d7: REVERT                         // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002d8: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002d9: POP                            // test/BaseSingletonPaymaster.t.sol: 31:17-31:34 (1098-1115)
[004] 000002da: PUSH1 0x28                     // test/BaseSingletonPaymaster.t.sol: 31:9-31:14 (1090-1095)
[004] 000002dc: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 31:9-31:14 (1090-1095)
[004] 000002dd: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002e0: EXP                            // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002e1: DUP2                           // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002e2: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002e3: DUP2                           // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002e4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002f9: MUL                            // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002fa: NOT                            // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002fb: AND                            // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002fc: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002fd: DUP4                           // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 000002fe: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 00000313: AND                            // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 00000314: MUL                            // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 00000315: OR                             // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 00000316: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 00000317: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 00000318: POP                            // test/BaseSingletonPaymaster.t.sol: 31:9-31:34 (1090-1115)
[004] 00000319: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000031b: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000031c: PUSH2 0x324                    // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000031f: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000320: PUSH2 0x21fe                   // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000323: JUMP                           // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000324: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000325: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000327: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000328: DUP1                           // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000329: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000032a: SUB                            // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000032b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000032c: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000032d: CREATE                         // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000032e: DUP1                           // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000032f: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000330: DUP1                           // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000331: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000332: PUSH2 0x33d                    // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 00000335: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
      00000336: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
      00000337: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
      00000338: DUP1                           // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
      00000339: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
      0000033a: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
      0000033b: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
      0000033c: REVERT                         // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000033d: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000033e: POP                            // test/BaseSingletonPaymaster.t.sol: 32:19-32:36 (1135-1152)
[004] 0000033f: PUSH1 0x29                     // test/BaseSingletonPaymaster.t.sol: 32:9-32:16 (1125-1132)
[004] 00000341: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 32:9-32:16 (1125-1132)
[004] 00000342: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000345: EXP                            // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000346: DUP2                           // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000347: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000348: DUP2                           // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000349: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 0000035e: MUL                            // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 0000035f: NOT                            // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000360: AND                            // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000361: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000362: DUP4                           // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000363: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000378: AND                            // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 00000379: MUL                            // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 0000037a: OR                             // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 0000037b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 0000037c: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 0000037d: POP                            // test/BaseSingletonPaymaster.t.sol: 32:9-32:36 (1125-1152)
[004] 0000037e: PUSH2 0x3bb                    // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 00000381: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 00000383: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 00000384: DUP1                           // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 00000385: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 00000387: ADD                            // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 00000388: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 0000038a: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 0000038b: DUP1                           // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 0000038c: PUSH1 0xb                      // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 0000038e: DUP2                           // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 0000038f: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 00000390: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 00000392: ADD                            // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 00000393: PUSH32 0x62656e6566696369617279000000000000000000000000000000000000000000 // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 000003b4: DUP2                           // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 000003b5: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 000003b6: POP                            // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 000003b7: PUSH2 0x1ee3                   // test/BaseSingletonPaymaster.t.sol: 34:31-34:39 (1185-1193)
[004] 000003ba: JUMP                           // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 000003bb: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 34:31-34:54 (1185-1208)
[004] 000003bc: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 34:9-34:20 (1163-1174)
[004] 000003be: PUSH1 0x1                      // test/BaseSingletonPaymaster.t.sol: 34:9-34:20 (1163-1174)
[004] 000003c0: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003c3: EXP                            // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003c4: DUP2                           // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003c5: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003c6: DUP2                           // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003c7: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003dc: MUL                            // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003dd: NOT                            // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003de: AND                            // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003df: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003e0: DUP4                           // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003e1: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003f6: AND                            // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003f7: MUL                            // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003f8: OR                             // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003f9: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003fa: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003fb: POP                            // test/BaseSingletonPaymaster.t.sol: 34:9-34:55 (1163-1209)
[004] 000003fc: PUSH2 0x439                    // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 000003ff: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000401: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000402: DUP1                           // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000403: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000405: ADD                            // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000406: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000408: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000409: DUP1                           // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 0000040a: PUSH1 0xe                      // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 0000040c: DUP2                           // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 0000040d: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 0000040e: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000410: ADD                            // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000411: PUSH32 0x7061796d61737465724f776e6572000000000000000000000000000000000000 // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000432: DUP2                           // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000433: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000434: POP                            // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000435: PUSH2 0x1ef7                   // test/BaseSingletonPaymaster.t.sol: 35:47-35:61 (1257-1271)
[004] 00000438: JUMP                           // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 00000439: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 35:47-35:79 (1257-1289)
[004] 0000043a: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 35:10-35:24 (1220-1234)
[004] 0000043c: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 35:10-35:24 (1220-1234)
[004] 0000043d: PUSH1 0x21                     // test/BaseSingletonPaymaster.t.sol: 35:26-35:43 (1236-1253)
[004] 0000043f: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 35:26-35:43 (1236-1253)
[004] 00000440: DUP5                           // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000441: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000442: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000443: POP                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000444: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000445: DUP4                           // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000446: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000447: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000448: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 0000044b: EXP                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 0000044c: DUP2                           // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 0000044d: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 0000044e: DUP2                           // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 0000044f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000464: MUL                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000465: NOT                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000466: AND                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000467: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000468: DUP4                           // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000469: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 0000047e: AND                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 0000047f: MUL                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000480: OR                             // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000481: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000482: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000483: POP                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000484: POP                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000485: POP                            // test/BaseSingletonPaymaster.t.sol: 35:9-35:79 (1219-1289)
[004] 00000486: PUSH2 0x4c3                    // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 00000489: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 0000048b: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 0000048c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 0000048d: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 0000048f: ADD                            // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 00000490: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 00000492: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 00000493: DUP1                           // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 00000494: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 00000496: DUP2                           // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 00000497: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 00000498: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 0000049a: ADD                            // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 0000049b: PUSH32 0x7573657200000000000000000000000000000000000000000000000000000000 // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 000004bc: DUP2                           // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 000004bd: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 000004be: POP                            // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 000004bf: PUSH2 0x1ef7                   // test/BaseSingletonPaymaster.t.sol: 36:27-36:41 (1317-1331)
[004] 000004c2: JUMP                           // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 000004c3: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 36:27-36:49 (1317-1339)
[004] 000004c4: PUSH1 0x22                     // test/BaseSingletonPaymaster.t.sol: 36:10-36:14 (1300-1304)
[004] 000004c6: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 36:10-36:14 (1300-1304)
[004] 000004c7: PUSH1 0x23                     // test/BaseSingletonPaymaster.t.sol: 36:16-36:23 (1306-1313)
[004] 000004c9: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 36:16-36:23 (1306-1313)
[004] 000004ca: DUP5                           // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004cb: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004cc: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004cd: POP                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004ce: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004cf: DUP4                           // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004d0: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004d1: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004d2: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004d5: EXP                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004d6: DUP2                           // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004d7: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004d8: DUP2                           // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004d9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004ee: MUL                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004ef: NOT                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004f0: AND                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004f1: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004f2: DUP4                           // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 000004f3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 00000508: AND                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 00000509: MUL                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 0000050a: OR                             // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 0000050b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 0000050c: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 0000050d: POP                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 0000050e: POP                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 0000050f: POP                            // test/BaseSingletonPaymaster.t.sol: 36:9-36:49 (1299-1339)
[004] 00000510: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000512: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000513: PUSH2 0x51b                    // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000516: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000517: PUSH2 0x220c                   // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 0000051a: JUMP                           // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 0000051b: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 0000051c: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 0000051e: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 0000051f: DUP1                           // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000520: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000521: SUB                            // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000522: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000523: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000524: CREATE                         // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000525: DUP1                           // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000526: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000527: DUP1                           // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000528: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000529: PUSH2 0x534                    // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 0000052c: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
      0000052d: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
      0000052e: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
      0000052f: DUP1                           // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
      00000530: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
      00000531: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
      00000532: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
      00000533: REVERT                         // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000534: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000535: POP                            // test/BaseSingletonPaymaster.t.sol: 38:22-38:38 (1363-1379)
[004] 00000536: PUSH1 0x27                     // test/BaseSingletonPaymaster.t.sol: 38:9-38:19 (1350-1360)
[004] 00000538: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 38:9-38:19 (1350-1360)
[004] 00000539: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 0000053c: EXP                            // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 0000053d: DUP2                           // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 0000053e: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 0000053f: DUP2                           // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000540: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000555: MUL                            // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000556: NOT                            // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000557: AND                            // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000558: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000559: DUP4                           // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 0000055a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 0000056f: AND                            // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000570: MUL                            // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000571: OR                             // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000572: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000573: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000574: POP                            // test/BaseSingletonPaymaster.t.sol: 38:9-38:38 (1350-1379)
[004] 00000575: PUSH1 0x27                     // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 00000577: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 00000578: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 00000579: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 0000057a: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 0000057b: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 0000057e: EXP                            // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 0000057f: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 00000580: DIV                            // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 00000581: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 00000596: AND                            // test/BaseSingletonPaymaster.t.sol: 39:51-39:61 (1431-1441)
[004] 00000597: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 00000599: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 0000059a: PUSH2 0x5a2                    // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 0000059d: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 0000059e: PUSH2 0x221a                   // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005a1: JUMP                           // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005a2: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005a3: PUSH2 0x5ac                    // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005a6: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005a7: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005a8: PUSH2 0x2a1f                   // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005ab: JUMP                           // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005ac: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005ad: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005af: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b0: DUP1                           // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b1: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b2: SUB                            // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b3: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b4: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b5: CREATE                         // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b6: DUP1                           // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b7: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b8: DUP1                           // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005b9: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005ba: PUSH2 0x5c5                    // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005bd: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
      000005be: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
      000005bf: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
      000005c0: DUP1                           // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
      000005c1: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
      000005c2: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
      000005c3: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
      000005c4: REVERT                         // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005c5: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005c6: POP                            // test/BaseSingletonPaymaster.t.sol: 39:26-39:62 (1406-1442)
[004] 000005c7: PUSH1 0x25                     // test/BaseSingletonPaymaster.t.sol: 39:9-39:23 (1389-1403)
[004] 000005c9: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 39:9-39:23 (1389-1403)
[004] 000005ca: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005cd: EXP                            // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005ce: DUP2                           // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005cf: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005d0: DUP2                           // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005d1: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005e6: MUL                            // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005e7: NOT                            // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005e8: AND                            // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005e9: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005ea: DUP4                           // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 000005eb: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 00000600: AND                            // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 00000601: MUL                            // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 00000602: OR                             // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 00000603: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 00000604: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 00000605: POP                            // test/BaseSingletonPaymaster.t.sol: 39:9-39:62 (1389-1442)
[004] 00000606: PUSH1 0x25                     // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 00000608: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 00000609: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 0000060a: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 0000060b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 0000060c: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 0000060f: EXP                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 00000610: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 00000611: DIV                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 00000612: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 00000627: AND                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:33 (1462-1476)
[004] 00000628: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 40:19-40:47 (1462-1490)
[004] 0000063d: AND                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:47 (1462-1490)
[004] 0000063e: PUSH4 0x5fbfb9cf               // test/BaseSingletonPaymaster.t.sol: 40:19-40:47 (1462-1490)
[004] 00000643: PUSH1 0x22                     // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 00000645: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 00000646: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 00000647: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 00000648: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 00000649: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 0000064c: EXP                            // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 0000064d: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 0000064e: DIV                            // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 0000064f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 00000664: AND                            // test/BaseSingletonPaymaster.t.sol: 40:48-40:52 (1491-1495)
[004] 00000665: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 40:54-40:55 (1497-1498)
[004] 00000666: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000668: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000669: DUP4                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000066a: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000066f: AND                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000670: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000672: SHL                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000673: DUP2                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000674: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000675: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000677: ADD                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000678: PUSH2 0x682                    // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000067b: SWAP3                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000067c: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000067d: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000067e: PUSH2 0x2a89                   // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000681: JUMP                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000682: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000683: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000685: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000687: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000688: DUP1                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000689: DUP4                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000068a: SUB                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000068b: DUP2                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000068c: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000068d: DUP8                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000068e: GAS                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000068f: CALL                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000690: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000691: DUP1                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000692: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000693: PUSH2 0x69e                    // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 00000696: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
      00000697: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
      00000698: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
      00000699: DUP1                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
      0000069a: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
      0000069b: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
      0000069c: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
      0000069d: REVERT                         // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000069e: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 0000069f: POP                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006a0: POP                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006a1: POP                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006a2: POP                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006a3: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006a5: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006a6: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006a7: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006a9: NOT                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006aa: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006ac: DUP3                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006ad: ADD                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006ae: AND                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006af: DUP3                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006b0: ADD                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006b1: DUP1                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006b2: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006b4: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006b5: POP                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006b6: DUP2                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006b7: ADD                            // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006b8: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006b9: PUSH2 0x6c2                    // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006bc: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006bd: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006be: PUSH2 0x2b00                   // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006c1: JUMP                           // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006c2: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 40:19-40:56 (1462-1499)
[004] 000006c3: PUSH1 0x26                     // test/BaseSingletonPaymaster.t.sol: 40:9-40:16 (1452-1459)
[004] 000006c5: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 40:9-40:16 (1452-1459)
[004] 000006c6: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006c9: EXP                            // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006ca: DUP2                           // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006cb: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006cc: DUP2                           // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006cd: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006e2: MUL                            // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006e3: NOT                            // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006e4: AND                            // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006e5: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006e6: DUP4                           // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006e7: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006fc: AND                            // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006fd: MUL                            // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006fe: OR                             // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 000006ff: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 00000700: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 00000701: POP                            // test/BaseSingletonPaymaster.t.sol: 40:9-40:56 (1452-1499)
[004] 00000702: PUSH1 0x27                     // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 00000704: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 00000705: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 00000706: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 00000707: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 00000708: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 0000070b: EXP                            // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 0000070c: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 0000070d: DIV                            // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 0000070e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 00000723: AND                            // test/BaseSingletonPaymaster.t.sol: 41:54-41:64 (1554-1564)
[004] 00000724: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 00000726: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 00000727: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 00000728: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 00000729: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 0000072a: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 0000072d: EXP                            // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 0000072e: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 0000072f: DIV                            // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 00000730: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 00000745: AND                            // test/BaseSingletonPaymaster.t.sol: 41:67-41:81 (1567-1581)
[004] 00000746: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000748: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000749: PUSH2 0x751                    // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 0000074c: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 0000074d: PUSH2 0x2228                   // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000750: JUMP                           // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000751: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000752: PUSH2 0x75c                    // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000755: SWAP3                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000756: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000757: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000758: PUSH2 0x2b2b                   // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 0000075b: JUMP                           // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 0000075c: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 0000075d: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 0000075f: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000760: DUP1                           // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000761: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000762: SUB                            // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000763: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000764: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000765: CREATE                         // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000766: DUP1                           // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000767: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000768: DUP1                           // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000769: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 0000076a: PUSH2 0x775                    // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 0000076d: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
      0000076e: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
      0000076f: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
      00000770: DUP1                           // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
      00000771: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
      00000772: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
      00000773: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
      00000774: REVERT                         // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000775: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000776: POP                            // test/BaseSingletonPaymaster.t.sol: 41:21-41:82 (1521-1582)
[004] 00000777: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 41:9-41:18 (1509-1518)
[004] 00000779: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 41:9-41:18 (1509-1518)
[004] 0000077a: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 0000077d: EXP                            // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 0000077e: DUP2                           // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 0000077f: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 00000780: DUP2                           // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 00000781: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 00000796: MUL                            // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 00000797: NOT                            // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 00000798: AND                            // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 00000799: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 0000079a: DUP4                           // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 0000079b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 000007b0: AND                            // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 000007b1: MUL                            // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 000007b2: OR                             // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 000007b3: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 000007b4: SSTORE                         // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 000007b5: POP                            // test/BaseSingletonPaymaster.t.sol: 41:9-41:82 (1509-1582)
[004] 000007b6: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007b8: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007b9: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007ba: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007bb: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007bc: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007bf: EXP                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007c0: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007c1: DIV                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007c2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007d7: AND                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:18 (1592-1601)
[004] 000007d8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 42:9-42:26 (1592-1609)
[004] 000007ed: AND                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:26 (1592-1609)
[004] 000007ee: PUSH4 0xd0e30db0               // test/BaseSingletonPaymaster.t.sol: 42:9-42:26 (1592-1609)
[004] 000007f3: PUSH9 0x56bc75e2d63100000      // test/BaseSingletonPaymaster.t.sol: 42:34-42:40 (1617-1623)
[004] 000007fd: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 000007ff: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000800: DUP3                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000801: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000806: AND                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000807: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000809: SHL                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000080a: DUP2                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000080b: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000080c: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000080e: ADD                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000080f: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000810: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000812: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000813: DUP1                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000814: DUP4                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000815: SUB                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000816: DUP2                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000817: DUP6                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000818: DUP9                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000819: DUP1                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000081a: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000081b: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000081c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000081d: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000081e: PUSH2 0x825                    // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000821: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000822: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000823: DUP1                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000824: REVERT                         // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000825: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000826: POP                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000827: GAS                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000828: CALL                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000829: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000082a: DUP1                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000082b: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000082c: PUSH2 0x837                    // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000082f: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000830: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000831: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000832: DUP1                           // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000833: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000834: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000835: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
      00000836: REVERT                         // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000837: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000838: POP                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 00000839: POP                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000083a: POP                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000083b: POP                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000083c: POP                            // test/BaseSingletonPaymaster.t.sol: 42:9-42:43 (1592-1626)
[004] 0000083d: JUMP                           // test/BaseSingletonPaymaster.t.sol: 30:5-43:6 (1054-1633)
      0000083e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      0000083f: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 95:52-95:85 (2954-2987)
      00000841: PUSH1 0x16                     // lib/forge-std/src/StdInvariant.sol: 96:28-96:44 (3018-3034)
      00000843: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000844: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000845: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000846: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000848: MUL                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000849: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000084b: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000084c: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000084e: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000084f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000850: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000851: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000852: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000854: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000855: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000856: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000857: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000858: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000859: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000085a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000085b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000085c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000085e: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000085f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000860: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000861: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000862: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000863: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000864: PUSH2 0x8bf                    // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000867: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000868: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000086a: MUL                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000086b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000086c: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000086d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000086e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000086f: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000870: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000871: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000873: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000874: SHA3                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000875: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000876: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000877: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000878: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000879: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000087a: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000087b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000087c: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      0000087f: EXP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000880: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000881: DIV                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000882: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000897: AND                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      00000898: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008ad: AND                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008ae: DUP2                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008af: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008b0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008b2: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008b3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008b4: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008b6: ADD                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008b7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008b8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008b9: DUP4                           // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008ba: GT                             // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008bb: PUSH2 0x876                    // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008be: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008bf: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008c0: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008c1: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008c2: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008c3: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008c4: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008c5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008c6: POP                            // lib/forge-std/src/StdInvariant.sol: 96:9-96:44 (2999-3034)
      000008c7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      000008c8: JUMP                           // lib/forge-std/src/StdInvariant.sol: 95:5-97:6 (2907-3041)
      000008c9: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      000008ca: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 119:54-119:96 (3872-3914)
      000008cc: PUSH1 0x1e                     // lib/forge-std/src/StdInvariant.sol: 120:31-120:50 (3948-3967)
      000008ce: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008cf: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008d0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008d1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008d3: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008d4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008d6: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008d7: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008d9: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008da: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008db: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008dc: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008dd: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008df: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008e0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008e1: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008e2: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008e3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008e4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008e5: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008e6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008e7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008e9: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008ea: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008eb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008ec: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008ed: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008ee: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008ef: LT                             // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008f0: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008f1: PUSH2 0xa44                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008f4: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008f5: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008f6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008f7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008f8: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008f9: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008fa: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008fc: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008fd: SHA3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008fe: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000008ff: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000901: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000902: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000903: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000905: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000906: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000907: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000909: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000090a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000090c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000090d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000090e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000090f: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000910: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000911: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000912: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000913: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000914: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000915: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000916: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000919: EXP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000091a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000091b: DIV                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000091c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000931: AND                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000932: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000947: AND                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000948: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000095d: AND                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000095e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000095f: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000960: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000962: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000963: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000965: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000966: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000967: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000968: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000969: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000096a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000096c: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000096d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000096f: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000970: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000972: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000973: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000974: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000975: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000976: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000978: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000979: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000097a: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000097b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000097c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000097d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000097e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000097f: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000980: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000982: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000983: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000984: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000985: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000986: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000987: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000988: LT                             // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000989: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000098a: PUSH2 0xa2d                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000098d: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000098e: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000098f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000990: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000991: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000992: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000993: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000995: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000996: SHA3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000997: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000998: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000999: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000099a: PUSH2 0x9a2                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000099d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      0000099e: PUSH2 0x2b7f                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009a1: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009a2: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009a3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009a4: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009a6: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009a7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009a9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009aa: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ab: DIV                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ac: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ad: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009af: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009b0: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009b2: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009b3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009b4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009b5: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009b6: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009b8: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009b9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ba: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009bb: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009bc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009bd: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009be: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009bf: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009c0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009c2: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009c3: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009c4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009c5: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009c6: PUSH2 0x9ce                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009c9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ca: PUSH2 0x2b7f                   // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009cd: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ce: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009cf: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009d0: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009d1: PUSH2 0xa19                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009d4: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009d5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009d6: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009d8: LT                             // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009d9: PUSH2 0x9f0                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009dc: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009dd: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009e0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009e1: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009e2: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009e3: DIV                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009e4: MUL                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009e5: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009e6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009e7: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009e8: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ea: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009eb: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ec: PUSH2 0xa19                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ef: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009f0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009f1: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009f2: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009f3: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009f4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009f5: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009f6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009f7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009f9: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009fa: SHA3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009fb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009fc: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009fd: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009fe: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      000009ff: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a00: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a01: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a02: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a04: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a05: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a06: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a08: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a09: DUP1                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a0a: DUP4                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a0b: GT                             // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a0c: PUSH2 0x9fc                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a0f: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a10: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a11: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a12: SUB                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a13: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a15: AND                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a16: DUP3                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a17: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a18: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a19: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a1a: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a1b: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a1c: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a1d: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a1e: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a1f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a20: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a21: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a23: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a24: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a25: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a27: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a28: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a29: PUSH2 0x985                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a2c: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a2d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a2e: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a2f: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a30: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a31: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a32: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a33: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a34: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a35: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a36: DUP2                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a37: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a38: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a3a: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a3b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a3c: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a3e: ADD                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a3f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a40: PUSH2 0x8ec                    // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a43: JUMP                           // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a44: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a45: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a46: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a47: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a48: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a49: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a4a: POP                            // lib/forge-std/src/StdInvariant.sol: 120:9-120:50 (3926-3967)
      00000a4b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
      00000a4c: JUMP                           // lib/forge-std/src/StdInvariant.sol: 119:5-121:6 (3823-3974)
[001] 00000a4d: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 45:5-49:6 (1639-1881)
[001] 00000a4e: PUSH2 0xb05                    // test/BaseSingletonPaymaster.t.sol: 46:9-46:71 (1685-1747)
[001] 00000a51: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a53: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a54: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a55: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a56: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a57: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a5a: EXP                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a5b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a5c: DIV                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a5d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a72: AND                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:35 (1702-1711)
[001] 00000a73: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 46:26-46:46 (1702-1722)
[001] 00000a88: AND                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:46 (1702-1722)
[001] 00000a89: PUSH4 0xb0d691fe               // test/BaseSingletonPaymaster.t.sol: 46:26-46:46 (1702-1722)
[001] 00000a8e: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a90: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a91: DUP2                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a92: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a97: AND                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a98: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a9a: SHL                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a9b: DUP2                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a9c: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a9d: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000a9f: ADD                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aa0: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aa2: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aa4: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aa5: DUP1                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aa6: DUP4                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aa7: SUB                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aa8: DUP2                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aa9: DUP7                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aaa: GAS                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aab: STATICCALL                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aac: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aad: DUP1                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aae: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aaf: PUSH2 0xaba                    // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ab2: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
      00000ab3: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
      00000ab4: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
      00000ab5: DUP1                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
      00000ab6: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
      00000ab7: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
      00000ab8: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
      00000ab9: REVERT                         // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aba: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000abb: POP                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000abc: POP                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000abd: POP                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000abe: POP                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000abf: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ac1: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ac2: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ac3: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ac5: NOT                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ac6: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ac8: DUP3                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ac9: ADD                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000aca: AND                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000acb: DUP3                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000acc: ADD                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000acd: DUP1                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ace: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ad0: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ad1: POP                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ad2: DUP2                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ad3: ADD                            // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ad4: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ad5: PUSH2 0xade                    // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ad8: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ad9: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ada: PUSH2 0x2bea                   // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000add: JUMP                           // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000ade: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 46:26-46:48 (1702-1724)
[001] 00000adf: PUSH1 0x27                     // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000ae1: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000ae2: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000ae3: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000ae4: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000ae5: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000ae8: EXP                            // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000ae9: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000aea: DIV                            // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000aeb: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000b00: AND                            // test/BaseSingletonPaymaster.t.sol: 46:59-46:69 (1735-1745)
[001] 00000b01: PUSH2 0x204f                   // test/BaseSingletonPaymaster.t.sol: 46:9-46:17 (1685-1693)
[001] 00000b04: JUMP                           // test/BaseSingletonPaymaster.t.sol: 46:9-46:71 (1685-1747)
[001] 00000b05: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 46:9-46:71 (1685-1747)
[001] 00000b06: PUSH2 0xbbd                    // test/BaseSingletonPaymaster.t.sol: 47:9-47:61 (1757-1809)
[001] 00000b09: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b0b: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b0c: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b0d: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b0e: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b0f: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b12: EXP                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b13: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b14: DIV                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b15: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b2a: AND                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:35 (1774-1783)
[001] 00000b2b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 47:26-47:41 (1774-1789)
[001] 00000b40: AND                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:41 (1774-1789)
[001] 00000b41: PUSH4 0x8da5cb5b               // test/BaseSingletonPaymaster.t.sol: 47:26-47:41 (1774-1789)
[001] 00000b46: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b48: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b49: DUP2                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b4a: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b4f: AND                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b50: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b52: SHL                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b53: DUP2                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b54: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b55: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b57: ADD                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b58: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b5a: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b5c: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b5d: DUP1                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b5e: DUP4                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b5f: SUB                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b60: DUP2                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b61: DUP7                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b62: GAS                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b63: STATICCALL                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b64: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b65: DUP1                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b66: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b67: PUSH2 0xb72                    // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b6a: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
      00000b6b: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
      00000b6c: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
      00000b6d: DUP1                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
      00000b6e: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
      00000b6f: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
      00000b70: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
      00000b71: REVERT                         // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b72: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b73: POP                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b74: POP                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b75: POP                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b76: POP                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b77: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b79: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b7a: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b7b: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b7d: NOT                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b7e: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b80: DUP3                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b81: ADD                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b82: AND                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b83: DUP3                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b84: ADD                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b85: DUP1                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b86: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b88: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b89: POP                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b8a: DUP2                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b8b: ADD                            // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b8c: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b8d: PUSH2 0xb96                    // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b90: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b91: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b92: PUSH2 0x2c3f                   // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b95: JUMP                           // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b96: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 47:26-47:43 (1774-1791)
[001] 00000b97: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000b99: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000b9a: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000b9b: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000b9c: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000b9d: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000ba0: EXP                            // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000ba1: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000ba2: DIV                            // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000ba3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000bb8: AND                            // test/BaseSingletonPaymaster.t.sol: 47:46-47:60 (1794-1808)
[001] 00000bb9: PUSH2 0x204f                   // test/BaseSingletonPaymaster.t.sol: 47:9-47:17 (1757-1765)
[001] 00000bbc: JUMP                           // test/BaseSingletonPaymaster.t.sol: 47:9-47:61 (1757-1809)
[001] 00000bbd: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 47:9-47:61 (1757-1809)
[001] 00000bbe: PUSH2 0xc75                    // test/BaseSingletonPaymaster.t.sol: 48:9-48:64 (1819-1874)
[001] 00000bc1: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000bc3: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000bc4: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000bc5: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000bc6: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000bc7: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000bca: EXP                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000bcb: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000bcc: DIV                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000bcd: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000be2: AND                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:35 (1836-1845)
[001] 00000be3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 48:26-48:44 (1836-1854)
[001] 00000bf8: AND                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:44 (1836-1854)
[001] 00000bf9: PUSH4 0x61d027b3               // test/BaseSingletonPaymaster.t.sol: 48:26-48:44 (1836-1854)
[001] 00000bfe: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c00: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c01: DUP2                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c02: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c07: AND                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c08: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c0a: SHL                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c0b: DUP2                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c0c: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c0d: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c0f: ADD                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c10: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c12: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c14: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c15: DUP1                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c16: DUP4                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c17: SUB                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c18: DUP2                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c19: DUP7                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c1a: GAS                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c1b: STATICCALL                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c1c: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c1d: DUP1                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c1e: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c1f: PUSH2 0xc2a                    // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c22: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
      00000c23: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
      00000c24: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
      00000c25: DUP1                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
      00000c26: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
      00000c27: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
      00000c28: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
      00000c29: REVERT                         // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c2a: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c2b: POP                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c2c: POP                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c2d: POP                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c2e: POP                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c2f: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c31: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c32: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c33: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c35: NOT                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c36: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c38: DUP3                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c39: ADD                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c3a: AND                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c3b: DUP3                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c3c: ADD                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c3d: DUP1                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c3e: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c40: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c41: POP                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c42: DUP2                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c43: ADD                            // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c44: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c45: PUSH2 0xc4e                    // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c48: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c49: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c4a: PUSH2 0x2c3f                   // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c4d: JUMP                           // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c4e: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 48:26-48:46 (1836-1856)
[001] 00000c4f: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c51: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c52: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c53: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c54: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c55: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c58: EXP                            // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c59: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c5a: DIV                            // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c5b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c70: AND                            // test/BaseSingletonPaymaster.t.sol: 48:49-48:63 (1859-1873)
[001] 00000c71: PUSH2 0x204f                   // test/BaseSingletonPaymaster.t.sol: 48:9-48:17 (1819-1827)
[001] 00000c74: JUMP                           // test/BaseSingletonPaymaster.t.sol: 48:9-48:64 (1819-1874)
[001] 00000c75: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 48:9-48:64 (1819-1874)
[001] 00000c76: JUMP                           // test/BaseSingletonPaymaster.t.sol: 45:5-49:6 (1639-1881)
      00000c77: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000c78: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 115:51-115:84 (3730-3763)
      00000c7a: PUSH1 0x18                     // lib/forge-std/src/StdInvariant.sol: 116:28-116:44 (3794-3810)
      00000c7c: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c7d: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c7e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c7f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c81: MUL                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c82: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c84: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c85: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c87: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c88: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c89: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c8a: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c8b: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c8d: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c8e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c8f: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c90: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c91: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c92: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c93: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c94: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c95: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c97: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c98: DUP3                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c99: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c9a: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c9b: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c9c: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000c9d: PUSH2 0xcf8                    // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ca0: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ca1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ca3: MUL                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ca4: DUP3                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ca5: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ca6: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ca7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ca8: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ca9: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000caa: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cac: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cad: SHA3                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cae: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000caf: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cb0: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cb1: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cb2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cb3: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cb4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cb5: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cb8: EXP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cb9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cba: DIV                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cbb: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cd0: AND                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cd1: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ce6: AND                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ce7: DUP2                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ce8: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ce9: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ceb: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cec: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000ced: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cef: ADD                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cf0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cf1: DUP1                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cf2: DUP4                           // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cf3: GT                             // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cf4: PUSH2 0xcaf                    // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cf7: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cf8: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cf9: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cfa: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cfb: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cfc: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cfd: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cfe: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000cff: POP                            // lib/forge-std/src/StdInvariant.sol: 116:9-116:44 (3775-3810)
      00000d00: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000d01: JUMP                           // lib/forge-std/src/StdInvariant.sol: 115:5-117:6 (3684-3817)
      00000d02: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000d03: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 107:53-107:88 (3433-3468)
      00000d05: PUSH1 0x17                     // lib/forge-std/src/StdInvariant.sol: 108:30-108:48 (3501-3519)
      00000d07: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d08: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d09: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d0a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d0c: MUL                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d0d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d0f: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d10: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d12: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d13: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d14: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d15: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d16: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d18: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d19: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d1a: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d1b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d1c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d1d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d1e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d1f: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d20: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d22: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d23: DUP3                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d24: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d25: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d26: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d27: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d28: PUSH2 0xd83                    // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d2b: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d2c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d2e: MUL                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d2f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d30: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d31: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d32: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d33: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d34: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d35: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d37: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d38: SHA3                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d39: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d3a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d3b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d3c: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d3d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d3e: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d3f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d40: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d43: EXP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d44: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d45: DIV                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d46: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d5b: AND                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d5c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d71: AND                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d72: DUP2                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d73: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d74: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d76: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d77: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d78: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d7a: ADD                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d7b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d7c: DUP1                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d7d: DUP4                           // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d7e: GT                             // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d7f: PUSH2 0xd3a                    // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d82: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d83: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d84: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d85: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d86: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d87: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d88: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d89: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d8a: POP                            // lib/forge-std/src/StdInvariant.sol: 108:9-108:48 (3480-3519)
      00000d8b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000d8c: JUMP                           // lib/forge-std/src/StdInvariant.sol: 107:5-109:6 (3385-3526)
      00000d8d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      00000d8e: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 103:61-103:117 (3249-3305)
      00000d90: PUSH1 0x1b                     // lib/forge-std/src/StdInvariant.sol: 104:38-104:64 (3346-3372)
      00000d92: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d93: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d94: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d95: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d97: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d98: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d9a: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d9b: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d9d: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d9e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000d9f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000da0: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000da1: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000da3: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000da4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000da5: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000da6: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000da7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000da8: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000da9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000daa: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dab: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dad: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dae: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000daf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000db0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000db1: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000db2: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000db3: LT                             // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000db4: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000db5: PUSH2 0xf06                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000db8: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000db9: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dba: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dbb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dbc: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dbd: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dbe: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dc0: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dc1: SHA3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dc2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dc3: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dc5: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dc6: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dc7: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dc9: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dca: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dcb: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dcd: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dce: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dd0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dd1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dd2: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dd3: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dd4: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dd5: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dd6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dd7: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dd8: PUSH2 0xde0                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ddb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ddc: PUSH2 0x2b7f                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ddf: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000de0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000de1: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000de2: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000de4: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000de5: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000de7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000de8: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000de9: DIV                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dea: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000deb: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ded: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dee: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000df0: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000df1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000df2: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000df3: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000df4: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000df6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000df7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000df8: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000df9: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dfa: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dfb: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dfc: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dfd: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000dfe: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e00: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e01: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e02: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e03: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e04: PUSH2 0xe0c                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e07: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e08: PUSH2 0x2b7f                   // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e0b: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e0c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e0d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e0e: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e0f: PUSH2 0xe57                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e12: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e13: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e14: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e16: LT                             // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e17: PUSH2 0xe2e                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e1a: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e1b: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e1e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e1f: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e20: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e21: DIV                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e22: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e23: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e24: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e25: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e26: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e28: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e29: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e2a: PUSH2 0xe57                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e2d: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e2e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e2f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e30: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e31: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e32: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e33: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e34: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e35: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e37: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e38: SHA3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e39: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e3a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e3b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e3c: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e3d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e3e: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e3f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e40: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e42: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e43: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e44: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e46: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e47: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e48: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e49: GT                             // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e4a: PUSH2 0xe3a                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e4d: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e4e: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e4f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e50: SUB                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e51: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e53: AND                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e54: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e55: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e56: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e57: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e58: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e59: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e5a: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e5b: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e5c: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e5d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e5e: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e5f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e61: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e62: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e64: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e65: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e66: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e67: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e68: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e69: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e6b: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e6c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e6e: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e6f: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e71: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e72: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e73: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e74: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e75: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e77: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e78: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e79: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e7a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e7b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e7c: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e7d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e7e: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e7f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e81: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e82: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e83: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e84: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e85: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e86: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e87: PUSH2 0xeee                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e8a: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e8b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e8d: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e8e: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e8f: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e90: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e91: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e92: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e93: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e94: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e96: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e97: SHA3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e98: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e99: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e9a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e9b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e9c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e9d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e9e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000e9f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ea0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ea1: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ea4: EXP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ea5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ea6: DIV                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ea7: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ea9: SHL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000eaa: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ec7: NOT                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ec8: AND                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ec9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000eca: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ecb: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ecd: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ece: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ecf: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ed1: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ed2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ed3: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ed5: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ed6: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ed8: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ed9: DIV                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000eda: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000edb: DUP4                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000edc: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000edd: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ede: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ee0: SUB                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ee1: DUP3                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ee2: MUL                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ee3: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ee4: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ee5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ee6: DUP5                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ee7: GT                             // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ee8: PUSH2 0xe9b                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000eeb: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000eec: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000eed: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000eee: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000eef: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef0: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef1: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef2: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef3: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef6: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef7: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef8: DUP2                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000ef9: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000efa: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000efc: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000efd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000efe: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f00: ADD                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f01: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f02: PUSH2 0xdb0                    // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f05: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f06: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f07: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f08: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f09: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f0a: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f0b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f0c: POP                            // lib/forge-std/src/StdInvariant.sol: 104:9-104:64 (3317-3372)
      00000f0d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
      00000f0e: JUMP                           // lib/forge-std/src/StdInvariant.sol: 103:5-105:6 (3193-3379)
[001] 00000f0f: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 59:5-65:6 (2155-2406)
[001] 00000f10: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000f31: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000f32: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000f33: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 60:9-60:22 (2199-2212)
[001] 00000f48: AND                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:22 (2199-2212)
[001] 00000f49: PUSH4 0x6447d56                // test/BaseSingletonPaymaster.t.sol: 60:9-60:22 (2199-2212)
[001] 00000f4e: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f50: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f51: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f52: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f53: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f54: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f57: EXP                            // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f58: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f59: DIV                            // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f5a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f6f: AND                            // test/BaseSingletonPaymaster.t.sol: 60:23-60:37 (2213-2227)
[001] 00000f70: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f72: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f73: DUP3                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f74: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f79: AND                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f7a: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f7c: SHL                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f7d: DUP2                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f7e: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f7f: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f81: ADD                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f82: PUSH2 0xf8b                    // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f85: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f86: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f87: PUSH2 0x2c6a                   // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f8a: JUMP                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f8b: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f8c: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f8d: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f8f: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f90: DUP1                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f91: DUP4                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f92: SUB                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f93: DUP2                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f94: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f95: DUP8                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f96: DUP1                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f97: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f98: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f99: DUP1                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f9a: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f9b: PUSH2 0xfa2                    // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000f9e: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000f9f: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000fa0: DUP1                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000fa1: REVERT                         // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fa2: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fa3: POP                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fa4: GAS                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fa5: CALL                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fa6: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fa7: DUP1                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fa8: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fa9: PUSH2 0xfb4                    // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fac: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000fad: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000fae: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000faf: DUP1                           // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000fb0: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000fb1: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000fb2: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
      00000fb3: REVERT                         // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fb4: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fb5: POP                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fb6: POP                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fb7: POP                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fb8: POP                            // test/BaseSingletonPaymaster.t.sol: 60:9-60:38 (2199-2228)
[001] 00000fb9: PUSH2 0x107b                   // test/BaseSingletonPaymaster.t.sol: 61:9-61:52 (2238-2281)
[001] 00000fbc: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fbe: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fbf: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fc0: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fc1: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fc2: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fc5: EXP                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fc6: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fc7: DIV                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fc8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fdd: AND                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:30 (2250-2259)
[001] 00000fde: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 61:21-61:38 (2250-2267)
[001] 00000ff3: AND                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:38 (2250-2267)
[001] 00000ff4: PUSH4 0x736c0d5b               // test/BaseSingletonPaymaster.t.sol: 61:21-61:38 (2250-2267)
[001] 00000ff9: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 00000ffb: PUSH1 0x1                      // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 00000ffd: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 00000ffe: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 00000fff: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 00001000: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 00001003: EXP                            // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 00001004: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 00001005: DIV                            // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 00001006: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 0000101b: AND                            // test/BaseSingletonPaymaster.t.sol: 61:39-61:50 (2268-2279)
[001] 0000101c: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000101e: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000101f: DUP3                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001020: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001025: AND                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001026: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001028: SHL                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001029: DUP2                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000102a: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000102b: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000102d: ADD                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000102e: PUSH2 0x1037                   // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001031: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001032: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001033: PUSH2 0x2ca3                   // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001036: JUMP                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001037: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001038: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000103a: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000103c: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000103d: DUP1                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000103e: DUP4                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000103f: SUB                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001040: DUP2                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001041: DUP7                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001042: GAS                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001043: STATICCALL                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001044: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001045: DUP1                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001046: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001047: PUSH2 0x1052                   // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000104a: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
      0000104b: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
      0000104c: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
      0000104d: DUP1                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
      0000104e: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
      0000104f: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
      00001050: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
      00001051: REVERT                         // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001052: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001053: POP                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001054: POP                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001055: POP                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001056: POP                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001057: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001059: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000105a: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000105b: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000105d: NOT                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000105e: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001060: DUP3                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001061: ADD                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001062: AND                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001063: DUP3                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001064: ADD                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001065: DUP1                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001066: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001068: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001069: POP                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000106a: DUP2                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000106b: ADD                            // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000106c: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 0000106d: PUSH2 0x1076                   // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001070: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001071: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001072: PUSH2 0x2ce6                   // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001075: JUMP                           // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001076: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 61:21-61:51 (2250-2280)
[001] 00001077: PUSH2 0x20dc                   // test/BaseSingletonPaymaster.t.sol: 61:9-61:20 (2238-2249)
[001] 0000107a: JUMP                           // test/BaseSingletonPaymaster.t.sol: 61:9-61:52 (2238-2281)
[001] 0000107b: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 61:9-61:52 (2238-2281)
[001] 0000107c: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 0000107e: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 0000107f: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 00001080: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 00001081: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 00001082: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 00001085: EXP                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 00001086: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 00001087: DIV                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 00001088: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 0000109d: AND                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:18 (2291-2300)
[001] 0000109e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 62:9-62:28 (2291-2310)
[001] 000010b3: AND                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:28 (2291-2310)
[001] 000010b4: PUSH4 0xeb12d61e               // test/BaseSingletonPaymaster.t.sol: 62:9-62:28 (2291-2310)
[001] 000010b9: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010bb: PUSH1 0x1                      // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010bd: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010be: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010bf: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010c0: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010c3: EXP                            // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010c4: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010c5: DIV                            // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010c6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010db: AND                            // test/BaseSingletonPaymaster.t.sol: 62:29-62:40 (2311-2322)
[001] 000010dc: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010de: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010df: DUP3                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010e0: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010e5: AND                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010e6: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010e8: SHL                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010e9: DUP2                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010ea: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010eb: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010ed: ADD                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010ee: PUSH2 0x10f7                   // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010f1: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010f2: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010f3: PUSH2 0x2ca3                   // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010f6: JUMP                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010f7: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010f8: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010f9: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010fb: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010fc: DUP1                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010fd: DUP4                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010fe: SUB                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 000010ff: DUP2                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001100: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001101: DUP8                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001102: DUP1                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001103: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001104: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001105: DUP1                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001106: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001107: PUSH2 0x110e                   // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 0000110a: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      0000110b: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      0000110c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      0000110d: REVERT                         // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 0000110e: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 0000110f: POP                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001110: GAS                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001111: CALL                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001112: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001113: DUP1                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001114: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001115: PUSH2 0x1120                   // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001118: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      00001119: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      0000111a: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      0000111b: DUP1                           // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      0000111c: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      0000111d: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      0000111e: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
      0000111f: REVERT                         // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001120: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001121: POP                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001122: POP                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001123: POP                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001124: POP                            // test/BaseSingletonPaymaster.t.sol: 62:9-62:41 (2291-2323)
[001] 00001125: PUSH2 0x11e7                   // test/BaseSingletonPaymaster.t.sol: 63:9-63:51 (2333-2375)
[001] 00001128: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 0000112a: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 0000112b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 0000112c: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 0000112d: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 0000112e: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 00001131: EXP                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 00001132: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 00001133: DIV                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 00001134: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 00001149: AND                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:29 (2344-2353)
[001] 0000114a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 63:20-63:37 (2344-2361)
[001] 0000115f: AND                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:37 (2344-2361)
[001] 00001160: PUSH4 0x736c0d5b               // test/BaseSingletonPaymaster.t.sol: 63:20-63:37 (2344-2361)
[001] 00001165: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 00001167: PUSH1 0x1                      // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 00001169: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 0000116a: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 0000116b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 0000116c: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 0000116f: EXP                            // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 00001170: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 00001171: DIV                            // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 00001172: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 00001187: AND                            // test/BaseSingletonPaymaster.t.sol: 63:38-63:49 (2362-2373)
[001] 00001188: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 0000118a: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 0000118b: DUP3                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 0000118c: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 00001191: AND                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 00001192: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 00001194: SHL                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 00001195: DUP2                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 00001196: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 00001197: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 00001199: ADD                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 0000119a: PUSH2 0x11a3                   // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 0000119d: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 0000119e: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 0000119f: PUSH2 0x2ca3                   // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011a2: JUMP                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011a3: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011a4: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011a6: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011a8: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011a9: DUP1                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011aa: DUP4                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011ab: SUB                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011ac: DUP2                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011ad: DUP7                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011ae: GAS                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011af: STATICCALL                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011b0: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011b1: DUP1                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011b2: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011b3: PUSH2 0x11be                   // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011b6: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
      000011b7: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
      000011b8: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
      000011b9: DUP1                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
      000011ba: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
      000011bb: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
      000011bc: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
      000011bd: REVERT                         // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011be: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011bf: POP                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011c0: POP                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011c1: POP                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011c2: POP                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011c3: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011c5: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011c6: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011c7: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011c9: NOT                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011ca: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011cc: DUP3                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011cd: ADD                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011ce: AND                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011cf: DUP3                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011d0: ADD                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011d1: DUP1                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011d2: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011d4: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011d5: POP                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011d6: DUP2                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011d7: ADD                            // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011d8: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011d9: PUSH2 0x11e2                   // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011dc: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011dd: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011de: PUSH2 0x2ce6                   // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011e1: JUMP                           // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011e2: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 63:20-63:50 (2344-2374)
[001] 000011e3: PUSH2 0x2166                   // test/BaseSingletonPaymaster.t.sol: 63:9-63:19 (2333-2343)
[001] 000011e6: JUMP                           // test/BaseSingletonPaymaster.t.sol: 63:9-63:51 (2333-2375)
[001] 000011e7: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 63:9-63:51 (2333-2375)
[001] 000011e8: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001209: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000120a: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000120b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 64:9-64:21 (2385-2397)
[001] 00001220: AND                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:21 (2385-2397)
[001] 00001221: PUSH4 0x90c5013b               // test/BaseSingletonPaymaster.t.sol: 64:9-64:21 (2385-2397)
[001] 00001226: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001228: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001229: DUP2                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000122a: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000122f: AND                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001230: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001232: SHL                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001233: DUP2                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001234: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001235: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001237: ADD                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001238: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001239: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000123b: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000123c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000123d: DUP4                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000123e: SUB                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000123f: DUP2                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001240: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001241: DUP8                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001242: DUP1                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001243: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001244: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001245: DUP1                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001246: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001247: PUSH2 0x124e                   // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000124a: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      0000124b: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      0000124c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      0000124d: REVERT                         // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000124e: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 0000124f: POP                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001250: GAS                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001251: CALL                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001252: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001253: DUP1                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001254: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001255: PUSH2 0x1260                   // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001258: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      00001259: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      0000125a: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      0000125b: DUP1                           // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      0000125c: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      0000125d: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      0000125e: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
      0000125f: REVERT                         // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001260: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001261: POP                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001262: POP                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001263: POP                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001264: POP                            // test/BaseSingletonPaymaster.t.sol: 64:9-64:23 (2385-2399)
[001] 00001265: JUMP                           // test/BaseSingletonPaymaster.t.sol: 59:5-65:6 (2155-2406)
      00001266: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00001267: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 99:53-99:87 (3095-3129)
      00001269: PUSH1 0x1a                     // lib/forge-std/src/StdInvariant.sol: 100:30-100:48 (3162-3180)
      0000126b: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000126c: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000126d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000126e: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001270: MUL                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001271: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001273: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001274: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001276: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001277: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001278: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001279: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000127a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000127c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000127d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000127e: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000127f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001280: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001281: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001282: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001283: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001284: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001286: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001287: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001288: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001289: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000128a: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000128b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000128c: LT                             // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000128d: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000128e: PUSH2 0x1331                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001291: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001292: DUP4                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001293: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001294: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001295: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001296: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001297: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001299: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000129a: SHA3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000129b: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000129c: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000129d: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000129e: PUSH2 0x12a6                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012a1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012a2: PUSH2 0x2b7f                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012a5: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012a6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012a7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012a8: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012aa: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ab: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ad: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ae: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012af: DIV                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012b0: MUL                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012b1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012b3: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012b4: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012b6: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012b7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012b8: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012b9: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ba: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012bc: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012bd: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012be: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012bf: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012c0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012c1: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012c2: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012c3: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012c4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012c6: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012c7: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012c8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012c9: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ca: PUSH2 0x12d2                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012cd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ce: PUSH2 0x2b7f                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012d1: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012d2: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012d3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012d4: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012d5: PUSH2 0x131d                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012d8: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012d9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012da: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012dc: LT                             // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012dd: PUSH2 0x12f4                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012e0: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012e1: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012e4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012e5: DUP4                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012e6: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012e7: DIV                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012e8: MUL                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012e9: DUP4                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ea: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012eb: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ec: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ee: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ef: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012f0: PUSH2 0x131d                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012f3: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012f4: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012f5: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012f6: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012f7: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012f8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012f9: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012fa: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012fb: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012fd: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012fe: SHA3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      000012ff: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001300: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001301: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001302: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001303: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001304: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001305: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001306: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001308: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001309: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000130a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000130c: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000130d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000130e: DUP4                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000130f: GT                             // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001310: PUSH2 0x1300                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001313: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001314: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001315: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001316: SUB                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001317: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001319: AND                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000131a: DUP3                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000131b: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000131c: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000131d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000131e: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000131f: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001320: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001321: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001322: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001323: DUP2                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001324: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001325: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001327: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001328: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001329: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000132b: ADD                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000132c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      0000132d: PUSH2 0x1289                   // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001330: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001331: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001332: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001333: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001334: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001335: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001336: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001337: POP                            // lib/forge-std/src/StdInvariant.sol: 100:9-100:48 (3141-3180)
      00001338: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      00001339: JUMP                           // lib/forge-std/src/StdInvariant.sol: 99:5-101:6 (3047-3187)
      0000133a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      0000133b: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 111:53-111:93 (3580-3620)
      0000133d: PUSH1 0x1d                     // lib/forge-std/src/StdInvariant.sol: 112:30-112:48 (3653-3671)
      0000133f: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001340: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001341: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001342: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001344: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001345: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001347: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001348: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000134a: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000134b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000134c: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000134d: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000134e: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001350: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001351: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001352: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001353: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001354: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001355: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001356: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001357: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001358: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000135a: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000135b: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000135c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000135d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000135e: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000135f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001360: LT                             // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001361: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001362: PUSH2 0x1478                   // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001365: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001366: DUP4                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001367: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001368: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001369: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000136a: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000136b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000136d: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000136e: SHA3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000136f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001370: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001372: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001373: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001374: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001376: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001377: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001378: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000137a: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000137b: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000137d: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000137e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000137f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001380: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001381: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001382: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001383: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001384: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001385: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001386: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001387: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000138a: EXP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000138b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000138c: DIV                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000138d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013a2: AND                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013a3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013b8: AND                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013b9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013ce: AND                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013cf: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013d0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013d1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013d3: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013d4: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013d6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013d7: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013d8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013d9: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013da: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013db: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013dd: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013de: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013e0: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013e1: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013e3: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013e4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013e5: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013e6: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013e7: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013e9: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013ea: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013eb: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013ec: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013ed: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013ee: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013ef: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013f0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013f1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013f3: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013f4: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013f5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013f6: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013f7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013f8: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013f9: PUSH2 0x1460                   // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013fc: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013fd: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      000013ff: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001400: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001401: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001402: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001403: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001404: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001405: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001406: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001408: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001409: SHA3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000140a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000140b: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000140c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000140d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000140e: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000140f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001410: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001411: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001412: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001413: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001416: EXP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001417: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001418: DIV                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001419: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000141b: SHL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000141c: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001439: NOT                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000143a: AND                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000143b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000143c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000143d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000143f: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001440: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001441: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001443: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001444: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001445: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001447: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001448: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000144a: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000144b: DIV                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000144c: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000144d: DUP4                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000144e: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000144f: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001450: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001452: SUB                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001453: DUP3                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001454: MUL                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001455: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001456: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001457: DUP1                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001458: DUP5                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001459: GT                             // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000145a: PUSH2 0x140d                   // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000145d: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000145e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000145f: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001460: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001461: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001462: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001463: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001464: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001465: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001466: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001467: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001468: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001469: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000146a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000146b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000146c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000146e: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000146f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001470: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001472: ADD                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001473: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001474: PUSH2 0x135d                   // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001477: JUMP                           // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001478: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      00001479: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000147a: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000147b: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000147c: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000147d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000147e: POP                            // lib/forge-std/src/StdInvariant.sol: 112:9-112:48 (3632-3671)
      0000147f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
      00001480: JUMP                           // lib/forge-std/src/StdInvariant.sol: 111:5-113:6 (3532-3678)
[001] 00001481: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 67:5-73:6 (2412-2678)
[001] 00001482: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 000014a3: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000014a4: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000014a5: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 68:9-68:22 (2459-2472)
[001] 000014ba: AND                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:22 (2459-2472)
[001] 000014bb: PUSH4 0x6447d56                // test/BaseSingletonPaymaster.t.sol: 68:9-68:22 (2459-2472)
[001] 000014c0: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014c2: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014c3: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014c4: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014c5: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014c6: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014c9: EXP                            // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014ca: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014cb: DIV                            // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014cc: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014e1: AND                            // test/BaseSingletonPaymaster.t.sol: 68:23-68:37 (2473-2487)
[001] 000014e2: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014e4: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014e5: DUP3                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014e6: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014eb: AND                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014ec: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014ee: SHL                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014ef: DUP2                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014f0: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014f1: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014f3: ADD                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014f4: PUSH2 0x14fd                   // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014f7: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014f8: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014f9: PUSH2 0x2c6a                   // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014fc: JUMP                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014fd: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014fe: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 000014ff: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001501: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001502: DUP1                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001503: DUP4                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001504: SUB                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001505: DUP2                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001506: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001507: DUP8                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001508: DUP1                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001509: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 0000150a: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 0000150b: DUP1                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 0000150c: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 0000150d: PUSH2 0x1514                   // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001510: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      00001511: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      00001512: DUP1                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      00001513: REVERT                         // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001514: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001515: POP                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001516: GAS                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001517: CALL                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001518: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001519: DUP1                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 0000151a: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 0000151b: PUSH2 0x1526                   // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 0000151e: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      0000151f: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      00001520: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      00001521: DUP1                           // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      00001522: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      00001523: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      00001524: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
      00001525: REVERT                         // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001526: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001527: POP                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001528: POP                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 00001529: POP                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 0000152a: POP                            // test/BaseSingletonPaymaster.t.sol: 68:9-68:38 (2459-2488)
[001] 0000152b: PUSH2 0x15ec                   // test/BaseSingletonPaymaster.t.sol: 69:9-69:54 (2498-2543)
[001] 0000152e: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 00001530: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 00001531: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 00001532: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 00001533: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 00001534: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 00001537: EXP                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 00001538: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 00001539: DIV                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 0000153a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 0000154f: AND                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:29 (2509-2518)
[001] 00001550: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 69:20-69:37 (2509-2526)
[001] 00001565: AND                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:37 (2509-2526)
[001] 00001566: PUSH4 0x736c0d5b               // test/BaseSingletonPaymaster.t.sol: 69:20-69:37 (2509-2526)
[001] 0000156b: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 0000156d: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 0000156e: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 0000156f: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 00001570: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 00001571: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 00001574: EXP                            // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 00001575: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 00001576: DIV                            // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 00001577: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 0000158c: AND                            // test/BaseSingletonPaymaster.t.sol: 69:38-69:52 (2527-2541)
[001] 0000158d: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 0000158f: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 00001590: DUP3                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 00001591: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 00001596: AND                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 00001597: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 00001599: SHL                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 0000159a: DUP2                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 0000159b: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 0000159c: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 0000159e: ADD                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 0000159f: PUSH2 0x15a8                   // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015a2: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015a3: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015a4: PUSH2 0x2c6a                   // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015a7: JUMP                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015a8: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015a9: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015ab: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015ad: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015ae: DUP1                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015af: DUP4                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015b0: SUB                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015b1: DUP2                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015b2: DUP7                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015b3: GAS                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015b4: STATICCALL                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015b5: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015b6: DUP1                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015b7: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015b8: PUSH2 0x15c3                   // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015bb: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
      000015bc: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
      000015bd: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
      000015be: DUP1                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
      000015bf: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
      000015c0: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
      000015c1: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
      000015c2: REVERT                         // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015c3: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015c4: POP                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015c5: POP                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015c6: POP                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015c7: POP                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015c8: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015ca: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015cb: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015cc: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015ce: NOT                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015cf: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015d1: DUP3                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015d2: ADD                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015d3: AND                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015d4: DUP3                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015d5: ADD                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015d6: DUP1                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015d7: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015d9: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015da: POP                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015db: DUP2                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015dc: ADD                            // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015dd: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015de: PUSH2 0x15e7                   // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015e1: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015e2: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015e3: PUSH2 0x2ce6                   // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015e6: JUMP                           // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015e7: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 69:20-69:53 (2509-2542)
[001] 000015e8: PUSH2 0x2166                   // test/BaseSingletonPaymaster.t.sol: 69:9-69:19 (2498-2508)
[001] 000015eb: JUMP                           // test/BaseSingletonPaymaster.t.sol: 69:9-69:54 (2498-2543)
[001] 000015ec: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 69:9-69:54 (2498-2543)
[001] 000015ed: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 000015ef: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 000015f0: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 000015f1: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 000015f2: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 000015f3: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 000015f6: EXP                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 000015f7: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 000015f8: DIV                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 000015f9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 0000160e: AND                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:18 (2553-2562)
[001] 0000160f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 70:9-70:31 (2553-2575)
[001] 00001624: AND                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:31 (2553-2575)
[001] 00001625: PUSH4 0xe316ab7                // test/BaseSingletonPaymaster.t.sol: 70:9-70:31 (2553-2575)
[001] 0000162a: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 0000162c: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 0000162d: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 0000162e: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 0000162f: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 00001630: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 00001633: EXP                            // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 00001634: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 00001635: DIV                            // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 00001636: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 0000164b: AND                            // test/BaseSingletonPaymaster.t.sol: 70:32-70:46 (2576-2590)
[001] 0000164c: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000164e: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000164f: DUP3                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001650: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001655: AND                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001656: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001658: SHL                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001659: DUP2                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000165a: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000165b: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000165d: ADD                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000165e: PUSH2 0x1667                   // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001661: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001662: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001663: PUSH2 0x2c6a                   // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001666: JUMP                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001667: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001668: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001669: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000166b: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000166c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000166d: DUP4                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000166e: SUB                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000166f: DUP2                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001670: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001671: DUP8                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001672: DUP1                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001673: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001674: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001675: DUP1                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001676: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001677: PUSH2 0x167e                   // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000167a: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      0000167b: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      0000167c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      0000167d: REVERT                         // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000167e: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 0000167f: POP                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001680: GAS                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001681: CALL                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001682: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001683: DUP1                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001684: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001685: PUSH2 0x1690                   // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001688: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      00001689: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      0000168a: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      0000168b: DUP1                           // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      0000168c: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      0000168d: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      0000168e: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
      0000168f: REVERT                         // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001690: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001691: POP                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001692: POP                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001693: POP                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001694: POP                            // test/BaseSingletonPaymaster.t.sol: 70:9-70:47 (2553-2591)
[001] 00001695: PUSH2 0x1756                   // test/BaseSingletonPaymaster.t.sol: 71:9-71:55 (2601-2647)
[001] 00001698: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 0000169a: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 0000169b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 0000169c: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 0000169d: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 0000169e: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 000016a1: EXP                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 000016a2: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 000016a3: DIV                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 000016a4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 000016b9: AND                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:30 (2613-2622)
[001] 000016ba: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 71:21-71:38 (2613-2630)
[001] 000016cf: AND                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:38 (2613-2630)
[001] 000016d0: PUSH4 0x736c0d5b               // test/BaseSingletonPaymaster.t.sol: 71:21-71:38 (2613-2630)
[001] 000016d5: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016d7: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016d8: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016d9: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016da: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016db: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016de: EXP                            // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016df: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016e0: DIV                            // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016e1: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016f6: AND                            // test/BaseSingletonPaymaster.t.sol: 71:39-71:53 (2631-2645)
[001] 000016f7: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 000016f9: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 000016fa: DUP3                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 000016fb: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001700: AND                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001701: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001703: SHL                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001704: DUP2                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001705: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001706: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001708: ADD                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001709: PUSH2 0x1712                   // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000170c: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000170d: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000170e: PUSH2 0x2c6a                   // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001711: JUMP                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001712: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001713: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001715: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001717: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001718: DUP1                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001719: DUP4                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000171a: SUB                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000171b: DUP2                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000171c: DUP7                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000171d: GAS                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000171e: STATICCALL                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000171f: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001720: DUP1                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001721: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001722: PUSH2 0x172d                   // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001725: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
      00001726: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
      00001727: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
      00001728: DUP1                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
      00001729: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
      0000172a: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
      0000172b: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
      0000172c: REVERT                         // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000172d: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000172e: POP                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000172f: POP                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001730: POP                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001731: POP                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001732: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001734: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001735: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001736: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001738: NOT                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001739: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000173b: DUP3                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000173c: ADD                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000173d: AND                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000173e: DUP3                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000173f: ADD                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001740: DUP1                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001741: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001743: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001744: POP                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001745: DUP2                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001746: ADD                            // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001747: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001748: PUSH2 0x1751                   // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000174b: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000174c: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 0000174d: PUSH2 0x2ce6                   // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001750: JUMP                           // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001751: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 71:21-71:54 (2613-2646)
[001] 00001752: PUSH2 0x20dc                   // test/BaseSingletonPaymaster.t.sol: 71:9-71:20 (2601-2612)
[001] 00001755: JUMP                           // test/BaseSingletonPaymaster.t.sol: 71:9-71:55 (2601-2647)
[001] 00001756: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 71:9-71:55 (2601-2647)
[001] 00001757: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001778: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001779: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000177a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 72:9-72:21 (2657-2669)
[001] 0000178f: AND                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:21 (2657-2669)
[001] 00001790: PUSH4 0x90c5013b               // test/BaseSingletonPaymaster.t.sol: 72:9-72:21 (2657-2669)
[001] 00001795: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 00001797: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 00001798: DUP2                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 00001799: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 0000179e: AND                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 0000179f: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017a1: SHL                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017a2: DUP2                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017a3: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017a4: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017a6: ADD                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017a7: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017a8: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017aa: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017ab: DUP1                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017ac: DUP4                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017ad: SUB                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017ae: DUP2                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017af: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017b0: DUP8                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017b1: DUP1                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017b2: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017b3: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017b4: DUP1                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017b5: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017b6: PUSH2 0x17bd                   // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017b9: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017ba: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017bb: DUP1                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017bc: REVERT                         // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017bd: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017be: POP                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017bf: GAS                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017c0: CALL                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017c1: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017c2: DUP1                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017c3: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017c4: PUSH2 0x17cf                   // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017c7: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017c8: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017c9: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017ca: DUP1                           // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017cb: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017cc: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017cd: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
      000017ce: REVERT                         // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017cf: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017d0: POP                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017d1: POP                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017d2: POP                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017d3: POP                            // test/BaseSingletonPaymaster.t.sol: 72:9-72:23 (2657-2671)
[001] 000017d4: JUMP                           // test/BaseSingletonPaymaster.t.sol: 67:5-73:6 (2412-2678)
      000017d5: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      000017d6: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 91:54-91:94 (2803-2843)
      000017d8: PUSH1 0x1c                     // lib/forge-std/src/StdInvariant.sol: 92:30-92:48 (2876-2894)
      000017da: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017db: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017dc: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017dd: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017df: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017e0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017e2: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017e3: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017e5: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017e6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017e7: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017e8: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017e9: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017eb: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017ec: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017ed: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017ee: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017ef: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017f0: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017f1: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017f2: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017f3: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017f5: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017f6: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017f7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017f8: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017f9: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017fa: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017fb: LT                             // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017fc: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000017fd: PUSH2 0x1913                   // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001800: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001801: DUP4                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001802: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001803: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001804: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001805: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001806: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001808: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001809: SHA3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000180a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000180b: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000180d: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000180e: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000180f: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001811: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001812: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001813: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001815: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001816: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001818: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001819: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000181a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000181b: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000181c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000181d: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000181e: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000181f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001820: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001821: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001822: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001825: EXP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001826: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001827: DIV                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001828: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000183d: AND                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000183e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001853: AND                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001854: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001869: AND                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000186a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000186b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000186c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000186e: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000186f: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001871: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001872: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001873: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001874: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001875: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001876: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001878: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001879: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000187b: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000187c: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000187e: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000187f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001880: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001881: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001882: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001884: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001885: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001886: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001887: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001888: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001889: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000188a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000188b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000188c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000188e: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000188f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001890: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001891: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001892: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001893: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001894: PUSH2 0x18fb                   // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001897: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001898: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000189a: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000189b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000189c: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000189d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000189e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000189f: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018a0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018a1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018a3: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018a4: SHA3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018a5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018a6: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018a7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018a8: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018a9: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018aa: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018ab: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018ac: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018ad: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018ae: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018b1: EXP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018b2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018b3: DIV                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018b4: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018b6: SHL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018b7: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018d4: NOT                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018d5: AND                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018d6: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018d7: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018d8: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018da: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018db: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018dc: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018de: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018df: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018e0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018e2: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018e3: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018e5: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018e6: DIV                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018e7: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018e8: DUP4                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018e9: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018ea: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018eb: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018ed: SUB                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018ee: DUP3                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018ef: MUL                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018f0: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018f1: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018f2: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018f3: DUP5                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018f4: GT                             // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018f5: PUSH2 0x18a8                   // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018f8: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018f9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018fa: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018fb: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018fc: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018fd: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018fe: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      000018ff: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001900: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001901: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001902: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001903: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001904: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001905: DUP2                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001906: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001907: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001909: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000190a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000190b: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000190d: ADD                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000190e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000190f: PUSH2 0x17f8                   // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001912: JUMP                           // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001913: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001914: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001915: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001916: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001917: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001918: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      00001919: POP                            // lib/forge-std/src/StdInvariant.sol: 92:9-92:48 (2855-2894)
      0000191a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000191b: JUMP                           // lib/forge-std/src/StdInvariant.sol: 91:5-93:6 (2754-2901)
      0000191c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      0000191d: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 83:54-83:88 (2508-2542)
      0000191f: PUSH1 0x19                     // lib/forge-std/src/StdInvariant.sol: 84:30-84:48 (2575-2593)
      00001921: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001922: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001923: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001924: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001926: MUL                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001927: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001929: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000192a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000192c: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000192d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000192e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000192f: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001930: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001932: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001933: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001934: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001935: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001936: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001937: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001938: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001939: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000193a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000193c: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000193d: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000193e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000193f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001940: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001941: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001942: LT                             // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001943: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001944: PUSH2 0x19e7                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001947: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001948: DUP4                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001949: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000194a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000194b: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000194c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000194d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000194f: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001950: SHA3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001951: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001952: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001953: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001954: PUSH2 0x195c                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001957: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001958: PUSH2 0x2b7f                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000195b: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000195c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000195d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000195e: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001960: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001961: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001963: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001964: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001965: DIV                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001966: MUL                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001967: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001969: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000196a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000196c: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000196d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000196e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000196f: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001970: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001972: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001973: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001974: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001975: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001976: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001977: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001978: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001979: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000197a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000197c: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000197d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000197e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000197f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001980: PUSH2 0x1988                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001983: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001984: PUSH2 0x2b7f                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001987: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001988: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001989: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000198a: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000198b: PUSH2 0x19d3                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000198e: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000198f: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001990: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001992: LT                             // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001993: PUSH2 0x19aa                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001996: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      00001997: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000199a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000199b: DUP4                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000199c: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000199d: DIV                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000199e: MUL                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      0000199f: DUP4                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019a0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019a1: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019a2: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019a4: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019a5: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019a6: PUSH2 0x19d3                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019a9: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019aa: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ab: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ac: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ad: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ae: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019af: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019b0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019b1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019b3: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019b4: SHA3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019b5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019b6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019b7: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019b8: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019b9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ba: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019bb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019bc: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019be: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019bf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019c0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019c2: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019c3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019c4: DUP4                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019c5: GT                             // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019c6: PUSH2 0x19b6                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019c9: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ca: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019cb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019cc: SUB                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019cd: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019cf: AND                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d0: DUP3                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d1: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d2: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d3: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d4: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d5: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d6: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d7: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d8: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019d9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019da: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019db: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019dd: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019de: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019df: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019e1: ADD                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019e2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019e3: PUSH2 0x193f                   // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019e6: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019e7: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019e8: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019e9: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ea: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019eb: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ec: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ed: POP                            // lib/forge-std/src/StdInvariant.sol: 84:9-84:48 (2554-2593)
      000019ee: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      000019ef: JUMP                           // lib/forge-std/src/StdInvariant.sol: 83:5-85:6 (2459-2600)
      000019f0: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000019f1: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 38:44-38:48 (1282-1286)
      000019f2: PUSH1 0x8                      // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      000019f4: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      000019f5: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      000019f6: SLOAD                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      000019f7: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      000019f8: PUSH2 0x100                    // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      000019fb: EXP                            // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      000019fc: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      000019fd: DIV                            // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      000019fe: PUSH1 0xff                     // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001a00: AND                            // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001a01: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001a02: PUSH2 0x1a1b                   // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001a05: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001a06: PUSH1 0x8                      // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a08: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a09: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a0a: SLOAD                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a0b: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a0c: PUSH2 0x100                    // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a0f: EXP                            // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a10: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a11: DIV                            // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a12: PUSH1 0xff                     // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a14: AND                            // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001a15: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001a16: POP                            // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001a17: PUSH2 0x1b01                   // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001a1a: JUMP                           // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001a1b: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001a1c: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 42:71-42:72 (1428-1429)
      00001a1d: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:63-42:73 (1420-1430)
      00001a1e: SHL                            // lib/forge-std/src/StdAssertions.sol: 42:63-42:73 (1420-1430)
      00001a1f: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
      00001a40: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001a41: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001a42: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdAssertions.sol: 42:20-42:27 (1377-1384)
      00001a57: AND                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:27 (1377-1384)
      00001a58: PUSH4 0x667f9d70               // lib/forge-std/src/StdAssertions.sol: 42:20-42:27 (1377-1384)
      00001a5d: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
      00001a7e: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001a7f: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001a80: PUSH32 0x6661696c65640000000000000000000000000000000000000000000000000000 // lib/forge-std/src/StdAssertions.sol: 42:41-42:58 (1398-1415)
      00001aa1: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aa3: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aa4: DUP4                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aa5: PUSH4 0xffffffff               // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aaa: AND                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aab: PUSH1 0xe0                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aad: SHL                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aae: DUP2                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aaf: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ab0: PUSH1 0x4                      // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ab2: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ab3: PUSH2 0x1abd                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ab6: SWAP3                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ab7: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ab8: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ab9: PUSH2 0x2d29                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001abc: JUMP                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001abd: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001abe: PUSH1 0x20                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ac0: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ac2: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ac3: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ac4: DUP4                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ac5: SUB                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ac6: DUP2                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ac7: DUP7                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ac8: GAS                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ac9: STATICCALL                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aca: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001acb: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001acc: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001acd: PUSH2 0x1ad8                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad0: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad1: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad2: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad3: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad4: RETURNDATACOPY                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad5: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad6: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad7: REVERT                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad8: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ad9: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ada: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001adb: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001adc: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001add: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001adf: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ae0: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ae1: PUSH1 0x1f                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ae3: NOT                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ae4: PUSH1 0x1f                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ae6: DUP3                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ae7: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ae8: AND                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ae9: DUP3                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aea: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aeb: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aec: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aee: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001aef: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001af0: DUP2                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001af1: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001af2: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001af3: PUSH2 0x1afc                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001af6: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001af7: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001af8: PUSH2 0x2d7a                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001afb: JUMP                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001afc: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001afd: EQ                             // lib/forge-std/src/StdAssertions.sol: 42:20-42:73 (1377-1430)
      00001afe: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:73 (1377-1430)
      00001aff: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:13-42:73 (1370-1430)
      00001b00: POP                            // lib/forge-std/src/StdAssertions.sol: 42:13-42:73 (1370-1430)
      00001b01: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00001b02: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00001b03: JUMP                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
[001] 00001b04: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 51:5-57:6 (1887-2149)
[001] 00001b05: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001b26: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001b27: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001b28: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 52:9-52:22 (1936-1949)
[001] 00001b3d: AND                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:22 (1936-1949)
[001] 00001b3e: PUSH4 0x6447d56                // test/BaseSingletonPaymaster.t.sol: 52:9-52:22 (1936-1949)
[001] 00001b43: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b45: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b46: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b47: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b48: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b49: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b4c: EXP                            // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b4d: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b4e: DIV                            // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b4f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b64: AND                            // test/BaseSingletonPaymaster.t.sol: 52:23-52:37 (1950-1964)
[001] 00001b65: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b67: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b68: DUP3                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b69: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b6e: AND                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b6f: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b71: SHL                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b72: DUP2                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b73: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b74: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b76: ADD                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b77: PUSH2 0x1b80                   // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b7a: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b7b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b7c: PUSH2 0x2c6a                   // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b7f: JUMP                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b80: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b81: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b82: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b84: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b85: DUP1                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b86: DUP4                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b87: SUB                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b88: DUP2                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b89: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b8a: DUP8                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b8b: DUP1                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b8c: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b8d: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b8e: DUP1                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b8f: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b90: PUSH2 0x1b97                   // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b93: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001b94: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001b95: DUP1                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001b96: REVERT                         // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b97: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b98: POP                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b99: GAS                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b9a: CALL                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b9b: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b9c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b9d: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001b9e: PUSH2 0x1ba9                   // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001ba1: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001ba2: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001ba3: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001ba4: DUP1                           // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001ba5: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001ba6: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001ba7: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
      00001ba8: REVERT                         // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001ba9: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001baa: POP                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001bab: POP                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001bac: POP                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001bad: POP                            // test/BaseSingletonPaymaster.t.sol: 52:9-52:38 (1936-1965)
[001] 00001bae: PUSH2 0x1c65                   // test/BaseSingletonPaymaster.t.sol: 53:9-53:55 (1975-2021)
[001] 00001bb1: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bb3: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bb4: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bb5: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bb6: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bb7: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bba: EXP                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bbb: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bbc: DIV                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bbd: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bd2: AND                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:27 (1984-1993)
[001] 00001bd3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 53:18-53:36 (1984-2002)
[001] 00001be8: AND                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:36 (1984-2002)
[001] 00001be9: PUSH4 0x61d027b3               // test/BaseSingletonPaymaster.t.sol: 53:18-53:36 (1984-2002)
[001] 00001bee: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bf0: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bf1: DUP2                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bf2: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bf7: AND                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bf8: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bfa: SHL                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bfb: DUP2                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bfc: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bfd: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001bff: ADD                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c00: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c02: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c04: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c05: DUP1                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c06: DUP4                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c07: SUB                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c08: DUP2                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c09: DUP7                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c0a: GAS                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c0b: STATICCALL                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c0c: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c0d: DUP1                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c0e: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c0f: PUSH2 0x1c1a                   // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c12: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
      00001c13: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
      00001c14: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
      00001c15: DUP1                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
      00001c16: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
      00001c17: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
      00001c18: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
      00001c19: REVERT                         // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c1a: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c1b: POP                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c1c: POP                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c1d: POP                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c1e: POP                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c1f: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c21: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c22: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c23: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c25: NOT                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c26: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c28: DUP3                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c29: ADD                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c2a: AND                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c2b: DUP3                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c2c: ADD                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c2d: DUP1                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c2e: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c30: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c31: POP                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c32: DUP2                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c33: ADD                            // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c34: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c35: PUSH2 0x1c3e                   // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c38: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c39: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c3a: PUSH2 0x2c3f                   // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c3d: JUMP                           // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c3e: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 53:18-53:38 (1984-2004)
[001] 00001c3f: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c41: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c42: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c43: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c44: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c45: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c48: EXP                            // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c49: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c4a: DIV                            // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c4b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c60: AND                            // test/BaseSingletonPaymaster.t.sol: 53:40-53:54 (2006-2020)
[001] 00001c61: PUSH2 0x204f                   // test/BaseSingletonPaymaster.t.sol: 53:9-53:17 (1975-1983)
[001] 00001c64: JUMP                           // test/BaseSingletonPaymaster.t.sol: 53:9-53:55 (1975-2021)
[001] 00001c65: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 53:9-53:55 (1975-2021)
[001] 00001c66: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c68: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c69: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c6a: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c6b: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c6c: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c6f: EXP                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c70: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c71: DIV                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c72: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c87: AND                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:18 (2031-2040)
[001] 00001c88: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 54:9-54:30 (2031-2052)
[001] 00001c9d: AND                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:30 (2031-2052)
[001] 00001c9e: PUSH4 0xf0f44260               // test/BaseSingletonPaymaster.t.sol: 54:9-54:30 (2031-2052)
[001] 00001ca3: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001ca5: PUSH1 0x1                      // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001ca7: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001ca8: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001ca9: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001caa: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001cad: EXP                            // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001cae: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001caf: DIV                            // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001cb0: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001cc5: AND                            // test/BaseSingletonPaymaster.t.sol: 54:31-54:42 (2053-2064)
[001] 00001cc6: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cc8: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cc9: DUP3                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cca: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ccf: AND                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cd0: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cd2: SHL                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cd3: DUP2                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cd4: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cd5: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cd7: ADD                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cd8: PUSH2 0x1ce1                   // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cdb: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cdc: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cdd: PUSH2 0x2ca3                   // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ce0: JUMP                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ce1: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ce2: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ce3: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ce5: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ce6: DUP1                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ce7: DUP4                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ce8: SUB                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ce9: DUP2                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cea: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ceb: DUP8                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cec: DUP1                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001ced: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cee: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cef: DUP1                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cf0: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cf1: PUSH2 0x1cf8                   // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cf4: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001cf5: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001cf6: DUP1                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001cf7: REVERT                         // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cf8: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cf9: POP                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cfa: GAS                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cfb: CALL                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cfc: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cfd: DUP1                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cfe: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001cff: PUSH2 0x1d0a                   // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001d02: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001d03: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001d04: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001d05: DUP1                           // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001d06: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001d07: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001d08: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
      00001d09: REVERT                         // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001d0a: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001d0b: POP                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001d0c: POP                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001d0d: POP                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001d0e: POP                            // test/BaseSingletonPaymaster.t.sol: 54:9-54:43 (2031-2065)
[001] 00001d0f: PUSH2 0x1dc7                   // test/BaseSingletonPaymaster.t.sol: 55:9-55:52 (2075-2118)
[001] 00001d12: PUSH1 0x24                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d14: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d15: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d16: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d17: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d18: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d1b: EXP                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d1c: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d1d: DIV                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d1e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d33: AND                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:27 (2084-2093)
[001] 00001d34: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 55:18-55:36 (2084-2102)
[001] 00001d49: AND                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:36 (2084-2102)
[001] 00001d4a: PUSH4 0x61d027b3               // test/BaseSingletonPaymaster.t.sol: 55:18-55:36 (2084-2102)
[001] 00001d4f: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d51: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d52: DUP2                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d53: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d58: AND                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d59: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d5b: SHL                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d5c: DUP2                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d5d: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d5e: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d60: ADD                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d61: PUSH1 0x20                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d63: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d65: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d66: DUP1                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d67: DUP4                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d68: SUB                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d69: DUP2                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d6a: DUP7                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d6b: GAS                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d6c: STATICCALL                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d6d: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d6e: DUP1                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d6f: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d70: PUSH2 0x1d7b                   // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d73: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
      00001d74: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
      00001d75: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
      00001d76: DUP1                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
      00001d77: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
      00001d78: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
      00001d79: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
      00001d7a: REVERT                         // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d7b: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d7c: POP                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d7d: POP                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d7e: POP                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d7f: POP                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d80: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d82: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d83: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d84: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d86: NOT                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d87: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d89: DUP3                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d8a: ADD                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d8b: AND                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d8c: DUP3                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d8d: ADD                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d8e: DUP1                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d8f: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d91: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d92: POP                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d93: DUP2                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d94: ADD                            // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d95: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d96: PUSH2 0x1d9f                   // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d99: SWAP2                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d9a: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d9b: PUSH2 0x2c3f                   // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d9e: JUMP                           // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001d9f: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 55:18-55:38 (2084-2104)
[001] 00001da0: PUSH1 0x1f                     // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001da2: PUSH1 0x1                      // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001da4: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001da5: SLOAD                          // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001da6: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001da7: PUSH2 0x100                    // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001daa: EXP                            // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001dab: SWAP1                          // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001dac: DIV                            // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001dad: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001dc2: AND                            // test/BaseSingletonPaymaster.t.sol: 55:40-55:51 (2106-2117)
[001] 00001dc3: PUSH2 0x204f                   // test/BaseSingletonPaymaster.t.sol: 55:9-55:17 (2075-2083)
[001] 00001dc6: JUMP                           // test/BaseSingletonPaymaster.t.sol: 55:9-55:52 (2075-2118)
[001] 00001dc7: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 55:9-55:52 (2075-2118)
[001] 00001dc8: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001de9: PUSH0                          // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001dea: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001deb: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/BaseSingletonPaymaster.t.sol: 56:9-56:21 (2128-2140)
[001] 00001e00: AND                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:21 (2128-2140)
[001] 00001e01: PUSH4 0x90c5013b               // test/BaseSingletonPaymaster.t.sol: 56:9-56:21 (2128-2140)
[001] 00001e06: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e08: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e09: DUP2                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e0a: PUSH4 0xffffffff               // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e0f: AND                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e10: PUSH1 0xe0                     // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e12: SHL                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e13: DUP2                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e14: MSTORE                         // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e15: PUSH1 0x4                      // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e17: ADD                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e18: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e19: PUSH1 0x40                     // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e1b: MLOAD                          // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e1c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e1d: DUP4                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e1e: SUB                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e1f: DUP2                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e20: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e21: DUP8                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e22: DUP1                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e23: EXTCODESIZE                    // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e24: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e25: DUP1                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e26: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e27: PUSH2 0x1e2e                   // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e2a: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e2b: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e2c: DUP1                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e2d: REVERT                         // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e2e: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e2f: POP                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e30: GAS                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e31: CALL                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e32: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e33: DUP1                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e34: ISZERO                         // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e35: PUSH2 0x1e40                   // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e38: JUMPI                          // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e39: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e3a: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e3b: DUP1                           // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e3c: RETURNDATACOPY                 // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e3d: RETURNDATASIZE                 // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e3e: PUSH0                          // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
      00001e3f: REVERT                         // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e40: JUMPDEST                       // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e41: POP                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e42: POP                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e43: POP                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e44: POP                            // test/BaseSingletonPaymaster.t.sol: 56:9-56:23 (2128-2142)
[001] 00001e45: JUMP                           // test/BaseSingletonPaymaster.t.sol: 51:5-57:6 (1887-2149)
      00001e46: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00001e47: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 87:54-87:89 (2655-2690)
      00001e49: PUSH1 0x15                     // lib/forge-std/src/StdInvariant.sol: 88:30-88:48 (2723-2741)
      00001e4b: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e4c: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e4d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e4e: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e50: MUL                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e51: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e53: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e54: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e56: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e57: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e58: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e59: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e5a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e5c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e5d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e5e: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e5f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e60: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e61: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e62: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e63: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e64: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e66: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e67: DUP3                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e68: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e69: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e6a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e6b: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e6c: PUSH2 0x1ec7                   // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e6f: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e70: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e72: MUL                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e73: DUP3                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e74: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e75: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e76: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e77: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e78: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e79: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e7b: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e7c: SHA3                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e7d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e7e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e7f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e80: PUSH0                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e81: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e82: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e83: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e84: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e87: EXP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e88: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e89: DIV                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e8a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001e9f: AND                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ea0: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001eb5: AND                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001eb6: DUP2                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001eb7: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001eb8: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001eba: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ebb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ebc: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ebe: ADD                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ebf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ec0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ec1: DUP4                           // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ec2: GT                             // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ec3: PUSH2 0x1e7e                   // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ec6: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ec7: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ec8: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ec9: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001eca: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ecb: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ecc: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ecd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ece: POP                            // lib/forge-std/src/StdInvariant.sol: 88:9-88:48 (2702-2741)
      00001ecf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00001ed0: JUMP                           // lib/forge-std/src/StdInvariant.sol: 87:5-89:6 (2606-2748)
      00001ed1: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ed2: PUSH1 0x1f                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ed4: PUSH0                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ed5: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ed6: SLOAD                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ed7: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ed8: PUSH2 0x100                    // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001edb: EXP                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001edc: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001edd: DIV                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ede: PUSH1 0xff                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ee0: AND                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ee1: DUP2                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00001ee2: JUMP                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
[004] 00001ee3: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[004] 00001ee4: PUSH0                          // lib/forge-std/src/StdCheats.sol: 539:69-539:81 (20503-20515)
[004] 00001ee5: PUSH2 0x1eed                   // lib/forge-std/src/StdCheats.sol: 540:19-540:39 (20537-20557)
[004] 00001ee8: DUP3                           // lib/forge-std/src/StdCheats.sol: 540:34-540:38 (20552-20556)
[004] 00001ee9: PUSH2 0x1ef7                   // lib/forge-std/src/StdCheats.sol: 540:19-540:33 (20537-20551)
[004] 00001eec: JUMP                           // lib/forge-std/src/StdCheats.sol: 540:19-540:39 (20537-20557)
[004] 00001eed: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 540:19-540:39 (20537-20557)
[004] 00001eee: POP                            // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[004] 00001eef: DUP1                           // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[004] 00001ef0: SWAP2                          // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[004] 00001ef1: POP                            // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[004] 00001ef2: POP                            // lib/forge-std/src/StdCheats.sol: 540:9-540:39 (20527-20557)
[004] 00001ef3: SWAP2                          // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[004] 00001ef4: SWAP1                          // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[004] 00001ef5: POP                            // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[004] 00001ef6: JUMP                           // lib/forge-std/src/StdCheats.sol: 539:5-541:6 (20439-20564)
[012] 00001ef7: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[012] 00001ef8: PUSH0                          // lib/forge-std/src/StdCheats.sol: 532:75-532:87 (20228-20240)
[012] 00001ef9: DUP1                           // lib/forge-std/src/StdCheats.sol: 532:89-532:107 (20242-20260)
[012] 00001efa: DUP3                           // lib/forge-std/src/StdCheats.sol: 533:57-533:61 (20320-20324)
[012] 00001efb: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001efd: MLOAD                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001efe: PUSH1 0x20                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f00: ADD                            // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f01: PUSH2 0x1f0a                   // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f04: SWAP2                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f05: SWAP1                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f06: PUSH2 0x2ddf                   // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f09: JUMP                           // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f0a: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f0b: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f0d: MLOAD                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f0e: PUSH1 0x20                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f10: DUP2                           // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f11: DUP4                           // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f12: SUB                            // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f13: SUB                            // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f14: DUP2                           // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f15: MSTORE                         // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f16: SWAP1                          // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f17: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f19: MSTORE                         // lib/forge-std/src/StdCheats.sol: 533:40-533:62 (20303-20325)
[012] 00001f1a: DUP1                           // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[012] 00001f1b: MLOAD                          // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[012] 00001f1c: SWAP1                          // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[012] 00001f1d: PUSH1 0x20                     // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[012] 00001f1f: ADD                            // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[012] 00001f20: SHA3                           // lib/forge-std/src/StdCheats.sol: 533:30-533:63 (20293-20326)
[012] 00001f21: PUSH0                          // lib/forge-std/src/StdCheats.sol: 533:22-533:64 (20285-20327)
[012] 00001f22: SHR                            // lib/forge-std/src/StdCheats.sol: 533:22-533:64 (20285-20327)
[012] 00001f23: SWAP1                          // lib/forge-std/src/StdCheats.sol: 533:9-533:64 (20272-20327)
[012] 00001f24: POP                            // lib/forge-std/src/StdCheats.sol: 533:9-533:64 (20272-20327)
[012] 00001f25: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdCheats.sol: 11:57-11:85 (318-346)
[012] 00001f46: PUSH0                          // lib/forge-std/src/StdCheats.sol: 11:49-11:86 (310-347)
[012] 00001f47: SHR                            // lib/forge-std/src/StdCheats.sol: 11:49-11:86 (310-347)
[012] 00001f48: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdCheats.sol: 534:16-534:23 (20344-20351)
[012] 00001f5d: AND                            // lib/forge-std/src/StdCheats.sol: 534:16-534:23 (20344-20351)
[012] 00001f5e: PUSH4 0xffa18649               // lib/forge-std/src/StdCheats.sol: 534:16-534:23 (20344-20351)
[012] 00001f63: DUP3                           // lib/forge-std/src/StdCheats.sol: 534:24-534:34 (20352-20362)
[012] 00001f64: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f66: MLOAD                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f67: DUP3                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f68: PUSH4 0xffffffff               // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f6d: AND                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f6e: PUSH1 0xe0                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f70: SHL                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f71: DUP2                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f72: MSTORE                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f73: PUSH1 0x4                      // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f75: ADD                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f76: PUSH2 0x1f7f                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f79: SWAP2                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f7a: SWAP1                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f7b: PUSH2 0x2e04                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f7e: JUMP                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f7f: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f80: PUSH1 0x20                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f82: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f84: MLOAD                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f85: DUP1                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f86: DUP4                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f87: SUB                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f88: DUP2                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f89: DUP7                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f8a: GAS                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f8b: STATICCALL                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f8c: ISZERO                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f8d: DUP1                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f8e: ISZERO                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f8f: PUSH2 0x1f9a                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f92: JUMPI                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00001f93: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00001f94: PUSH0                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00001f95: DUP1                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00001f96: RETURNDATACOPY                 // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00001f97: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00001f98: PUSH0                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
      00001f99: REVERT                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f9a: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f9b: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f9c: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f9d: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f9e: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001f9f: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fa1: MLOAD                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fa2: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fa3: PUSH1 0x1f                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fa5: NOT                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fa6: PUSH1 0x1f                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fa8: DUP3                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fa9: ADD                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001faa: AND                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fab: DUP3                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fac: ADD                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fad: DUP1                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fae: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fb0: MSTORE                         // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fb1: POP                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fb2: DUP2                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fb3: ADD                            // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fb4: SWAP1                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fb5: PUSH2 0x1fbe                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fb8: SWAP2                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fb9: SWAP1                          // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fba: PUSH2 0x2c3f                   // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fbd: JUMP                           // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fbe: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 534:16-534:35 (20344-20363)
[012] 00001fbf: SWAP2                          // lib/forge-std/src/StdCheats.sol: 534:9-534:35 (20337-20363)
[012] 00001fc0: POP                            // lib/forge-std/src/StdCheats.sol: 534:9-534:35 (20337-20363)
[012] 00001fc1: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdCheats.sol: 11:57-11:85 (318-346)
[012] 00001fe2: PUSH0                          // lib/forge-std/src/StdCheats.sol: 11:49-11:86 (310-347)
[012] 00001fe3: SHR                            // lib/forge-std/src/StdCheats.sol: 11:49-11:86 (310-347)
[012] 00001fe4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdCheats.sol: 535:9-535:17 (20373-20381)
[012] 00001ff9: AND                            // lib/forge-std/src/StdCheats.sol: 535:9-535:17 (20373-20381)
[012] 00001ffa: PUSH4 0xc657c718               // lib/forge-std/src/StdCheats.sol: 535:9-535:17 (20373-20381)
[012] 00001fff: DUP4                           // lib/forge-std/src/StdCheats.sol: 535:18-535:22 (20382-20386)
[012] 00002000: DUP6                           // lib/forge-std/src/StdCheats.sol: 535:24-535:28 (20388-20392)
[012] 00002001: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002003: MLOAD                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002004: DUP4                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002005: PUSH4 0xffffffff               // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000200a: AND                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000200b: PUSH1 0xe0                     // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000200d: SHL                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000200e: DUP2                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000200f: MSTORE                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002010: PUSH1 0x4                      // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002012: ADD                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002013: PUSH2 0x201d                   // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002016: SWAP3                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002017: SWAP2                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002018: SWAP1                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002019: PUSH2 0x2e65                   // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000201c: JUMP                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000201d: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000201e: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000201f: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002021: MLOAD                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002022: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002023: DUP4                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002024: SUB                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002025: DUP2                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002026: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002027: DUP8                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002028: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002029: EXTCODESIZE                    // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000202a: ISZERO                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000202b: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000202c: ISZERO                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000202d: PUSH2 0x2034                   // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002030: JUMPI                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      00002031: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      00002032: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      00002033: REVERT                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002034: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002035: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002036: GAS                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002037: CALL                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002038: ISZERO                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002039: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000203a: ISZERO                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000203b: PUSH2 0x2046                   // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000203e: JUMPI                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      0000203f: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      00002040: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      00002041: DUP1                           // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      00002042: RETURNDATACOPY                 // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      00002043: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      00002044: PUSH0                          // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
      00002045: REVERT                         // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002046: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002047: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002048: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 00002049: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000204a: POP                            // lib/forge-std/src/StdCheats.sol: 535:9-535:29 (20373-20393)
[012] 0000204b: SWAP2                          // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[012] 0000204c: POP                            // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[012] 0000204d: SWAP2                          // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[012] 0000204e: JUMP                           // lib/forge-std/src/StdCheats.sol: 532:5-536:6 (20158-20400)
[005] 0000204f: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 107:5-109:6 (3454-3564)
[005] 00002050: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
[005] 00002071: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[005] 00002072: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[005] 00002073: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdAssertions.sol: 108:9-108:20 (3533-3544)
[005] 00002088: AND                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:20 (3533-3544)
[005] 00002089: PUSH4 0x515361f6               // lib/forge-std/src/StdAssertions.sol: 108:9-108:20 (3533-3544)
[005] 0000208e: DUP4                           // lib/forge-std/src/StdAssertions.sol: 108:21-108:25 (3545-3549)
[005] 0000208f: DUP4                           // lib/forge-std/src/StdAssertions.sol: 108:27-108:32 (3551-3556)
[005] 00002090: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 00002092: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 00002093: DUP4                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 00002094: PUSH4 0xffffffff               // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 00002099: AND                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 0000209a: PUSH1 0xe0                     // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 0000209c: SHL                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 0000209d: DUP2                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 0000209e: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 0000209f: PUSH1 0x4                      // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020a1: ADD                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020a2: PUSH2 0x20ac                   // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020a5: SWAP3                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020a6: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020a7: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020a8: PUSH2 0x2b2b                   // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020ab: JUMP                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020ac: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020ad: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020ae: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b0: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b1: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b2: DUP4                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b3: SUB                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b4: DUP2                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b5: DUP7                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b6: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b7: EXTCODESIZE                    // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b8: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020b9: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020ba: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020bb: PUSH2 0x20c2                   // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020be: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020bf: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020c0: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020c1: REVERT                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020c2: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020c3: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020c4: GAS                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020c5: STATICCALL                     // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020c6: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020c7: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020c8: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020c9: PUSH2 0x20d4                   // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020cc: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020cd: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020ce: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020cf: DUP1                           // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020d0: RETURNDATACOPY                 // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020d1: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020d2: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
      000020d3: REVERT                         // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020d4: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020d5: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020d6: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020d7: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020d8: POP                            // lib/forge-std/src/StdAssertions.sol: 108:9-108:33 (3533-3557)
[005] 000020d9: POP                            // lib/forge-std/src/StdAssertions.sol: 107:5-109:6 (3454-3564)
[005] 000020da: POP                            // lib/forge-std/src/StdAssertions.sol: 107:5-109:6 (3454-3564)
[005] 000020db: JUMP                           // lib/forge-std/src/StdAssertions.sol: 107:5-109:6 (3454-3564)
[002] 000020dc: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 59:5-61:6 (1808-1899)
[002] 000020dd: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
[002] 000020fe: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[002] 000020ff: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[002] 00002100: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdAssertions.sol: 60:9-60:23 (1872-1886)
[002] 00002115: AND                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:23 (1872-1886)
[002] 00002116: PUSH4 0xa5982885               // lib/forge-std/src/StdAssertions.sol: 60:9-60:23 (1872-1886)
[002] 0000211b: DUP3                           // lib/forge-std/src/StdAssertions.sol: 60:24-60:28 (1887-1891)
[002] 0000211c: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000211e: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000211f: DUP3                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002120: PUSH4 0xffffffff               // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002125: AND                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002126: PUSH1 0xe0                     // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002128: SHL                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002129: DUP2                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000212a: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000212b: PUSH1 0x4                      // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000212d: ADD                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000212e: PUSH2 0x2137                   // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002131: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002132: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002133: PUSH2 0x294d                   // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002136: JUMP                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002137: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002138: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002139: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000213b: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000213c: DUP1                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000213d: DUP4                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000213e: SUB                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000213f: DUP2                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002140: DUP7                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002141: DUP1                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002142: EXTCODESIZE                    // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002143: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002144: DUP1                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002145: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002146: PUSH2 0x214d                   // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002149: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      0000214a: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      0000214b: DUP1                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      0000214c: REVERT                         // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000214d: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000214e: POP                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000214f: GAS                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002150: STATICCALL                     // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002151: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002152: DUP1                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002153: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002154: PUSH2 0x215f                   // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002157: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      00002158: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      00002159: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      0000215a: DUP1                           // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      0000215b: RETURNDATACOPY                 // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      0000215c: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      0000215d: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
      0000215e: REVERT                         // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 0000215f: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002160: POP                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002161: POP                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002162: POP                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002163: POP                            // lib/forge-std/src/StdAssertions.sol: 60:9-60:29 (1872-1892)
[002] 00002164: POP                            // lib/forge-std/src/StdAssertions.sol: 59:5-61:6 (1808-1899)
[002] 00002165: JUMP                           // lib/forge-std/src/StdAssertions.sol: 59:5-61:6 (1808-1899)
[002] 00002166: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 51:5-53:6 (1594-1683)
[002] 00002167: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
[002] 00002188: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[002] 00002189: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[002] 0000218a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdAssertions.sol: 52:9-52:22 (1657-1670)
[002] 0000219f: AND                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:22 (1657-1670)
[002] 000021a0: PUSH4 0xc9fd581                // lib/forge-std/src/StdAssertions.sol: 52:9-52:22 (1657-1670)
[002] 000021a5: DUP3                           // lib/forge-std/src/StdAssertions.sol: 52:23-52:27 (1671-1675)
[002] 000021a6: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021a8: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021a9: DUP3                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021aa: PUSH4 0xffffffff               // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021af: AND                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021b0: PUSH1 0xe0                     // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021b2: SHL                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021b3: DUP2                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021b4: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021b5: PUSH1 0x4                      // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021b7: ADD                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021b8: PUSH2 0x21c1                   // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021bb: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021bc: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021bd: PUSH2 0x294d                   // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021c0: JUMP                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021c1: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021c2: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021c3: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021c5: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021c6: DUP1                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021c7: DUP4                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021c8: SUB                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021c9: DUP2                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021ca: DUP7                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021cb: DUP1                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021cc: EXTCODESIZE                    // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021cd: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021ce: DUP1                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021cf: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021d0: PUSH2 0x21d7                   // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021d3: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021d4: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021d5: DUP1                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021d6: REVERT                         // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021d7: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021d8: POP                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021d9: GAS                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021da: STATICCALL                     // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021db: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021dc: DUP1                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021dd: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021de: PUSH2 0x21e9                   // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021e1: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021e2: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021e3: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021e4: DUP1                           // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021e5: RETURNDATACOPY                 // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021e6: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021e7: PUSH0                          // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
      000021e8: REVERT                         // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021e9: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021ea: POP                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021eb: POP                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021ec: POP                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021ed: POP                            // lib/forge-std/src/StdAssertions.sol: 52:9-52:28 (1657-1676)
[002] 000021ee: POP                            // lib/forge-std/src/StdAssertions.sol: 51:5-53:6 (1594-1683)
[002] 000021ef: JUMP                           // lib/forge-std/src/StdAssertions.sol: 51:5-53:6 (1594-1683)
[004] 000021f0: JUMPDEST                      
[004] 000021f1: PUSH2 0x174f                  
[004] 000021f4: DUP1                          
[004] 000021f5: PUSH3 0x2e94                  
[004] 000021f9: DUP4                          
[004] 000021fa: CODECOPY                      
[004] 000021fb: ADD                           
[004] 000021fc: SWAP1                         
[004] 000021fd: JUMP                          
[004] 000021fe: JUMPDEST                      
[004] 000021ff: PUSH2 0x624                   
[004] 00002202: DUP1                          
[004] 00002203: PUSH3 0x45e3                  
[004] 00002207: DUP4                          
[004] 00002208: CODECOPY                      
[004] 00002209: ADD                           
[004] 0000220a: SWAP1                         
[004] 0000220b: JUMP                          
[004] 0000220c: JUMPDEST                      
[004] 0000220d: PUSH2 0x67db                  
[004] 00002210: DUP1                          
[004] 00002211: PUSH3 0x4c07                  
[004] 00002215: DUP4                          
[004] 00002216: CODECOPY                      
[004] 00002217: ADD                           
[004] 00002218: SWAP1                         
[004] 00002219: JUMP                          
[004] 0000221a: JUMPDEST                      
[004] 0000221b: PUSH2 0x3a74                  
[004] 0000221e: DUP1                          
[004] 0000221f: PUSH3 0xb3e2                  
[004] 00002223: DUP4                          
[004] 00002224: CODECOPY                      
[004] 00002225: ADD                           
[004] 00002226: SWAP1                         
[004] 00002227: JUMP                          
[004] 00002228: JUMPDEST                      
[004] 00002229: PUSH2 0x2c6c                  
[004] 0000222c: DUP1                          
[004] 0000222d: PUSH3 0xee56                  
[004] 00002231: DUP4                          
[004] 00002232: CODECOPY                      
[004] 00002233: ADD                           
[004] 00002234: SWAP1                         
[004] 00002235: JUMP                          
      00002236: JUMPDEST                       // SRCID115: (7-121)
      00002237: PUSH0                          // SRCID115: (74-80)
      00002238: DUP2                           // SRCID115: (108-113)
      00002239: MLOAD                          // SRCID115: (102-114)
      0000223a: SWAP1                          // SRCID115: (92-114)
      0000223b: POP                            // SRCID115: (92-114)
      0000223c: SWAP2                          // SRCID115: (7-121)
      0000223d: SWAP1                          // SRCID115: (7-121)
      0000223e: POP                            // SRCID115: (7-121)
      0000223f: JUMP                           // SRCID115: (7-121)
      00002240: JUMPDEST                       // SRCID115: (127-311)
      00002241: PUSH0                          // SRCID115: (226-237)
      00002242: DUP3                           // SRCID115: (260-266)
      00002243: DUP3                           // SRCID115: (255-258)
      00002244: MSTORE                         // SRCID115: (248-267)
      00002245: PUSH1 0x20                     // SRCID115: (300-304)
      00002247: DUP3                           // SRCID115: (295-298)
      00002248: ADD                            // SRCID115: (291-305)
      00002249: SWAP1                          // SRCID115: (276-305)
      0000224a: POP                            // SRCID115: (276-305)
      0000224b: SWAP3                          // SRCID115: (127-311)
      0000224c: SWAP2                          // SRCID115: (127-311)
      0000224d: POP                            // SRCID115: (127-311)
      0000224e: POP                            // SRCID115: (127-311)
      0000224f: JUMP                           // SRCID115: (127-311)
      00002250: JUMPDEST                       // SRCID115: (317-449)
      00002251: PUSH0                          // SRCID115: (384-388)
      00002252: DUP2                           // SRCID115: (407-410)
      00002253: SWAP1                          // SRCID115: (399-410)
      00002254: POP                            // SRCID115: (399-410)
      00002255: PUSH1 0x20                     // SRCID115: (437-441)
      00002257: DUP3                           // SRCID115: (432-435)
      00002258: ADD                            // SRCID115: (428-442)
      00002259: SWAP1                          // SRCID115: (420-442)
      0000225a: POP                            // SRCID115: (420-442)
      0000225b: SWAP2                          // SRCID115: (317-449)
      0000225c: SWAP1                          // SRCID115: (317-449)
      0000225d: POP                            // SRCID115: (317-449)
      0000225e: JUMP                           // SRCID115: (317-449)
[077] 0000225f: JUMPDEST                       // SRCID115: (455-581)
[077] 00002260: PUSH0                          // SRCID115: (492-499)
[077] 00002261: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // SRCID115: (532-574)
[077] 00002276: DUP3                           // SRCID115: (525-530)
[077] 00002277: AND                            // SRCID115: (521-575)
[077] 00002278: SWAP1                          // SRCID115: (510-575)
[077] 00002279: POP                            // SRCID115: (510-575)
[077] 0000227a: SWAP2                          // SRCID115: (455-581)
[077] 0000227b: SWAP1                          // SRCID115: (455-581)
[077] 0000227c: POP                            // SRCID115: (455-581)
[077] 0000227d: JUMP                           // SRCID115: (455-581)
[057] 0000227e: JUMPDEST                       // SRCID115: (587-683)
[057] 0000227f: PUSH0                          // SRCID115: (624-631)
[057] 00002280: PUSH2 0x2288                   // SRCID115: (653-677)
[057] 00002283: DUP3                           // SRCID115: (671-676)
[057] 00002284: PUSH2 0x225f                   // SRCID115: (653-677)
[057] 00002287: JUMP                           // SRCID115: (653-677)
[057] 00002288: JUMPDEST                       // SRCID115: (653-677)
[057] 00002289: SWAP1                          // SRCID115: (642-677)
[057] 0000228a: POP                            // SRCID115: (642-677)
[057] 0000228b: SWAP2                          // SRCID115: (587-683)
[057] 0000228c: SWAP1                          // SRCID115: (587-683)
[057] 0000228d: POP                            // SRCID115: (587-683)
[057] 0000228e: JUMP                           // SRCID115: (587-683)
      0000228f: JUMPDEST                       // SRCID115: (689-797)
      00002290: PUSH2 0x2298                   // SRCID115: (766-790)
      00002293: DUP2                           // SRCID115: (784-789)
      00002294: PUSH2 0x227e                   // SRCID115: (766-790)
      00002297: JUMP                           // SRCID115: (766-790)
      00002298: JUMPDEST                       // SRCID115: (766-790)
      00002299: DUP3                           // SRCID115: (761-764)
      0000229a: MSTORE                         // SRCID115: (754-791)
      0000229b: POP                            // SRCID115: (689-797)
      0000229c: POP                            // SRCID115: (689-797)
      0000229d: JUMP                           // SRCID115: (689-797)
      0000229e: JUMPDEST                       // SRCID115: (803-982)
      0000229f: PUSH0                          // SRCID115: (872-882)
      000022a0: PUSH2 0x22a9                   // SRCID115: (893-939)
      000022a3: DUP4                           // SRCID115: (935-938)
      000022a4: DUP4                           // SRCID115: (927-933)
      000022a5: PUSH2 0x228f                   // SRCID115: (893-939)
      000022a8: JUMP                           // SRCID115: (893-939)
      000022a9: JUMPDEST                       // SRCID115: (893-939)
      000022aa: PUSH1 0x20                     // SRCID115: (971-975)
      000022ac: DUP4                           // SRCID115: (966-969)
      000022ad: ADD                            // SRCID115: (962-976)
      000022ae: SWAP1                          // SRCID115: (948-976)
      000022af: POP                            // SRCID115: (948-976)
      000022b0: SWAP3                          // SRCID115: (803-982)
      000022b1: SWAP2                          // SRCID115: (803-982)
      000022b2: POP                            // SRCID115: (803-982)
      000022b3: POP                            // SRCID115: (803-982)
      000022b4: JUMP                           // SRCID115: (803-982)
      000022b5: JUMPDEST                       // SRCID115: (988-1101)
      000022b6: PUSH0                          // SRCID115: (1058-1062)
      000022b7: PUSH1 0x20                     // SRCID115: (1090-1094)
      000022b9: DUP3                           // SRCID115: (1085-1088)
      000022ba: ADD                            // SRCID115: (1081-1095)
      000022bb: SWAP1                          // SRCID115: (1073-1095)
      000022bc: POP                            // SRCID115: (1073-1095)
      000022bd: SWAP2                          // SRCID115: (988-1101)
      000022be: SWAP1                          // SRCID115: (988-1101)
      000022bf: POP                            // SRCID115: (988-1101)
      000022c0: JUMP                           // SRCID115: (988-1101)
      000022c1: JUMPDEST                       // SRCID115: (1137-1869)
      000022c2: PUSH0                          // SRCID115: (1256-1259)
      000022c3: PUSH2 0x22cb                   // SRCID115: (1285-1339)
      000022c6: DUP3                           // SRCID115: (1333-1338)
      000022c7: PUSH2 0x2236                   // SRCID115: (1285-1339)
      000022ca: JUMP                           // SRCID115: (1285-1339)
      000022cb: JUMPDEST                       // SRCID115: (1285-1339)
      000022cc: PUSH2 0x22d5                   // SRCID115: (1355-1441)
      000022cf: DUP2                           // SRCID115: (1434-1440)
      000022d0: DUP6                           // SRCID115: (1429-1432)
      000022d1: PUSH2 0x2240                   // SRCID115: (1355-1441)
      000022d4: JUMP                           // SRCID115: (1355-1441)
      000022d5: JUMPDEST                       // SRCID115: (1355-1441)
      000022d6: SWAP4                          // SRCID115: (1348-1441)
      000022d7: POP                            // SRCID115: (1348-1441)
      000022d8: PUSH2 0x22e0                   // SRCID115: (1465-1521)
      000022db: DUP4                           // SRCID115: (1515-1520)
      000022dc: PUSH2 0x2250                   // SRCID115: (1465-1521)
      000022df: JUMP                           // SRCID115: (1465-1521)
      000022e0: JUMPDEST                       // SRCID115: (1465-1521)
      000022e1: DUP1                           // SRCID115: (1544-1551)
      000022e2: PUSH0                          // SRCID115: (1575-1576)
      000022e3: JUMPDEST                       // SRCID115: (1560-1844)
      000022e4: DUP4                           // SRCID115: (1585-1591)
      000022e5: DUP2                           // SRCID115: (1582-1583)
      000022e6: LT                             // SRCID115: (1579-1592)
      000022e7: ISZERO                         // SRCID115: (1560-1844)
      000022e8: PUSH2 0x2310                   // SRCID115: (1560-1844)
      000022eb: JUMPI                          // SRCID115: (1560-1844)
      000022ec: DUP2                           // SRCID115: (1661-1667)
      000022ed: MLOAD                          // SRCID115: (1655-1668)
      000022ee: PUSH2 0x22f7                   // SRCID115: (1688-1751)
      000022f1: DUP9                           // SRCID115: (1747-1750)
      000022f2: DUP3                           // SRCID115: (1732-1745)
      000022f3: PUSH2 0x229e                   // SRCID115: (1688-1751)
      000022f6: JUMP                           // SRCID115: (1688-1751)
      000022f7: JUMPDEST                       // SRCID115: (1688-1751)
      000022f8: SWAP8                          // SRCID115: (1681-1751)
      000022f9: POP                            // SRCID115: (1681-1751)
      000022fa: PUSH2 0x2302                   // SRCID115: (1774-1834)
      000022fd: DUP4                           // SRCID115: (1827-1833)
      000022fe: PUSH2 0x22b5                   // SRCID115: (1774-1834)
      00002301: JUMP                           // SRCID115: (1774-1834)
      00002302: JUMPDEST                       // SRCID115: (1774-1834)
      00002303: SWAP3                          // SRCID115: (1764-1834)
      00002304: POP                            // SRCID115: (1764-1834)
      00002305: POP                            // SRCID115: (1620-1844)
      00002306: PUSH1 0x1                      // SRCID115: (1607-1608)
      00002308: DUP2                           // SRCID115: (1604-1605)
      00002309: ADD                            // SRCID115: (1600-1609)
      0000230a: SWAP1                          // SRCID115: (1595-1609)
      0000230b: POP                            // SRCID115: (1595-1609)
      0000230c: PUSH2 0x22e3                   // SRCID115: (1560-1844)
      0000230f: JUMP                           // SRCID115: (1560-1844)
      00002310: JUMPDEST                       // SRCID115: (1560-1844)
      00002311: POP                            // SRCID115: (1564-1578)
      00002312: DUP6                           // SRCID115: (1860-1863)
      00002313: SWAP4                          // SRCID115: (1853-1863)
      00002314: POP                            // SRCID115: (1853-1863)
      00002315: POP                            // SRCID115: (1261-1869)
      00002316: POP                            // SRCID115: (1261-1869)
      00002317: POP                            // SRCID115: (1261-1869)
      00002318: SWAP3                          // SRCID115: (1137-1869)
      00002319: SWAP2                          // SRCID115: (1137-1869)
      0000231a: POP                            // SRCID115: (1137-1869)
      0000231b: POP                            // SRCID115: (1137-1869)
      0000231c: JUMP                           // SRCID115: (1137-1869)
      0000231d: JUMPDEST                       // SRCID115: (1875-2248)
      0000231e: PUSH0                          // SRCID115: (2018-2022)
      0000231f: PUSH1 0x20                     // SRCID115: (2056-2058)
      00002321: DUP3                           // SRCID115: (2045-2054)
      00002322: ADD                            // SRCID115: (2041-2059)
      00002323: SWAP1                          // SRCID115: (2033-2059)
      00002324: POP                            // SRCID115: (2033-2059)
      00002325: DUP2                           // SRCID115: (2105-2114)
      00002326: DUP2                           // SRCID115: (2099-2103)
      00002327: SUB                            // SRCID115: (2095-2115)
      00002328: PUSH0                          // SRCID115: (2091-2092)
      00002329: DUP4                           // SRCID115: (2080-2089)
      0000232a: ADD                            // SRCID115: (2076-2093)
      0000232b: MSTORE                         // SRCID115: (2069-2116)
      0000232c: PUSH2 0x2335                   // SRCID115: (2133-2241)
      0000232f: DUP2                           // SRCID115: (2236-2240)
      00002330: DUP5                           // SRCID115: (2227-2233)
      00002331: PUSH2 0x22c1                   // SRCID115: (2133-2241)
      00002334: JUMP                           // SRCID115: (2133-2241)
      00002335: JUMPDEST                       // SRCID115: (2133-2241)
      00002336: SWAP1                          // SRCID115: (2125-2241)
      00002337: POP                            // SRCID115: (2125-2241)
      00002338: SWAP3                          // SRCID115: (1875-2248)
      00002339: SWAP2                          // SRCID115: (1875-2248)
      0000233a: POP                            // SRCID115: (1875-2248)
      0000233b: POP                            // SRCID115: (1875-2248)
      0000233c: JUMP                           // SRCID115: (1875-2248)
      0000233d: JUMPDEST                       // SRCID115: (2254-2399)
      0000233e: PUSH0                          // SRCID115: (2352-2358)
      0000233f: DUP2                           // SRCID115: (2386-2391)
      00002340: MLOAD                          // SRCID115: (2380-2392)
      00002341: SWAP1                          // SRCID115: (2370-2392)
      00002342: POP                            // SRCID115: (2370-2392)
      00002343: SWAP2                          // SRCID115: (2254-2399)
      00002344: SWAP1                          // SRCID115: (2254-2399)
      00002345: POP                            // SRCID115: (2254-2399)
      00002346: JUMP                           // SRCID115: (2254-2399)
      00002347: JUMPDEST                       // SRCID115: (2405-2620)
      00002348: PUSH0                          // SRCID115: (2535-2546)
      00002349: DUP3                           // SRCID115: (2569-2575)
      0000234a: DUP3                           // SRCID115: (2564-2567)
      0000234b: MSTORE                         // SRCID115: (2557-2576)
      0000234c: PUSH1 0x20                     // SRCID115: (2609-2613)
      0000234e: DUP3                           // SRCID115: (2604-2607)
      0000234f: ADD                            // SRCID115: (2600-2614)
      00002350: SWAP1                          // SRCID115: (2585-2614)
      00002351: POP                            // SRCID115: (2585-2614)
      00002352: SWAP3                          // SRCID115: (2405-2620)
      00002353: SWAP2                          // SRCID115: (2405-2620)
      00002354: POP                            // SRCID115: (2405-2620)
      00002355: POP                            // SRCID115: (2405-2620)
      00002356: JUMP                           // SRCID115: (2405-2620)
      00002357: JUMPDEST                       // SRCID115: (2626-2789)
      00002358: PUSH0                          // SRCID115: (2724-2728)
      00002359: DUP2                           // SRCID115: (2747-2750)
      0000235a: SWAP1                          // SRCID115: (2739-2750)
      0000235b: POP                            // SRCID115: (2739-2750)
      0000235c: PUSH1 0x20                     // SRCID115: (2777-2781)
      0000235e: DUP3                           // SRCID115: (2772-2775)
      0000235f: ADD                            // SRCID115: (2768-2782)
      00002360: SWAP1                          // SRCID115: (2760-2782)
      00002361: POP                            // SRCID115: (2760-2782)
      00002362: SWAP2                          // SRCID115: (2626-2789)
      00002363: SWAP1                          // SRCID115: (2626-2789)
      00002364: POP                            // SRCID115: (2626-2789)
      00002365: JUMP                           // SRCID115: (2626-2789)
      00002366: JUMPDEST                       // SRCID115: (2795-2919)
      00002367: PUSH0                          // SRCID115: (2872-2878)
      00002368: DUP2                           // SRCID115: (2906-2911)
      00002369: MLOAD                          // SRCID115: (2900-2912)
      0000236a: SWAP1                          // SRCID115: (2890-2912)
      0000236b: POP                            // SRCID115: (2890-2912)
      0000236c: SWAP2                          // SRCID115: (2795-2919)
      0000236d: SWAP1                          // SRCID115: (2795-2919)
      0000236e: POP                            // SRCID115: (2795-2919)
      0000236f: JUMP                           // SRCID115: (2795-2919)
      00002370: JUMPDEST                       // SRCID115: (2925-3109)
      00002371: PUSH0                          // SRCID115: (3024-3035)
      00002372: DUP3                           // SRCID115: (3058-3064)
      00002373: DUP3                           // SRCID115: (3053-3056)
      00002374: MSTORE                         // SRCID115: (3046-3065)
      00002375: PUSH1 0x20                     // SRCID115: (3098-3102)
      00002377: DUP3                           // SRCID115: (3093-3096)
      00002378: ADD                            // SRCID115: (3089-3103)
      00002379: SWAP1                          // SRCID115: (3074-3103)
      0000237a: POP                            // SRCID115: (3074-3103)
      0000237b: SWAP3                          // SRCID115: (2925-3109)
      0000237c: SWAP2                          // SRCID115: (2925-3109)
      0000237d: POP                            // SRCID115: (2925-3109)
      0000237e: POP                            // SRCID115: (2925-3109)
      0000237f: JUMP                           // SRCID115: (2925-3109)
      00002380: JUMPDEST                       // SRCID115: (3115-3257)
      00002381: PUSH0                          // SRCID115: (3192-3196)
      00002382: DUP2                           // SRCID115: (3215-3218)
      00002383: SWAP1                          // SRCID115: (3207-3218)
      00002384: POP                            // SRCID115: (3207-3218)
      00002385: PUSH1 0x20                     // SRCID115: (3245-3249)
      00002387: DUP3                           // SRCID115: (3240-3243)
      00002388: ADD                            // SRCID115: (3236-3250)
      00002389: SWAP1                          // SRCID115: (3228-3250)
      0000238a: POP                            // SRCID115: (3228-3250)
      0000238b: SWAP2                          // SRCID115: (3115-3257)
      0000238c: SWAP1                          // SRCID115: (3115-3257)
      0000238d: POP                            // SRCID115: (3115-3257)
      0000238e: JUMP                           // SRCID115: (3115-3257)
[024] 0000238f: JUMPDEST                       // SRCID115: (3263-3362)
[024] 00002390: PUSH0                          // SRCID115: (3315-3321)
[024] 00002391: DUP2                           // SRCID115: (3349-3354)
[024] 00002392: MLOAD                          // SRCID115: (3343-3355)
[024] 00002393: SWAP1                          // SRCID115: (3333-3355)
[024] 00002394: POP                            // SRCID115: (3333-3355)
[024] 00002395: SWAP2                          // SRCID115: (3263-3362)
[024] 00002396: SWAP1                          // SRCID115: (3263-3362)
[024] 00002397: POP                            // SRCID115: (3263-3362)
[024] 00002398: JUMP                           // SRCID115: (3263-3362)
      00002399: JUMPDEST                       // SRCID115: (3368-3527)
      0000239a: PUSH0                          // SRCID115: (3442-3453)
      0000239b: DUP3                           // SRCID115: (3476-3482)
      0000239c: DUP3                           // SRCID115: (3471-3474)
      0000239d: MSTORE                         // SRCID115: (3464-3483)
      0000239e: PUSH1 0x20                     // SRCID115: (3516-3520)
      000023a0: DUP3                           // SRCID115: (3511-3514)
      000023a1: ADD                            // SRCID115: (3507-3521)
      000023a2: SWAP1                          // SRCID115: (3492-3521)
      000023a3: POP                            // SRCID115: (3492-3521)
      000023a4: SWAP3                          // SRCID115: (3368-3527)
      000023a5: SWAP2                          // SRCID115: (3368-3527)
      000023a6: POP                            // SRCID115: (3368-3527)
      000023a7: POP                            // SRCID115: (3368-3527)
      000023a8: JUMP                           // SRCID115: (3368-3527)
[024] 000023a9: JUMPDEST                       // SRCID115: (3533-3672)
[024] 000023aa: DUP3                           // SRCID115: (3622-3628)
[024] 000023ab: DUP2                           // SRCID115: (3617-3620)
[024] 000023ac: DUP4                           // SRCID115: (3612-3615)
[024] 000023ad: MCOPY                          // SRCID115: (3606-3629)
[024] 000023ae: PUSH0                          // SRCID115: (3663-3664)
[024] 000023af: DUP4                           // SRCID115: (3654-3660)
[024] 000023b0: DUP4                           // SRCID115: (3649-3652)
[024] 000023b1: ADD                            // SRCID115: (3645-3661)
[024] 000023b2: MSTORE                         // SRCID115: (3638-3665)
[024] 000023b3: POP                            // SRCID115: (3533-3672)
[024] 000023b4: POP                            // SRCID115: (3533-3672)
[024] 000023b5: POP                            // SRCID115: (3533-3672)
[024] 000023b6: JUMP                           // SRCID115: (3533-3672)
[012] 000023b7: JUMPDEST                       // SRCID115: (3678-3780)
[012] 000023b8: PUSH0                          // SRCID115: (3719-3725)
[012] 000023b9: PUSH1 0x1f                     // SRCID115: (3770-3772)
[012] 000023bb: NOT                            // SRCID115: (3766-3773)
[012] 000023bc: PUSH1 0x1f                     // SRCID115: (3761-3763)
[012] 000023be: DUP4                           // SRCID115: (3754-3759)
[012] 000023bf: ADD                            // SRCID115: (3750-3764)
[012] 000023c0: AND                            // SRCID115: (3746-3774)
[012] 000023c1: SWAP1                          // SRCID115: (3736-3774)
[012] 000023c2: POP                            // SRCID115: (3736-3774)
[012] 000023c3: SWAP2                          // SRCID115: (3678-3780)
[012] 000023c4: SWAP1                          // SRCID115: (3678-3780)
[012] 000023c5: POP                            // SRCID115: (3678-3780)
[012] 000023c6: JUMP                           // SRCID115: (3678-3780)
      000023c7: JUMPDEST                       // SRCID115: (3786-4143)
      000023c8: PUSH0                          // SRCID115: (3864-3867)
      000023c9: PUSH2 0x23d1                   // SRCID115: (3892-3931)
      000023cc: DUP3                           // SRCID115: (3925-3930)
      000023cd: PUSH2 0x238f                   // SRCID115: (3892-3931)
      000023d0: JUMP                           // SRCID115: (3892-3931)
      000023d1: JUMPDEST                       // SRCID115: (3892-3931)
      000023d2: PUSH2 0x23db                   // SRCID115: (3947-4008)
      000023d5: DUP2                           // SRCID115: (4001-4007)
      000023d6: DUP6                           // SRCID115: (3996-3999)
      000023d7: PUSH2 0x2399                   // SRCID115: (3947-4008)
      000023da: JUMP                           // SRCID115: (3947-4008)
      000023db: JUMPDEST                       // SRCID115: (3947-4008)
      000023dc: SWAP4                          // SRCID115: (3940-4008)
      000023dd: POP                            // SRCID115: (3940-4008)
      000023de: PUSH2 0x23eb                   // SRCID115: (4017-4082)
      000023e1: DUP2                           // SRCID115: (4075-4081)
      000023e2: DUP6                           // SRCID115: (4070-4073)
      000023e3: PUSH1 0x20                     // SRCID115: (4063-4067)
      000023e5: DUP7                           // SRCID115: (4056-4061)
      000023e6: ADD                            // SRCID115: (4052-4068)
      000023e7: PUSH2 0x23a9                   // SRCID115: (4017-4082)
      000023ea: JUMP                           // SRCID115: (4017-4082)
      000023eb: JUMPDEST                       // SRCID115: (4017-4082)
      000023ec: PUSH2 0x23f4                   // SRCID115: (4107-4136)
      000023ef: DUP2                           // SRCID115: (4129-4135)
      000023f0: PUSH2 0x23b7                   // SRCID115: (4107-4136)
      000023f3: JUMP                           // SRCID115: (4107-4136)
      000023f4: JUMPDEST                       // SRCID115: (4107-4136)
      000023f5: DUP5                           // SRCID115: (4102-4105)
      000023f6: ADD                            // SRCID115: (4098-4137)
      000023f7: SWAP2                          // SRCID115: (4091-4137)
      000023f8: POP                            // SRCID115: (4091-4137)
      000023f9: POP                            // SRCID115: (3868-4143)
      000023fa: SWAP3                          // SRCID115: (3786-4143)
      000023fb: SWAP2                          // SRCID115: (3786-4143)
      000023fc: POP                            // SRCID115: (3786-4143)
      000023fd: POP                            // SRCID115: (3786-4143)
      000023fe: JUMP                           // SRCID115: (3786-4143)
      000023ff: JUMPDEST                       // SRCID115: (4149-4345)
      00002400: PUSH0                          // SRCID115: (4238-4248)
      00002401: PUSH2 0x240a                   // SRCID115: (4273-4339)
      00002404: DUP4                           // SRCID115: (4335-4338)
      00002405: DUP4                           // SRCID115: (4327-4333)
      00002406: PUSH2 0x23c7                   // SRCID115: (4273-4339)
      00002409: JUMP                           // SRCID115: (4273-4339)
      0000240a: JUMPDEST                       // SRCID115: (4273-4339)
      0000240b: SWAP1                          // SRCID115: (4259-4339)
      0000240c: POP                            // SRCID115: (4259-4339)
      0000240d: SWAP3                          // SRCID115: (4149-4345)
      0000240e: SWAP2                          // SRCID115: (4149-4345)
      0000240f: POP                            // SRCID115: (4149-4345)
      00002410: POP                            // SRCID115: (4149-4345)
      00002411: JUMP                           // SRCID115: (4149-4345)
      00002412: JUMPDEST                       // SRCID115: (4351-4474)
      00002413: PUSH0                          // SRCID115: (4431-4435)
      00002414: PUSH1 0x20                     // SRCID115: (4463-4467)
      00002416: DUP3                           // SRCID115: (4458-4461)
      00002417: ADD                            // SRCID115: (4454-4468)
      00002418: SWAP1                          // SRCID115: (4446-4468)
      00002419: POP                            // SRCID115: (4446-4468)
      0000241a: SWAP2                          // SRCID115: (4351-4474)
      0000241b: SWAP1                          // SRCID115: (4351-4474)
      0000241c: POP                            // SRCID115: (4351-4474)
      0000241d: JUMP                           // SRCID115: (4351-4474)
      0000241e: JUMPDEST                       // SRCID115: (4508-5479)
      0000241f: PUSH0                          // SRCID115: (4637-4640)
      00002420: PUSH2 0x2428                   // SRCID115: (4666-4730)
      00002423: DUP3                           // SRCID115: (4724-4729)
      00002424: PUSH2 0x2366                   // SRCID115: (4666-4730)
      00002427: JUMP                           // SRCID115: (4666-4730)
      00002428: JUMPDEST                       // SRCID115: (4666-4730)
      00002429: PUSH2 0x2432                   // SRCID115: (4746-4832)
      0000242c: DUP2                           // SRCID115: (4825-4831)
      0000242d: DUP6                           // SRCID115: (4820-4823)
      0000242e: PUSH2 0x2370                   // SRCID115: (4746-4832)
      00002431: JUMP                           // SRCID115: (4746-4832)
      00002432: JUMPDEST                       // SRCID115: (4746-4832)
      00002433: SWAP4                          // SRCID115: (4739-4832)
      00002434: POP                            // SRCID115: (4739-4832)
      00002435: DUP4                           // SRCID115: (4858-4861)
      00002436: PUSH1 0x20                     // SRCID115: (4903-4907)
      00002438: DUP3                           // SRCID115: (4895-4901)
      00002439: MUL                            // SRCID115: (4891-4908)
      0000243a: DUP6                           // SRCID115: (4886-4889)
      0000243b: ADD                            // SRCID115: (4882-4909)
      0000243c: PUSH2 0x2444                   // SRCID115: (4933-4999)
      0000243f: DUP6                           // SRCID115: (4993-4998)
      00002440: PUSH2 0x2380                   // SRCID115: (4933-4999)
      00002443: JUMP                           // SRCID115: (4933-4999)
      00002444: JUMPDEST                       // SRCID115: (4933-4999)
      00002445: DUP1                           // SRCID115: (5022-5029)
      00002446: PUSH0                          // SRCID115: (5053-5054)
      00002447: JUMPDEST                       // SRCID115: (5038-5434)
      00002448: DUP6                           // SRCID115: (5063-5069)
      00002449: DUP2                           // SRCID115: (5060-5061)
      0000244a: LT                             // SRCID115: (5057-5070)
      0000244b: ISZERO                         // SRCID115: (5038-5434)
      0000244c: PUSH2 0x247f                   // SRCID115: (5038-5434)
      0000244f: JUMPI                          // SRCID115: (5038-5434)
      00002450: DUP5                           // SRCID115: (5134-5143)
      00002451: DUP5                           // SRCID115: (5128-5132)
      00002452: SUB                            // SRCID115: (5124-5144)
      00002453: DUP10                          // SRCID115: (5119-5122)
      00002454: MSTORE                         // SRCID115: (5112-5145)
      00002455: DUP2                           // SRCID115: (5185-5191)
      00002456: MLOAD                          // SRCID115: (5179-5192)
      00002457: PUSH2 0x2460                   // SRCID115: (5213-5297)
      0000245a: DUP6                           // SRCID115: (5292-5296)
      0000245b: DUP3                           // SRCID115: (5277-5290)
      0000245c: PUSH2 0x23ff                   // SRCID115: (5213-5297)
      0000245f: JUMP                           // SRCID115: (5213-5297)
      00002460: JUMPDEST                       // SRCID115: (5213-5297)
      00002461: SWAP5                          // SRCID115: (5205-5297)
      00002462: POP                            // SRCID115: (5205-5297)
      00002463: PUSH2 0x246b                   // SRCID115: (5320-5390)
      00002466: DUP4                           // SRCID115: (5383-5389)
      00002467: PUSH2 0x2412                   // SRCID115: (5320-5390)
      0000246a: JUMP                           // SRCID115: (5320-5390)
      0000246b: JUMPDEST                       // SRCID115: (5320-5390)
      0000246c: SWAP3                          // SRCID115: (5310-5390)
      0000246d: POP                            // SRCID115: (5310-5390)
      0000246e: PUSH1 0x20                     // SRCID115: (5419-5423)
      00002470: DUP11                          // SRCID115: (5414-5417)
      00002471: ADD                            // SRCID115: (5410-5424)
      00002472: SWAP10                         // SRCID115: (5403-5424)
      00002473: POP                            // SRCID115: (5403-5424)
      00002474: POP                            // SRCID115: (5098-5434)
      00002475: PUSH1 0x1                      // SRCID115: (5085-5086)
      00002477: DUP2                           // SRCID115: (5082-5083)
      00002478: ADD                            // SRCID115: (5078-5087)
      00002479: SWAP1                          // SRCID115: (5073-5087)
      0000247a: POP                            // SRCID115: (5073-5087)
      0000247b: PUSH2 0x2447                   // SRCID115: (5038-5434)
      0000247e: JUMP                           // SRCID115: (5038-5434)
      0000247f: JUMPDEST                       // SRCID115: (5038-5434)
      00002480: POP                            // SRCID115: (5042-5056)
      00002481: DUP3                           // SRCID115: (5450-5454)
      00002482: SWAP8                          // SRCID115: (5443-5454)
      00002483: POP                            // SRCID115: (5443-5454)
      00002484: DUP8                           // SRCID115: (5470-5473)
      00002485: SWAP6                          // SRCID115: (5463-5473)
      00002486: POP                            // SRCID115: (5463-5473)
      00002487: POP                            // SRCID115: (4642-5479)
      00002488: POP                            // SRCID115: (4642-5479)
      00002489: POP                            // SRCID115: (4642-5479)
      0000248a: POP                            // SRCID115: (4642-5479)
      0000248b: POP                            // SRCID115: (4642-5479)
      0000248c: SWAP3                          // SRCID115: (4508-5479)
      0000248d: SWAP2                          // SRCID115: (4508-5479)
      0000248e: POP                            // SRCID115: (4508-5479)
      0000248f: POP                            // SRCID115: (4508-5479)
      00002490: JUMP                           // SRCID115: (4508-5479)
      00002491: JUMPDEST                       // SRCID115: (5563-6226)
      00002492: PUSH0                          // SRCID115: (5684-5687)
      00002493: PUSH1 0x40                     // SRCID115: (5720-5724)
      00002495: DUP4                           // SRCID115: (5715-5718)
      00002496: ADD                            // SRCID115: (5711-5725)
      00002497: PUSH0                          // SRCID115: (5807-5811)
      00002498: DUP4                           // SRCID115: (5800-5805)
      00002499: ADD                            // SRCID115: (5796-5812)
      0000249a: MLOAD                          // SRCID115: (5790-5813)
      0000249b: PUSH2 0x24a6                   // SRCID115: (5826-5889)
      0000249e: PUSH0                          // SRCID115: (5883-5887)
      0000249f: DUP7                           // SRCID115: (5878-5881)
      000024a0: ADD                            // SRCID115: (5874-5888)
      000024a1: DUP3                           // SRCID115: (5860-5872)
      000024a2: PUSH2 0x228f                   // SRCID115: (5826-5889)
      000024a5: JUMP                           // SRCID115: (5826-5889)
      000024a6: JUMPDEST                       // SRCID115: (5826-5889)
      000024a7: POP                            // SRCID115: (5735-5899)
      000024a8: PUSH1 0x20                     // SRCID115: (5986-5990)
      000024aa: DUP4                           // SRCID115: (5979-5984)
      000024ab: ADD                            // SRCID115: (5975-5991)
      000024ac: MLOAD                          // SRCID115: (5969-5992)
      000024ad: DUP5                           // SRCID115: (6039-6042)
      000024ae: DUP3                           // SRCID115: (6033-6037)
      000024af: SUB                            // SRCID115: (6029-6043)
      000024b0: PUSH1 0x20                     // SRCID115: (6022-6026)
      000024b2: DUP7                           // SRCID115: (6017-6020)
      000024b3: ADD                            // SRCID115: (6013-6027)
      000024b4: MSTORE                         // SRCID115: (6006-6044)
      000024b5: PUSH2 0x24be                   // SRCID115: (6065-6188)
      000024b8: DUP3                           // SRCID115: (6183-6187)
      000024b9: DUP3                           // SRCID115: (6169-6181)
      000024ba: PUSH2 0x241e                   // SRCID115: (6065-6188)
      000024bd: JUMP                           // SRCID115: (6065-6188)
      000024be: JUMPDEST                       // SRCID115: (6065-6188)
      000024bf: SWAP2                          // SRCID115: (6057-6188)
      000024c0: POP                            // SRCID115: (6057-6188)
      000024c1: POP                            // SRCID115: (5909-6199)
      000024c2: DUP1                           // SRCID115: (6216-6220)
      000024c3: SWAP2                          // SRCID115: (6209-6220)
      000024c4: POP                            // SRCID115: (6209-6220)
      000024c5: POP                            // SRCID115: (5689-6226)
      000024c6: SWAP3                          // SRCID115: (5563-6226)
      000024c7: SWAP2                          // SRCID115: (5563-6226)
      000024c8: POP                            // SRCID115: (5563-6226)
      000024c9: POP                            // SRCID115: (5563-6226)
      000024ca: JUMP                           // SRCID115: (5563-6226)
      000024cb: JUMPDEST                       // SRCID115: (6232-6512)
      000024cc: PUSH0                          // SRCID115: (6363-6373)
      000024cd: PUSH2 0x24d6                   // SRCID115: (6398-6506)
      000024d0: DUP4                           // SRCID115: (6502-6505)
      000024d1: DUP4                           // SRCID115: (6494-6500)
      000024d2: PUSH2 0x2491                   // SRCID115: (6398-6506)
      000024d5: JUMP                           // SRCID115: (6398-6506)
      000024d6: JUMPDEST                       // SRCID115: (6398-6506)
      000024d7: SWAP1                          // SRCID115: (6384-6506)
      000024d8: POP                            // SRCID115: (6384-6506)
      000024d9: SWAP3                          // SRCID115: (6232-6512)
      000024da: SWAP2                          // SRCID115: (6232-6512)
      000024db: POP                            // SRCID115: (6232-6512)
      000024dc: POP                            // SRCID115: (6232-6512)
      000024dd: JUMP                           // SRCID115: (6232-6512)
      000024de: JUMPDEST                       // SRCID115: (6518-6662)
      000024df: PUSH0                          // SRCID115: (6619-6623)
      000024e0: PUSH1 0x20                     // SRCID115: (6651-6655)
      000024e2: DUP3                           // SRCID115: (6646-6649)
      000024e3: ADD                            // SRCID115: (6642-6656)
      000024e4: SWAP1                          // SRCID115: (6634-6656)
      000024e5: POP                            // SRCID115: (6634-6656)
      000024e6: SWAP2                          // SRCID115: (6518-6662)
      000024e7: SWAP1                          // SRCID115: (6518-6662)
      000024e8: POP                            // SRCID115: (6518-6662)
      000024e9: JUMP                           // SRCID115: (6518-6662)
      000024ea: JUMPDEST                       // SRCID115: (6750-7909)
      000024eb: PUSH0                          // SRCID115: (6931-6934)
      000024ec: PUSH2 0x24f4                   // SRCID115: (6960-7045)
      000024ef: DUP3                           // SRCID115: (7039-7044)
      000024f0: PUSH2 0x233d                   // SRCID115: (6960-7045)
      000024f3: JUMP                           // SRCID115: (6960-7045)
      000024f4: JUMPDEST                       // SRCID115: (6960-7045)
      000024f5: PUSH2 0x24fe                   // SRCID115: (7061-7178)
      000024f8: DUP2                           // SRCID115: (7171-7177)
      000024f9: DUP6                           // SRCID115: (7166-7169)
      000024fa: PUSH2 0x2347                   // SRCID115: (7061-7178)
      000024fd: JUMP                           // SRCID115: (7061-7178)
      000024fe: JUMPDEST                       // SRCID115: (7061-7178)
      000024ff: SWAP4                          // SRCID115: (7054-7178)
      00002500: POP                            // SRCID115: (7054-7178)
      00002501: DUP4                           // SRCID115: (7204-7207)
      00002502: PUSH1 0x20                     // SRCID115: (7249-7253)
      00002504: DUP3                           // SRCID115: (7241-7247)
      00002505: MUL                            // SRCID115: (7237-7254)
      00002506: DUP6                           // SRCID115: (7232-7235)
      00002507: ADD                            // SRCID115: (7228-7255)
      00002508: PUSH2 0x2510                   // SRCID115: (7279-7366)
      0000250b: DUP6                           // SRCID115: (7360-7365)
      0000250c: PUSH2 0x2357                   // SRCID115: (7279-7366)
      0000250f: JUMP                           // SRCID115: (7279-7366)
      00002510: JUMPDEST                       // SRCID115: (7279-7366)
      00002511: DUP1                           // SRCID115: (7389-7396)
      00002512: PUSH0                          // SRCID115: (7420-7421)
      00002513: JUMPDEST                       // SRCID115: (7405-7864)
      00002514: DUP6                           // SRCID115: (7430-7436)
      00002515: DUP2                           // SRCID115: (7427-7428)
      00002516: LT                             // SRCID115: (7424-7437)
      00002517: ISZERO                         // SRCID115: (7405-7864)
      00002518: PUSH2 0x254b                   // SRCID115: (7405-7864)
      0000251b: JUMPI                          // SRCID115: (7405-7864)
      0000251c: DUP5                           // SRCID115: (7501-7510)
      0000251d: DUP5                           // SRCID115: (7495-7499)
      0000251e: SUB                            // SRCID115: (7491-7511)
      0000251f: DUP10                          // SRCID115: (7486-7489)
      00002520: MSTORE                         // SRCID115: (7479-7512)
      00002521: DUP2                           // SRCID115: (7552-7558)
      00002522: MLOAD                          // SRCID115: (7546-7559)
      00002523: PUSH2 0x252c                   // SRCID115: (7580-7706)
      00002526: DUP6                           // SRCID115: (7701-7705)
      00002527: DUP3                           // SRCID115: (7686-7699)
      00002528: PUSH2 0x24cb                   // SRCID115: (7580-7706)
      0000252b: JUMP                           // SRCID115: (7580-7706)
      0000252c: JUMPDEST                       // SRCID115: (7580-7706)
      0000252d: SWAP5                          // SRCID115: (7572-7706)
      0000252e: POP                            // SRCID115: (7572-7706)
      0000252f: PUSH2 0x2537                   // SRCID115: (7729-7820)
      00002532: DUP4                           // SRCID115: (7813-7819)
      00002533: PUSH2 0x24de                   // SRCID115: (7729-7820)
      00002536: JUMP                           // SRCID115: (7729-7820)
      00002537: JUMPDEST                       // SRCID115: (7729-7820)
      00002538: SWAP3                          // SRCID115: (7719-7820)
      00002539: POP                            // SRCID115: (7719-7820)
      0000253a: PUSH1 0x20                     // SRCID115: (7849-7853)
      0000253c: DUP11                          // SRCID115: (7844-7847)
      0000253d: ADD                            // SRCID115: (7840-7854)
      0000253e: SWAP10                         // SRCID115: (7833-7854)
      0000253f: POP                            // SRCID115: (7833-7854)
      00002540: POP                            // SRCID115: (7465-7864)
      00002541: PUSH1 0x1                      // SRCID115: (7452-7453)
      00002543: DUP2                           // SRCID115: (7449-7450)
      00002544: ADD                            // SRCID115: (7445-7454)
      00002545: SWAP1                          // SRCID115: (7440-7454)
      00002546: POP                            // SRCID115: (7440-7454)
      00002547: PUSH2 0x2513                   // SRCID115: (7405-7864)
      0000254a: JUMP                           // SRCID115: (7405-7864)
      0000254b: JUMPDEST                       // SRCID115: (7405-7864)
      0000254c: POP                            // SRCID115: (7409-7423)
      0000254d: DUP3                           // SRCID115: (7880-7884)
      0000254e: SWAP8                          // SRCID115: (7873-7884)
      0000254f: POP                            // SRCID115: (7873-7884)
      00002550: DUP8                           // SRCID115: (7900-7903)
      00002551: SWAP6                          // SRCID115: (7893-7903)
      00002552: POP                            // SRCID115: (7893-7903)
      00002553: POP                            // SRCID115: (6936-7909)
      00002554: POP                            // SRCID115: (6936-7909)
      00002555: POP                            // SRCID115: (6936-7909)
      00002556: POP                            // SRCID115: (6936-7909)
      00002557: POP                            // SRCID115: (6936-7909)
      00002558: SWAP3                          // SRCID115: (6750-7909)
      00002559: SWAP2                          // SRCID115: (6750-7909)
      0000255a: POP                            // SRCID115: (6750-7909)
      0000255b: POP                            // SRCID115: (6750-7909)
      0000255c: JUMP                           // SRCID115: (6750-7909)
      0000255d: JUMPDEST                       // SRCID115: (7915-8412)
      0000255e: PUSH0                          // SRCID115: (8120-8124)
      0000255f: PUSH1 0x20                     // SRCID115: (8158-8160)
      00002561: DUP3                           // SRCID115: (8147-8156)
      00002562: ADD                            // SRCID115: (8143-8161)
      00002563: SWAP1                          // SRCID115: (8135-8161)
      00002564: POP                            // SRCID115: (8135-8161)
      00002565: DUP2                           // SRCID115: (8207-8216)
      00002566: DUP2                           // SRCID115: (8201-8205)
      00002567: SUB                            // SRCID115: (8197-8217)
      00002568: PUSH0                          // SRCID115: (8193-8194)
      00002569: DUP4                           // SRCID115: (8182-8191)
      0000256a: ADD                            // SRCID115: (8178-8195)
      0000256b: MSTORE                         // SRCID115: (8171-8218)
      0000256c: PUSH2 0x2575                   // SRCID115: (8235-8405)
      0000256f: DUP2                           // SRCID115: (8400-8404)
      00002570: DUP5                           // SRCID115: (8391-8397)
      00002571: PUSH2 0x24ea                   // SRCID115: (8235-8405)
      00002574: JUMP                           // SRCID115: (8235-8405)
      00002575: JUMPDEST                       // SRCID115: (8235-8405)
      00002576: SWAP1                          // SRCID115: (8227-8405)
      00002577: POP                            // SRCID115: (8227-8405)
      00002578: SWAP3                          // SRCID115: (7915-8412)
      00002579: SWAP2                          // SRCID115: (7915-8412)
      0000257a: POP                            // SRCID115: (7915-8412)
      0000257b: POP                            // SRCID115: (7915-8412)
      0000257c: JUMP                           // SRCID115: (7915-8412)
      0000257d: JUMPDEST                       // SRCID115: (8418-8570)
      0000257e: PUSH0                          // SRCID115: (8523-8529)
      0000257f: DUP2                           // SRCID115: (8557-8562)
      00002580: MLOAD                          // SRCID115: (8551-8563)
      00002581: SWAP1                          // SRCID115: (8541-8563)
      00002582: POP                            // SRCID115: (8541-8563)
      00002583: SWAP2                          // SRCID115: (8418-8570)
      00002584: SWAP1                          // SRCID115: (8418-8570)
      00002585: POP                            // SRCID115: (8418-8570)
      00002586: JUMP                           // SRCID115: (8418-8570)
      00002587: JUMPDEST                       // SRCID115: (8576-8798)
      00002588: PUSH0                          // SRCID115: (8713-8724)
      00002589: DUP3                           // SRCID115: (8747-8753)
      0000258a: DUP3                           // SRCID115: (8742-8745)
      0000258b: MSTORE                         // SRCID115: (8735-8754)
      0000258c: PUSH1 0x20                     // SRCID115: (8787-8791)
      0000258e: DUP3                           // SRCID115: (8782-8785)
      0000258f: ADD                            // SRCID115: (8778-8792)
      00002590: SWAP1                          // SRCID115: (8763-8792)
      00002591: POP                            // SRCID115: (8763-8792)
      00002592: SWAP3                          // SRCID115: (8576-8798)
      00002593: SWAP2                          // SRCID115: (8576-8798)
      00002594: POP                            // SRCID115: (8576-8798)
      00002595: POP                            // SRCID115: (8576-8798)
      00002596: JUMP                           // SRCID115: (8576-8798)
      00002597: JUMPDEST                       // SRCID115: (8804-8974)
      00002598: PUSH0                          // SRCID115: (8909-8913)
      00002599: DUP2                           // SRCID115: (8932-8935)
      0000259a: SWAP1                          // SRCID115: (8924-8935)
      0000259b: POP                            // SRCID115: (8924-8935)
      0000259c: PUSH1 0x20                     // SRCID115: (8962-8966)
      0000259e: DUP3                           // SRCID115: (8957-8960)
      0000259f: ADD                            // SRCID115: (8953-8967)
      000025a0: SWAP1                          // SRCID115: (8945-8967)
      000025a1: POP                            // SRCID115: (8945-8967)
      000025a2: SWAP2                          // SRCID115: (8804-8974)
      000025a3: SWAP1                          // SRCID115: (8804-8974)
      000025a4: POP                            // SRCID115: (8804-8974)
      000025a5: JUMP                           // SRCID115: (8804-8974)
      000025a6: JUMPDEST                       // SRCID115: (8980-9093)
      000025a7: PUSH0                          // SRCID115: (9046-9052)
      000025a8: DUP2                           // SRCID115: (9080-9085)
      000025a9: MLOAD                          // SRCID115: (9074-9086)
      000025aa: SWAP1                          // SRCID115: (9064-9086)
      000025ab: POP                            // SRCID115: (9064-9086)
      000025ac: SWAP2                          // SRCID115: (8980-9093)
      000025ad: SWAP1                          // SRCID115: (8980-9093)
      000025ae: POP                            // SRCID115: (8980-9093)
      000025af: JUMP                           // SRCID115: (8980-9093)
      000025b0: JUMPDEST                       // SRCID115: (9099-9272)
      000025b1: PUSH0                          // SRCID115: (9187-9198)
      000025b2: DUP3                           // SRCID115: (9221-9227)
      000025b3: DUP3                           // SRCID115: (9216-9219)
      000025b4: MSTORE                         // SRCID115: (9209-9228)
      000025b5: PUSH1 0x20                     // SRCID115: (9261-9265)
      000025b7: DUP3                           // SRCID115: (9256-9259)
      000025b8: ADD                            // SRCID115: (9252-9266)
      000025b9: SWAP1                          // SRCID115: (9237-9266)
      000025ba: POP                            // SRCID115: (9237-9266)
      000025bb: SWAP3                          // SRCID115: (9099-9272)
      000025bc: SWAP2                          // SRCID115: (9099-9272)
      000025bd: POP                            // SRCID115: (9099-9272)
      000025be: POP                            // SRCID115: (9099-9272)
      000025bf: JUMP                           // SRCID115: (9099-9272)
      000025c0: JUMPDEST                       // SRCID115: (9278-9409)
      000025c1: PUSH0                          // SRCID115: (9344-9348)
      000025c2: DUP2                           // SRCID115: (9367-9370)
      000025c3: SWAP1                          // SRCID115: (9359-9370)
      000025c4: POP                            // SRCID115: (9359-9370)
      000025c5: PUSH1 0x20                     // SRCID115: (9397-9401)
      000025c7: DUP3                           // SRCID115: (9392-9395)
      000025c8: ADD                            // SRCID115: (9388-9402)
      000025c9: SWAP1                          // SRCID115: (9380-9402)
      000025ca: POP                            // SRCID115: (9380-9402)
      000025cb: SWAP2                          // SRCID115: (9278-9409)
      000025cc: SWAP1                          // SRCID115: (9278-9409)
      000025cd: POP                            // SRCID115: (9278-9409)
      000025ce: JUMP                           // SRCID115: (9278-9409)
      000025cf: JUMPDEST                       // SRCID115: (9415-9564)
      000025d0: PUSH0                          // SRCID115: (9451-9458)
      000025d1: PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000 // SRCID115: (9491-9557)
      000025f2: DUP3                           // SRCID115: (9484-9489)
      000025f3: AND                            // SRCID115: (9480-9558)
      000025f4: SWAP1                          // SRCID115: (9469-9558)
      000025f5: POP                            // SRCID115: (9469-9558)
      000025f6: SWAP2                          // SRCID115: (9415-9564)
      000025f7: SWAP1                          // SRCID115: (9415-9564)
      000025f8: POP                            // SRCID115: (9415-9564)
      000025f9: JUMP                           // SRCID115: (9415-9564)
      000025fa: JUMPDEST                       // SRCID115: (9570-9675)
      000025fb: PUSH2 0x2603                   // SRCID115: (9645-9668)
      000025fe: DUP2                           // SRCID115: (9662-9667)
      000025ff: PUSH2 0x25cf                   // SRCID115: (9645-9668)
      00002602: JUMP                           // SRCID115: (9645-9668)
      00002603: JUMPDEST                       // SRCID115: (9645-9668)
      00002604: DUP3                           // SRCID115: (9640-9643)
      00002605: MSTORE                         // SRCID115: (9633-9669)
      00002606: POP                            // SRCID115: (9570-9675)
      00002607: POP                            // SRCID115: (9570-9675)
      00002608: JUMP                           // SRCID115: (9570-9675)
      00002609: JUMPDEST                       // SRCID115: (9681-9856)
      0000260a: PUSH0                          // SRCID115: (9748-9758)
      0000260b: PUSH2 0x2614                   // SRCID115: (9769-9813)
      0000260e: DUP4                           // SRCID115: (9809-9812)
      0000260f: DUP4                           // SRCID115: (9801-9807)
      00002610: PUSH2 0x25fa                   // SRCID115: (9769-9813)
      00002613: JUMP                           // SRCID115: (9769-9813)
      00002614: JUMPDEST                       // SRCID115: (9769-9813)
      00002615: PUSH1 0x20                     // SRCID115: (9845-9849)
      00002617: DUP4                           // SRCID115: (9840-9843)
      00002618: ADD                            // SRCID115: (9836-9850)
      00002619: SWAP1                          // SRCID115: (9822-9850)
      0000261a: POP                            // SRCID115: (9822-9850)
      0000261b: SWAP3                          // SRCID115: (9681-9856)
      0000261c: SWAP2                          // SRCID115: (9681-9856)
      0000261d: POP                            // SRCID115: (9681-9856)
      0000261e: POP                            // SRCID115: (9681-9856)
      0000261f: JUMP                           // SRCID115: (9681-9856)
      00002620: JUMPDEST                       // SRCID115: (9862-9974)
      00002621: PUSH0                          // SRCID115: (9931-9935)
      00002622: PUSH1 0x20                     // SRCID115: (9963-9967)
      00002624: DUP3                           // SRCID115: (9958-9961)
      00002625: ADD                            // SRCID115: (9954-9968)
      00002626: SWAP1                          // SRCID115: (9946-9968)
      00002627: POP                            // SRCID115: (9946-9968)
      00002628: SWAP2                          // SRCID115: (9862-9974)
      00002629: SWAP1                          // SRCID115: (9862-9974)
      0000262a: POP                            // SRCID115: (9862-9974)
      0000262b: JUMP                           // SRCID115: (9862-9974)
      0000262c: JUMPDEST                       // SRCID115: (10008-10712)
      0000262d: PUSH0                          // SRCID115: (10115-10118)
      0000262e: PUSH2 0x2636                   // SRCID115: (10144-10197)
      00002631: DUP3                           // SRCID115: (10191-10196)
      00002632: PUSH2 0x25a6                   // SRCID115: (10144-10197)
      00002635: JUMP                           // SRCID115: (10144-10197)
      00002636: JUMPDEST                       // SRCID115: (10144-10197)
      00002637: PUSH2 0x2640                   // SRCID115: (10213-10288)
      0000263a: DUP2                           // SRCID115: (10281-10287)
      0000263b: DUP6                           // SRCID115: (10276-10279)
      0000263c: PUSH2 0x25b0                   // SRCID115: (10213-10288)
      0000263f: JUMP                           // SRCID115: (10213-10288)
      00002640: JUMPDEST                       // SRCID115: (10213-10288)
      00002641: SWAP4                          // SRCID115: (10206-10288)
      00002642: POP                            // SRCID115: (10206-10288)
      00002643: PUSH2 0x264b                   // SRCID115: (10312-10367)
      00002646: DUP4                           // SRCID115: (10361-10366)
      00002647: PUSH2 0x25c0                   // SRCID115: (10312-10367)
      0000264a: JUMP                           // SRCID115: (10312-10367)
      0000264b: JUMPDEST                       // SRCID115: (10312-10367)
      0000264c: DUP1                           // SRCID115: (10390-10397)
      0000264d: PUSH0                          // SRCID115: (10421-10422)
      0000264e: JUMPDEST                       // SRCID115: (10406-10687)
      0000264f: DUP4                           // SRCID115: (10431-10437)
      00002650: DUP2                           // SRCID115: (10428-10429)
      00002651: LT                             // SRCID115: (10425-10438)
      00002652: ISZERO                         // SRCID115: (10406-10687)
      00002653: PUSH2 0x267b                   // SRCID115: (10406-10687)
      00002656: JUMPI                          // SRCID115: (10406-10687)
      00002657: DUP2                           // SRCID115: (10507-10513)
      00002658: MLOAD                          // SRCID115: (10501-10514)
      00002659: PUSH2 0x2662                   // SRCID115: (10534-10595)
      0000265c: DUP9                           // SRCID115: (10591-10594)
      0000265d: DUP3                           // SRCID115: (10576-10589)
      0000265e: PUSH2 0x2609                   // SRCID115: (10534-10595)
      00002661: JUMP                           // SRCID115: (10534-10595)
      00002662: JUMPDEST                       // SRCID115: (10534-10595)
      00002663: SWAP8                          // SRCID115: (10527-10595)
      00002664: POP                            // SRCID115: (10527-10595)
      00002665: PUSH2 0x266d                   // SRCID115: (10618-10677)
      00002668: DUP4                           // SRCID115: (10670-10676)
      00002669: PUSH2 0x2620                   // SRCID115: (10618-10677)
      0000266c: JUMP                           // SRCID115: (10618-10677)
      0000266d: JUMPDEST                       // SRCID115: (10618-10677)
      0000266e: SWAP3                          // SRCID115: (10608-10677)
      0000266f: POP                            // SRCID115: (10608-10677)
      00002670: POP                            // SRCID115: (10466-10687)
      00002671: PUSH1 0x1                      // SRCID115: (10453-10454)
      00002673: DUP2                           // SRCID115: (10450-10451)
      00002674: ADD                            // SRCID115: (10446-10455)
      00002675: SWAP1                          // SRCID115: (10441-10455)
      00002676: POP                            // SRCID115: (10441-10455)
      00002677: PUSH2 0x264e                   // SRCID115: (10406-10687)
      0000267a: JUMP                           // SRCID115: (10406-10687)
      0000267b: JUMPDEST                       // SRCID115: (10406-10687)
      0000267c: POP                            // SRCID115: (10410-10424)
      0000267d: DUP6                           // SRCID115: (10703-10706)
      0000267e: SWAP4                          // SRCID115: (10696-10706)
      0000267f: POP                            // SRCID115: (10696-10706)
      00002680: POP                            // SRCID115: (10120-10712)
      00002681: POP                            // SRCID115: (10120-10712)
      00002682: POP                            // SRCID115: (10120-10712)
      00002683: SWAP3                          // SRCID115: (10008-10712)
      00002684: SWAP2                          // SRCID115: (10008-10712)
      00002685: POP                            // SRCID115: (10008-10712)
      00002686: POP                            // SRCID115: (10008-10712)
      00002687: JUMP                           // SRCID115: (10008-10712)
      00002688: JUMPDEST                       // SRCID115: (10810-11540)
      00002689: PUSH0                          // SRCID115: (10945-10948)
      0000268a: PUSH1 0x40                     // SRCID115: (10981-10985)
      0000268c: DUP4                           // SRCID115: (10976-10979)
      0000268d: ADD                            // SRCID115: (10972-10986)
      0000268e: PUSH0                          // SRCID115: (11072-11076)
      0000268f: DUP4                           // SRCID115: (11065-11070)
      00002690: ADD                            // SRCID115: (11061-11077)
      00002691: MLOAD                          // SRCID115: (11055-11078)
      00002692: DUP5                           // SRCID115: (11125-11128)
      00002693: DUP3                           // SRCID115: (11119-11123)
      00002694: SUB                            // SRCID115: (11115-11129)
      00002695: PUSH0                          // SRCID115: (11108-11112)
      00002696: DUP7                           // SRCID115: (11103-11106)
      00002697: ADD                            // SRCID115: (11099-11113)
      00002698: MSTORE                         // SRCID115: (11092-11130)
      00002699: PUSH2 0x26a2                   // SRCID115: (11151-11224)
      0000269c: DUP3                           // SRCID115: (11219-11223)
      0000269d: DUP3                           // SRCID115: (11205-11217)
      0000269e: PUSH2 0x23c7                   // SRCID115: (11151-11224)
      000026a1: JUMP                           // SRCID115: (11151-11224)
      000026a2: JUMPDEST                       // SRCID115: (11151-11224)
      000026a3: SWAP2                          // SRCID115: (11143-11224)
      000026a4: POP                            // SRCID115: (11143-11224)
      000026a5: POP                            // SRCID115: (10996-11235)
      000026a6: PUSH1 0x20                     // SRCID115: (11322-11326)
      000026a8: DUP4                           // SRCID115: (11315-11320)
      000026a9: ADD                            // SRCID115: (11311-11327)
      000026aa: MLOAD                          // SRCID115: (11305-11328)
      000026ab: DUP5                           // SRCID115: (11375-11378)
      000026ac: DUP3                           // SRCID115: (11369-11373)
      000026ad: SUB                            // SRCID115: (11365-11379)
      000026ae: PUSH1 0x20                     // SRCID115: (11358-11362)
      000026b0: DUP7                           // SRCID115: (11353-11356)
      000026b1: ADD                            // SRCID115: (11349-11363)
      000026b2: MSTORE                         // SRCID115: (11342-11380)
      000026b3: PUSH2 0x26bc                   // SRCID115: (11401-11502)
      000026b6: DUP3                           // SRCID115: (11497-11501)
      000026b7: DUP3                           // SRCID115: (11483-11495)
      000026b8: PUSH2 0x262c                   // SRCID115: (11401-11502)
      000026bb: JUMP                           // SRCID115: (11401-11502)
      000026bc: JUMPDEST                       // SRCID115: (11401-11502)
      000026bd: SWAP2                          // SRCID115: (11393-11502)
      000026be: POP                            // SRCID115: (11393-11502)
      000026bf: POP                            // SRCID115: (11245-11513)
      000026c0: DUP1                           // SRCID115: (11530-11534)
      000026c1: SWAP2                          // SRCID115: (11523-11534)
      000026c2: POP                            // SRCID115: (11523-11534)
      000026c3: POP                            // SRCID115: (10950-11540)
      000026c4: SWAP3                          // SRCID115: (10810-11540)
      000026c5: SWAP2                          // SRCID115: (10810-11540)
      000026c6: POP                            // SRCID115: (10810-11540)
      000026c7: POP                            // SRCID115: (10810-11540)
      000026c8: JUMP                           // SRCID115: (10810-11540)
      000026c9: JUMPDEST                       // SRCID115: (11546-11854)
      000026ca: PUSH0                          // SRCID115: (11691-11701)
      000026cb: PUSH2 0x26d4                   // SRCID115: (11726-11848)
      000026ce: DUP4                           // SRCID115: (11844-11847)
      000026cf: DUP4                           // SRCID115: (11836-11842)
      000026d0: PUSH2 0x2688                   // SRCID115: (11726-11848)
      000026d3: JUMP                           // SRCID115: (11726-11848)
      000026d4: JUMPDEST                       // SRCID115: (11726-11848)
      000026d5: SWAP1                          // SRCID115: (11712-11848)
      000026d6: POP                            // SRCID115: (11712-11848)
      000026d7: SWAP3                          // SRCID115: (11546-11854)
      000026d8: SWAP2                          // SRCID115: (11546-11854)
      000026d9: POP                            // SRCID115: (11546-11854)
      000026da: POP                            // SRCID115: (11546-11854)
      000026db: JUMP                           // SRCID115: (11546-11854)
      000026dc: JUMPDEST                       // SRCID115: (11860-12011)
      000026dd: PUSH0                          // SRCID115: (11968-11972)
      000026de: PUSH1 0x20                     // SRCID115: (12000-12004)
      000026e0: DUP3                           // SRCID115: (11995-11998)
      000026e1: ADD                            // SRCID115: (11991-12005)
      000026e2: SWAP1                          // SRCID115: (11983-12005)
      000026e3: POP                            // SRCID115: (11983-12005)
      000026e4: SWAP2                          // SRCID115: (11860-12011)
      000026e5: SWAP1                          // SRCID115: (11860-12011)
      000026e6: POP                            // SRCID115: (11860-12011)
      000026e7: JUMP                           // SRCID115: (11860-12011)
      000026e8: JUMPDEST                       // SRCID115: (12113-13328)
      000026e9: PUSH0                          // SRCID115: (12308-12311)
      000026ea: PUSH2 0x26f2                   // SRCID115: (12337-12429)
      000026ed: DUP3                           // SRCID115: (12423-12428)
      000026ee: PUSH2 0x257d                   // SRCID115: (12337-12429)
      000026f1: JUMP                           // SRCID115: (12337-12429)
      000026f2: JUMPDEST                       // SRCID115: (12337-12429)
      000026f3: PUSH2 0x26fc                   // SRCID115: (12445-12569)
      000026f6: DUP2                           // SRCID115: (12562-12568)
      000026f7: DUP6                           // SRCID115: (12557-12560)
      000026f8: PUSH2 0x2587                   // SRCID115: (12445-12569)
      000026fb: JUMP                           // SRCID115: (12445-12569)
      000026fc: JUMPDEST                       // SRCID115: (12445-12569)
      000026fd: SWAP4                          // SRCID115: (12438-12569)
      000026fe: POP                            // SRCID115: (12438-12569)
      000026ff: DUP4                           // SRCID115: (12595-12598)
      00002700: PUSH1 0x20                     // SRCID115: (12640-12644)
      00002702: DUP3                           // SRCID115: (12632-12638)
      00002703: MUL                            // SRCID115: (12628-12645)
      00002704: DUP6                           // SRCID115: (12623-12626)
      00002705: ADD                            // SRCID115: (12619-12646)
      00002706: PUSH2 0x270e                   // SRCID115: (12670-12764)
      00002709: DUP6                           // SRCID115: (12758-12763)
      0000270a: PUSH2 0x2597                   // SRCID115: (12670-12764)
      0000270d: JUMP                           // SRCID115: (12670-12764)
      0000270e: JUMPDEST                       // SRCID115: (12670-12764)
      0000270f: DUP1                           // SRCID115: (12787-12794)
      00002710: PUSH0                          // SRCID115: (12818-12819)
      00002711: JUMPDEST                       // SRCID115: (12803-13283)
      00002712: DUP6                           // SRCID115: (12828-12834)
      00002713: DUP2                           // SRCID115: (12825-12826)
      00002714: LT                             // SRCID115: (12822-12835)
      00002715: ISZERO                         // SRCID115: (12803-13283)
      00002716: PUSH2 0x2749                   // SRCID115: (12803-13283)
      00002719: JUMPI                          // SRCID115: (12803-13283)
      0000271a: DUP5                           // SRCID115: (12899-12908)
      0000271b: DUP5                           // SRCID115: (12893-12897)
      0000271c: SUB                            // SRCID115: (12889-12909)
      0000271d: DUP10                          // SRCID115: (12884-12887)
      0000271e: MSTORE                         // SRCID115: (12877-12910)
      0000271f: DUP2                           // SRCID115: (12950-12956)
      00002720: MLOAD                          // SRCID115: (12944-12957)
      00002721: PUSH2 0x272a                   // SRCID115: (12978-13118)
      00002724: DUP6                           // SRCID115: (13113-13117)
      00002725: DUP3                           // SRCID115: (13098-13111)
      00002726: PUSH2 0x26c9                   // SRCID115: (12978-13118)
      00002729: JUMP                           // SRCID115: (12978-13118)
      0000272a: JUMPDEST                       // SRCID115: (12978-13118)
      0000272b: SWAP5                          // SRCID115: (12970-13118)
      0000272c: POP                            // SRCID115: (12970-13118)
      0000272d: PUSH2 0x2735                   // SRCID115: (13141-13239)
      00002730: DUP4                           // SRCID115: (13232-13238)
      00002731: PUSH2 0x26dc                   // SRCID115: (13141-13239)
      00002734: JUMP                           // SRCID115: (13141-13239)
      00002735: JUMPDEST                       // SRCID115: (13141-13239)
      00002736: SWAP3                          // SRCID115: (13131-13239)
      00002737: POP                            // SRCID115: (13131-13239)
      00002738: PUSH1 0x20                     // SRCID115: (13268-13272)
      0000273a: DUP11                          // SRCID115: (13263-13266)
      0000273b: ADD                            // SRCID115: (13259-13273)
      0000273c: SWAP10                         // SRCID115: (13252-13273)
      0000273d: POP                            // SRCID115: (13252-13273)
      0000273e: POP                            // SRCID115: (12863-13283)
      0000273f: PUSH1 0x1                      // SRCID115: (12850-12851)
      00002741: DUP2                           // SRCID115: (12847-12848)
      00002742: ADD                            // SRCID115: (12843-12852)
      00002743: SWAP1                          // SRCID115: (12838-12852)
      00002744: POP                            // SRCID115: (12838-12852)
      00002745: PUSH2 0x2711                   // SRCID115: (12803-13283)
      00002748: JUMP                           // SRCID115: (12803-13283)
      00002749: JUMPDEST                       // SRCID115: (12803-13283)
      0000274a: POP                            // SRCID115: (12807-12821)
      0000274b: DUP3                           // SRCID115: (13299-13303)
      0000274c: SWAP8                          // SRCID115: (13292-13303)
      0000274d: POP                            // SRCID115: (13292-13303)
      0000274e: DUP8                           // SRCID115: (13319-13322)
      0000274f: SWAP6                          // SRCID115: (13312-13322)
      00002750: POP                            // SRCID115: (13312-13322)
      00002751: POP                            // SRCID115: (12313-13328)
      00002752: POP                            // SRCID115: (12313-13328)
      00002753: POP                            // SRCID115: (12313-13328)
      00002754: POP                            // SRCID115: (12313-13328)
      00002755: POP                            // SRCID115: (12313-13328)
      00002756: SWAP3                          // SRCID115: (12113-13328)
      00002757: SWAP2                          // SRCID115: (12113-13328)
      00002758: POP                            // SRCID115: (12113-13328)
      00002759: POP                            // SRCID115: (12113-13328)
      0000275a: JUMP                           // SRCID115: (12113-13328)
      0000275b: JUMPDEST                       // SRCID115: (13334-13859)
      0000275c: PUSH0                          // SRCID115: (13553-13557)
      0000275d: PUSH1 0x20                     // SRCID115: (13591-13593)
      0000275f: DUP3                           // SRCID115: (13580-13589)
      00002760: ADD                            // SRCID115: (13576-13594)
      00002761: SWAP1                          // SRCID115: (13568-13594)
      00002762: POP                            // SRCID115: (13568-13594)
      00002763: DUP2                           // SRCID115: (13640-13649)
      00002764: DUP2                           // SRCID115: (13634-13638)
      00002765: SUB                            // SRCID115: (13630-13650)
      00002766: PUSH0                          // SRCID115: (13626-13627)
      00002767: DUP4                           // SRCID115: (13615-13624)
      00002768: ADD                            // SRCID115: (13611-13628)
      00002769: MSTORE                         // SRCID115: (13604-13651)
      0000276a: PUSH2 0x2773                   // SRCID115: (13668-13852)
      0000276d: DUP2                           // SRCID115: (13847-13851)
      0000276e: DUP5                           // SRCID115: (13838-13844)
      0000276f: PUSH2 0x26e8                   // SRCID115: (13668-13852)
      00002772: JUMP                           // SRCID115: (13668-13852)
      00002773: JUMPDEST                       // SRCID115: (13668-13852)
      00002774: SWAP1                          // SRCID115: (13660-13852)
      00002775: POP                            // SRCID115: (13660-13852)
      00002776: SWAP3                          // SRCID115: (13334-13859)
      00002777: SWAP2                          // SRCID115: (13334-13859)
      00002778: POP                            // SRCID115: (13334-13859)
      00002779: POP                            // SRCID115: (13334-13859)
      0000277a: JUMP                           // SRCID115: (13334-13859)
      0000277b: JUMPDEST                       // SRCID115: (13865-14059)
      0000277c: PUSH0                          // SRCID115: (13974-13985)
      0000277d: DUP3                           // SRCID115: (14008-14014)
      0000277e: DUP3                           // SRCID115: (14003-14006)
      0000277f: MSTORE                         // SRCID115: (13996-14015)
      00002780: PUSH1 0x20                     // SRCID115: (14048-14052)
      00002782: DUP3                           // SRCID115: (14043-14046)
      00002783: ADD                            // SRCID115: (14039-14053)
      00002784: SWAP1                          // SRCID115: (14024-14053)
      00002785: POP                            // SRCID115: (14024-14053)
      00002786: SWAP3                          // SRCID115: (13865-14059)
      00002787: SWAP2                          // SRCID115: (13865-14059)
      00002788: POP                            // SRCID115: (13865-14059)
      00002789: POP                            // SRCID115: (13865-14059)
      0000278a: JUMP                           // SRCID115: (13865-14059)
      0000278b: JUMPDEST                       // SRCID115: (14093-15084)
      0000278c: PUSH0                          // SRCID115: (14232-14235)
      0000278d: PUSH2 0x2795                   // SRCID115: (14261-14325)
      00002790: DUP3                           // SRCID115: (14319-14324)
      00002791: PUSH2 0x2366                   // SRCID115: (14261-14325)
      00002794: JUMP                           // SRCID115: (14261-14325)
      00002795: JUMPDEST                       // SRCID115: (14261-14325)
      00002796: PUSH2 0x279f                   // SRCID115: (14341-14437)
      00002799: DUP2                           // SRCID115: (14430-14436)
      0000279a: DUP6                           // SRCID115: (14425-14428)
      0000279b: PUSH2 0x277b                   // SRCID115: (14341-14437)
      0000279e: JUMP                           // SRCID115: (14341-14437)
      0000279f: JUMPDEST                       // SRCID115: (14341-14437)
      000027a0: SWAP4                          // SRCID115: (14334-14437)
      000027a1: POP                            // SRCID115: (14334-14437)
      000027a2: DUP4                           // SRCID115: (14463-14466)
      000027a3: PUSH1 0x20                     // SRCID115: (14508-14512)
      000027a5: DUP3                           // SRCID115: (14500-14506)
      000027a6: MUL                            // SRCID115: (14496-14513)
      000027a7: DUP6                           // SRCID115: (14491-14494)
      000027a8: ADD                            // SRCID115: (14487-14514)
      000027a9: PUSH2 0x27b1                   // SRCID115: (14538-14604)
      000027ac: DUP6                           // SRCID115: (14598-14603)
      000027ad: PUSH2 0x2380                   // SRCID115: (14538-14604)
      000027b0: JUMP                           // SRCID115: (14538-14604)
      000027b1: JUMPDEST                       // SRCID115: (14538-14604)
      000027b2: DUP1                           // SRCID115: (14627-14634)
      000027b3: PUSH0                          // SRCID115: (14658-14659)
      000027b4: JUMPDEST                       // SRCID115: (14643-15039)
      000027b5: DUP6                           // SRCID115: (14668-14674)
      000027b6: DUP2                           // SRCID115: (14665-14666)
      000027b7: LT                             // SRCID115: (14662-14675)
      000027b8: ISZERO                         // SRCID115: (14643-15039)
      000027b9: PUSH2 0x27ec                   // SRCID115: (14643-15039)
      000027bc: JUMPI                          // SRCID115: (14643-15039)
      000027bd: DUP5                           // SRCID115: (14739-14748)
      000027be: DUP5                           // SRCID115: (14733-14737)
      000027bf: SUB                            // SRCID115: (14729-14749)
      000027c0: DUP10                          // SRCID115: (14724-14727)
      000027c1: MSTORE                         // SRCID115: (14717-14750)
      000027c2: DUP2                           // SRCID115: (14790-14796)
      000027c3: MLOAD                          // SRCID115: (14784-14797)
      000027c4: PUSH2 0x27cd                   // SRCID115: (14818-14902)
      000027c7: DUP6                           // SRCID115: (14897-14901)
      000027c8: DUP3                           // SRCID115: (14882-14895)
      000027c9: PUSH2 0x23ff                   // SRCID115: (14818-14902)
      000027cc: JUMP                           // SRCID115: (14818-14902)
      000027cd: JUMPDEST                       // SRCID115: (14818-14902)
      000027ce: SWAP5                          // SRCID115: (14810-14902)
      000027cf: POP                            // SRCID115: (14810-14902)
      000027d0: PUSH2 0x27d8                   // SRCID115: (14925-14995)
      000027d3: DUP4                           // SRCID115: (14988-14994)
      000027d4: PUSH2 0x2412                   // SRCID115: (14925-14995)
      000027d7: JUMP                           // SRCID115: (14925-14995)
      000027d8: JUMPDEST                       // SRCID115: (14925-14995)
      000027d9: SWAP3                          // SRCID115: (14915-14995)
      000027da: POP                            // SRCID115: (14915-14995)
      000027db: PUSH1 0x20                     // SRCID115: (15024-15028)
      000027dd: DUP11                          // SRCID115: (15019-15022)
      000027de: ADD                            // SRCID115: (15015-15029)
      000027df: SWAP10                         // SRCID115: (15008-15029)
      000027e0: POP                            // SRCID115: (15008-15029)
      000027e1: POP                            // SRCID115: (14703-15039)
      000027e2: PUSH1 0x1                      // SRCID115: (14690-14691)
      000027e4: DUP2                           // SRCID115: (14687-14688)
      000027e5: ADD                            // SRCID115: (14683-14692)
      000027e6: SWAP1                          // SRCID115: (14678-14692)
      000027e7: POP                            // SRCID115: (14678-14692)
      000027e8: PUSH2 0x27b4                   // SRCID115: (14643-15039)
      000027eb: JUMP                           // SRCID115: (14643-15039)
      000027ec: JUMPDEST                       // SRCID115: (14643-15039)
      000027ed: POP                            // SRCID115: (14647-14661)
      000027ee: DUP3                           // SRCID115: (15055-15059)
      000027ef: SWAP8                          // SRCID115: (15048-15059)
      000027f0: POP                            // SRCID115: (15048-15059)
      000027f1: DUP8                           // SRCID115: (15075-15078)
      000027f2: SWAP6                          // SRCID115: (15068-15078)
      000027f3: POP                            // SRCID115: (15068-15078)
      000027f4: POP                            // SRCID115: (14237-15084)
      000027f5: POP                            // SRCID115: (14237-15084)
      000027f6: POP                            // SRCID115: (14237-15084)
      000027f7: POP                            // SRCID115: (14237-15084)
      000027f8: POP                            // SRCID115: (14237-15084)
      000027f9: SWAP3                          // SRCID115: (14093-15084)
      000027fa: SWAP2                          // SRCID115: (14093-15084)
      000027fb: POP                            // SRCID115: (14093-15084)
      000027fc: POP                            // SRCID115: (14093-15084)
      000027fd: JUMP                           // SRCID115: (14093-15084)
      000027fe: JUMPDEST                       // SRCID115: (15090-15503)
      000027ff: PUSH0                          // SRCID115: (15253-15257)
      00002800: PUSH1 0x20                     // SRCID115: (15291-15293)
      00002802: DUP3                           // SRCID115: (15280-15289)
      00002803: ADD                            // SRCID115: (15276-15294)
      00002804: SWAP1                          // SRCID115: (15268-15294)
      00002805: POP                            // SRCID115: (15268-15294)
      00002806: DUP2                           // SRCID115: (15340-15349)
      00002807: DUP2                           // SRCID115: (15334-15338)
      00002808: SUB                            // SRCID115: (15330-15350)
      00002809: PUSH0                          // SRCID115: (15326-15327)
      0000280a: DUP4                           // SRCID115: (15315-15324)
      0000280b: ADD                            // SRCID115: (15311-15328)
      0000280c: MSTORE                         // SRCID115: (15304-15351)
      0000280d: PUSH2 0x2816                   // SRCID115: (15368-15496)
      00002810: DUP2                           // SRCID115: (15491-15495)
      00002811: DUP5                           // SRCID115: (15482-15488)
      00002812: PUSH2 0x278b                   // SRCID115: (15368-15496)
      00002815: JUMP                           // SRCID115: (15368-15496)
      00002816: JUMPDEST                       // SRCID115: (15368-15496)
      00002817: SWAP1                          // SRCID115: (15360-15496)
      00002818: POP                            // SRCID115: (15360-15496)
      00002819: SWAP3                          // SRCID115: (15090-15503)
      0000281a: SWAP2                          // SRCID115: (15090-15503)
      0000281b: POP                            // SRCID115: (15090-15503)
      0000281c: POP                            // SRCID115: (15090-15503)
      0000281d: JUMP                           // SRCID115: (15090-15503)
      0000281e: JUMPDEST                       // SRCID115: (15509-15653)
      0000281f: PUSH0                          // SRCID115: (15606-15612)
      00002820: DUP2                           // SRCID115: (15640-15645)
      00002821: MLOAD                          // SRCID115: (15634-15646)
      00002822: SWAP1                          // SRCID115: (15624-15646)
      00002823: POP                            // SRCID115: (15624-15646)
      00002824: SWAP2                          // SRCID115: (15509-15653)
      00002825: SWAP1                          // SRCID115: (15509-15653)
      00002826: POP                            // SRCID115: (15509-15653)
      00002827: JUMP                           // SRCID115: (15509-15653)
      00002828: JUMPDEST                       // SRCID115: (15659-15873)
      00002829: PUSH0                          // SRCID115: (15788-15799)
      0000282a: DUP3                           // SRCID115: (15822-15828)
      0000282b: DUP3                           // SRCID115: (15817-15820)
      0000282c: MSTORE                         // SRCID115: (15810-15829)
      0000282d: PUSH1 0x20                     // SRCID115: (15862-15866)
      0000282f: DUP3                           // SRCID115: (15857-15860)
      00002830: ADD                            // SRCID115: (15853-15867)
      00002831: SWAP1                          // SRCID115: (15838-15867)
      00002832: POP                            // SRCID115: (15838-15867)
      00002833: SWAP3                          // SRCID115: (15659-15873)
      00002834: SWAP2                          // SRCID115: (15659-15873)
      00002835: POP                            // SRCID115: (15659-15873)
      00002836: POP                            // SRCID115: (15659-15873)
      00002837: JUMP                           // SRCID115: (15659-15873)
      00002838: JUMPDEST                       // SRCID115: (15879-16041)
      00002839: PUSH0                          // SRCID115: (15976-15980)
      0000283a: DUP2                           // SRCID115: (15999-16002)
      0000283b: SWAP1                          // SRCID115: (15991-16002)
      0000283c: POP                            // SRCID115: (15991-16002)
      0000283d: PUSH1 0x20                     // SRCID115: (16029-16033)
      0000283f: DUP3                           // SRCID115: (16024-16027)
      00002840: ADD                            // SRCID115: (16020-16034)
      00002841: SWAP1                          // SRCID115: (16012-16034)
      00002842: POP                            // SRCID115: (16012-16034)
      00002843: SWAP2                          // SRCID115: (15879-16041)
      00002844: SWAP1                          // SRCID115: (15879-16041)
      00002845: POP                            // SRCID115: (15879-16041)
      00002846: JUMP                           // SRCID115: (15879-16041)
      00002847: JUMPDEST                       // SRCID115: (16123-16762)
      00002848: PUSH0                          // SRCID115: (16242-16245)
      00002849: PUSH1 0x40                     // SRCID115: (16278-16282)
      0000284b: DUP4                           // SRCID115: (16273-16276)
      0000284c: ADD                            // SRCID115: (16269-16283)
      0000284d: PUSH0                          // SRCID115: (16365-16369)
      0000284e: DUP4                           // SRCID115: (16358-16363)
      0000284f: ADD                            // SRCID115: (16354-16370)
      00002850: MLOAD                          // SRCID115: (16348-16371)
      00002851: PUSH2 0x285c                   // SRCID115: (16384-16447)
      00002854: PUSH0                          // SRCID115: (16441-16445)
      00002855: DUP7                           // SRCID115: (16436-16439)
      00002856: ADD                            // SRCID115: (16432-16446)
      00002857: DUP3                           // SRCID115: (16418-16430)
      00002858: PUSH2 0x228f                   // SRCID115: (16384-16447)
      0000285b: JUMP                           // SRCID115: (16384-16447)
      0000285c: JUMPDEST                       // SRCID115: (16384-16447)
      0000285d: POP                            // SRCID115: (16293-16457)
      0000285e: PUSH1 0x20                     // SRCID115: (16544-16548)
      00002860: DUP4                           // SRCID115: (16537-16542)
      00002861: ADD                            // SRCID115: (16533-16549)
      00002862: MLOAD                          // SRCID115: (16527-16550)
      00002863: DUP5                           // SRCID115: (16597-16600)
      00002864: DUP3                           // SRCID115: (16591-16595)
      00002865: SUB                            // SRCID115: (16587-16601)
      00002866: PUSH1 0x20                     // SRCID115: (16580-16584)
      00002868: DUP7                           // SRCID115: (16575-16578)
      00002869: ADD                            // SRCID115: (16571-16585)
      0000286a: MSTORE                         // SRCID115: (16564-16602)
      0000286b: PUSH2 0x2874                   // SRCID115: (16623-16724)
      0000286e: DUP3                           // SRCID115: (16719-16723)
      0000286f: DUP3                           // SRCID115: (16705-16717)
      00002870: PUSH2 0x262c                   // SRCID115: (16623-16724)
      00002873: JUMP                           // SRCID115: (16623-16724)
      00002874: JUMPDEST                       // SRCID115: (16623-16724)
      00002875: SWAP2                          // SRCID115: (16615-16724)
      00002876: POP                            // SRCID115: (16615-16724)
      00002877: POP                            // SRCID115: (16467-16735)
      00002878: DUP1                           // SRCID115: (16752-16756)
      00002879: SWAP2                          // SRCID115: (16745-16756)
      0000287a: POP                            // SRCID115: (16745-16756)
      0000287b: POP                            // SRCID115: (16247-16762)
      0000287c: SWAP3                          // SRCID115: (16123-16762)
      0000287d: SWAP2                          // SRCID115: (16123-16762)
      0000287e: POP                            // SRCID115: (16123-16762)
      0000287f: POP                            // SRCID115: (16123-16762)
      00002880: JUMP                           // SRCID115: (16123-16762)
      00002881: JUMPDEST                       // SRCID115: (16768-17044)
      00002882: PUSH0                          // SRCID115: (16897-16907)
      00002883: PUSH2 0x288c                   // SRCID115: (16932-17038)
      00002886: DUP4                           // SRCID115: (17034-17037)
      00002887: DUP4                           // SRCID115: (17026-17032)
      00002888: PUSH2 0x2847                   // SRCID115: (16932-17038)
      0000288b: JUMP                           // SRCID115: (16932-17038)
      0000288c: JUMPDEST                       // SRCID115: (16932-17038)
      0000288d: SWAP1                          // SRCID115: (16918-17038)
      0000288e: POP                            // SRCID115: (16918-17038)
      0000288f: SWAP3                          // SRCID115: (16768-17044)
      00002890: SWAP2                          // SRCID115: (16768-17044)
      00002891: POP                            // SRCID115: (16768-17044)
      00002892: POP                            // SRCID115: (16768-17044)
      00002893: JUMP                           // SRCID115: (16768-17044)
      00002894: JUMPDEST                       // SRCID115: (17050-17193)
      00002895: PUSH0                          // SRCID115: (17150-17154)
      00002896: PUSH1 0x20                     // SRCID115: (17182-17186)
      00002898: DUP3                           // SRCID115: (17177-17180)
      00002899: ADD                            // SRCID115: (17173-17187)
      0000289a: SWAP1                          // SRCID115: (17165-17187)
      0000289b: POP                            // SRCID115: (17165-17187)
      0000289c: SWAP2                          // SRCID115: (17050-17193)
      0000289d: SWAP1                          // SRCID115: (17050-17193)
      0000289e: POP                            // SRCID115: (17050-17193)
      0000289f: JUMP                           // SRCID115: (17050-17193)
      000028a0: JUMPDEST                       // SRCID115: (17279-18430)
      000028a1: PUSH0                          // SRCID115: (17458-17461)
      000028a2: PUSH2 0x28aa                   // SRCID115: (17487-17571)
      000028a5: DUP3                           // SRCID115: (17565-17570)
      000028a6: PUSH2 0x281e                   // SRCID115: (17487-17571)
      000028a9: JUMP                           // SRCID115: (17487-17571)
      000028aa: JUMPDEST                       // SRCID115: (17487-17571)
      000028ab: PUSH2 0x28b4                   // SRCID115: (17587-17703)
      000028ae: DUP2                           // SRCID115: (17696-17702)
      000028af: DUP6                           // SRCID115: (17691-17694)
      000028b0: PUSH2 0x2828                   // SRCID115: (17587-17703)
      000028b3: JUMP                           // SRCID115: (17587-17703)
      000028b4: JUMPDEST                       // SRCID115: (17587-17703)
      000028b5: SWAP4                          // SRCID115: (17580-17703)
      000028b6: POP                            // SRCID115: (17580-17703)
      000028b7: DUP4                           // SRCID115: (17729-17732)
      000028b8: PUSH1 0x20                     // SRCID115: (17774-17778)
      000028ba: DUP3                           // SRCID115: (17766-17772)
      000028bb: MUL                            // SRCID115: (17762-17779)
      000028bc: DUP6                           // SRCID115: (17757-17760)
      000028bd: ADD                            // SRCID115: (17753-17780)
      000028be: PUSH2 0x28c6                   // SRCID115: (17804-17890)
      000028c1: DUP6                           // SRCID115: (17884-17889)
      000028c2: PUSH2 0x2838                   // SRCID115: (17804-17890)
      000028c5: JUMP                           // SRCID115: (17804-17890)
      000028c6: JUMPDEST                       // SRCID115: (17804-17890)
      000028c7: DUP1                           // SRCID115: (17913-17920)
      000028c8: PUSH0                          // SRCID115: (17944-17945)
      000028c9: JUMPDEST                       // SRCID115: (17929-18385)
      000028ca: DUP6                           // SRCID115: (17954-17960)
      000028cb: DUP2                           // SRCID115: (17951-17952)
      000028cc: LT                             // SRCID115: (17948-17961)
      000028cd: ISZERO                         // SRCID115: (17929-18385)
      000028ce: PUSH2 0x2901                   // SRCID115: (17929-18385)
      000028d1: JUMPI                          // SRCID115: (17929-18385)
      000028d2: DUP5                           // SRCID115: (18025-18034)
      000028d3: DUP5                           // SRCID115: (18019-18023)
      000028d4: SUB                            // SRCID115: (18015-18035)
      000028d5: DUP10                          // SRCID115: (18010-18013)
      000028d6: MSTORE                         // SRCID115: (18003-18036)
      000028d7: DUP2                           // SRCID115: (18076-18082)
      000028d8: MLOAD                          // SRCID115: (18070-18083)
      000028d9: PUSH2 0x28e2                   // SRCID115: (18104-18228)
      000028dc: DUP6                           // SRCID115: (18223-18227)
      000028dd: DUP3                           // SRCID115: (18208-18221)
      000028de: PUSH2 0x2881                   // SRCID115: (18104-18228)
      000028e1: JUMP                           // SRCID115: (18104-18228)
      000028e2: JUMPDEST                       // SRCID115: (18104-18228)
      000028e3: SWAP5                          // SRCID115: (18096-18228)
      000028e4: POP                            // SRCID115: (18096-18228)
      000028e5: PUSH2 0x28ed                   // SRCID115: (18251-18341)
      000028e8: DUP4                           // SRCID115: (18334-18340)
      000028e9: PUSH2 0x2894                   // SRCID115: (18251-18341)
      000028ec: JUMP                           // SRCID115: (18251-18341)
      000028ed: JUMPDEST                       // SRCID115: (18251-18341)
      000028ee: SWAP3                          // SRCID115: (18241-18341)
      000028ef: POP                            // SRCID115: (18241-18341)
      000028f0: PUSH1 0x20                     // SRCID115: (18370-18374)
      000028f2: DUP11                          // SRCID115: (18365-18368)
      000028f3: ADD                            // SRCID115: (18361-18375)
      000028f4: SWAP10                         // SRCID115: (18354-18375)
      000028f5: POP                            // SRCID115: (18354-18375)
      000028f6: POP                            // SRCID115: (17989-18385)
      000028f7: PUSH1 0x1                      // SRCID115: (17976-17977)
      000028f9: DUP2                           // SRCID115: (17973-17974)
      000028fa: ADD                            // SRCID115: (17969-17978)
      000028fb: SWAP1                          // SRCID115: (17964-17978)
      000028fc: POP                            // SRCID115: (17964-17978)
      000028fd: PUSH2 0x28c9                   // SRCID115: (17929-18385)
      00002900: JUMP                           // SRCID115: (17929-18385)
      00002901: JUMPDEST                       // SRCID115: (17929-18385)
      00002902: POP                            // SRCID115: (17933-17947)
      00002903: DUP3                           // SRCID115: (18401-18405)
      00002904: SWAP8                          // SRCID115: (18394-18405)
      00002905: POP                            // SRCID115: (18394-18405)
      00002906: DUP8                           // SRCID115: (18421-18424)
      00002907: SWAP6                          // SRCID115: (18414-18424)
      00002908: POP                            // SRCID115: (18414-18424)
      00002909: POP                            // SRCID115: (17463-18430)
      0000290a: POP                            // SRCID115: (17463-18430)
      0000290b: POP                            // SRCID115: (17463-18430)
      0000290c: POP                            // SRCID115: (17463-18430)
      0000290d: POP                            // SRCID115: (17463-18430)
      0000290e: SWAP3                          // SRCID115: (17279-18430)
      0000290f: SWAP2                          // SRCID115: (17279-18430)
      00002910: POP                            // SRCID115: (17279-18430)
      00002911: POP                            // SRCID115: (17279-18430)
      00002912: JUMP                           // SRCID115: (17279-18430)
      00002913: JUMPDEST                       // SRCID115: (18436-18929)
      00002914: PUSH0                          // SRCID115: (18639-18643)
      00002915: PUSH1 0x20                     // SRCID115: (18677-18679)
      00002917: DUP3                           // SRCID115: (18666-18675)
      00002918: ADD                            // SRCID115: (18662-18680)
      00002919: SWAP1                          // SRCID115: (18654-18680)
      0000291a: POP                            // SRCID115: (18654-18680)
      0000291b: DUP2                           // SRCID115: (18726-18735)
      0000291c: DUP2                           // SRCID115: (18720-18724)
      0000291d: SUB                            // SRCID115: (18716-18736)
      0000291e: PUSH0                          // SRCID115: (18712-18713)
      0000291f: DUP4                           // SRCID115: (18701-18710)
      00002920: ADD                            // SRCID115: (18697-18714)
      00002921: MSTORE                         // SRCID115: (18690-18737)
      00002922: PUSH2 0x292b                   // SRCID115: (18754-18922)
      00002925: DUP2                           // SRCID115: (18917-18921)
      00002926: DUP5                           // SRCID115: (18908-18914)
      00002927: PUSH2 0x28a0                   // SRCID115: (18754-18922)
      0000292a: JUMP                           // SRCID115: (18754-18922)
      0000292b: JUMPDEST                       // SRCID115: (18754-18922)
      0000292c: SWAP1                          // SRCID115: (18746-18922)
      0000292d: POP                            // SRCID115: (18746-18922)
      0000292e: SWAP3                          // SRCID115: (18436-18929)
      0000292f: SWAP2                          // SRCID115: (18436-18929)
      00002930: POP                            // SRCID115: (18436-18929)
      00002931: POP                            // SRCID115: (18436-18929)
      00002932: JUMP                           // SRCID115: (18436-18929)
[008] 00002933: JUMPDEST                       // SRCID115: (18935-19025)
[008] 00002934: PUSH0                          // SRCID115: (18969-18976)
[008] 00002935: DUP2                           // SRCID115: (19012-19017)
[008] 00002936: ISZERO                         // SRCID115: (19005-19018)
[008] 00002937: ISZERO                         // SRCID115: (18998-19019)
[008] 00002938: SWAP1                          // SRCID115: (18987-19019)
[008] 00002939: POP                            // SRCID115: (18987-19019)
[008] 0000293a: SWAP2                          // SRCID115: (18935-19025)
[008] 0000293b: SWAP1                          // SRCID115: (18935-19025)
[008] 0000293c: POP                            // SRCID115: (18935-19025)
[008] 0000293d: JUMP                           // SRCID115: (18935-19025)
[004] 0000293e: JUMPDEST                       // SRCID115: (19031-19140)
[004] 0000293f: PUSH2 0x2947                   // SRCID115: (19112-19133)
[004] 00002942: DUP2                           // SRCID115: (19127-19132)
[004] 00002943: PUSH2 0x2933                   // SRCID115: (19112-19133)
[004] 00002946: JUMP                           // SRCID115: (19112-19133)
[004] 00002947: JUMPDEST                       // SRCID115: (19112-19133)
[004] 00002948: DUP3                           // SRCID115: (19107-19110)
[004] 00002949: MSTORE                         // SRCID115: (19100-19134)
[004] 0000294a: POP                            // SRCID115: (19031-19140)
[004] 0000294b: POP                            // SRCID115: (19031-19140)
[004] 0000294c: JUMP                           // SRCID115: (19031-19140)
[004] 0000294d: JUMPDEST                       // SRCID115: (19146-19356)
[004] 0000294e: PUSH0                          // SRCID115: (19233-19237)
[004] 0000294f: PUSH1 0x20                     // SRCID115: (19271-19273)
[004] 00002951: DUP3                           // SRCID115: (19260-19269)
[004] 00002952: ADD                            // SRCID115: (19256-19274)
[004] 00002953: SWAP1                          // SRCID115: (19248-19274)
[004] 00002954: POP                            // SRCID115: (19248-19274)
[004] 00002955: PUSH2 0x2960                   // SRCID115: (19284-19349)
[004] 00002958: PUSH0                          // SRCID115: (19346-19347)
[004] 00002959: DUP4                           // SRCID115: (19335-19344)
[004] 0000295a: ADD                            // SRCID115: (19331-19348)
[004] 0000295b: DUP5                           // SRCID115: (19322-19328)
[004] 0000295c: PUSH2 0x293e                   // SRCID115: (19284-19349)
[004] 0000295f: JUMP                           // SRCID115: (19284-19349)
[004] 00002960: JUMPDEST                       // SRCID115: (19284-19349)
[004] 00002961: SWAP3                          // SRCID115: (19146-19356)
[004] 00002962: SWAP2                          // SRCID115: (19146-19356)
[004] 00002963: POP                            // SRCID115: (19146-19356)
[004] 00002964: POP                            // SRCID115: (19146-19356)
[004] 00002965: JUMP                           // SRCID115: (19146-19356)
[004] 00002966: JUMPDEST                       // SRCID115: (19362-19448)
[004] 00002967: PUSH0                          // SRCID115: (19408-19415)
[004] 00002968: DUP2                           // SRCID115: (19437-19442)
[004] 00002969: SWAP1                          // SRCID115: (19426-19442)
[004] 0000296a: POP                            // SRCID115: (19426-19442)
[004] 0000296b: SWAP2                          // SRCID115: (19362-19448)
[004] 0000296c: SWAP1                          // SRCID115: (19362-19448)
[004] 0000296d: POP                            // SRCID115: (19362-19448)
[004] 0000296e: JUMP                           // SRCID115: (19362-19448)
[004] 0000296f: JUMPDEST                       // SRCID115: (19454-19540)
[004] 00002970: PUSH0                          // SRCID115: (19489-19496)
[004] 00002971: PUSH1 0xff                     // SRCID115: (19529-19533)
[004] 00002973: DUP3                           // SRCID115: (19522-19527)
[004] 00002974: AND                            // SRCID115: (19518-19534)
[004] 00002975: SWAP1                          // SRCID115: (19507-19534)
[004] 00002976: POP                            // SRCID115: (19507-19534)
[004] 00002977: SWAP2                          // SRCID115: (19454-19540)
[004] 00002978: SWAP1                          // SRCID115: (19454-19540)
[004] 00002979: POP                            // SRCID115: (19454-19540)
[004] 0000297a: JUMP                           // SRCID115: (19454-19540)
[016] 0000297b: JUMPDEST                       // SRCID115: (19546-19606)
[016] 0000297c: PUSH0                          // SRCID115: (19574-19577)
[016] 0000297d: DUP2                           // SRCID115: (19595-19600)
[016] 0000297e: SWAP1                          // SRCID115: (19588-19600)
[016] 0000297f: POP                            // SRCID115: (19588-19600)
[016] 00002980: SWAP2                          // SRCID115: (19546-19606)
[016] 00002981: SWAP1                          // SRCID115: (19546-19606)
[016] 00002982: POP                            // SRCID115: (19546-19606)
[016] 00002983: JUMP                           // SRCID115: (19546-19606)
[004] 00002984: JUMPDEST                       // SRCID115: (19612-19768)
[004] 00002985: PUSH0                          // SRCID115: (19669-19678)
[004] 00002986: PUSH2 0x299e                   // SRCID115: (19702-19762)
[004] 00002989: PUSH2 0x2999                   // SRCID115: (19718-19761)
[004] 0000298c: PUSH2 0x2994                   // SRCID115: (19727-19760)
[004] 0000298f: DUP5                           // SRCID115: (19754-19759)
[004] 00002990: PUSH2 0x2966                   // SRCID115: (19727-19760)
[004] 00002993: JUMP                           // SRCID115: (19727-19760)
[004] 00002994: JUMPDEST                       // SRCID115: (19727-19760)
[004] 00002995: PUSH2 0x297b                   // SRCID115: (19718-19761)
[004] 00002998: JUMP                           // SRCID115: (19718-19761)
[004] 00002999: JUMPDEST                       // SRCID115: (19718-19761)
[004] 0000299a: PUSH2 0x296f                   // SRCID115: (19702-19762)
[004] 0000299d: JUMP                           // SRCID115: (19702-19762)
[004] 0000299e: JUMPDEST                       // SRCID115: (19702-19762)
[004] 0000299f: SWAP1                          // SRCID115: (19689-19762)
[004] 000029a0: POP                            // SRCID115: (19689-19762)
[004] 000029a1: SWAP2                          // SRCID115: (19612-19768)
[004] 000029a2: SWAP1                          // SRCID115: (19612-19768)
[004] 000029a3: POP                            // SRCID115: (19612-19768)
[004] 000029a4: JUMP                           // SRCID115: (19612-19768)
[004] 000029a5: JUMPDEST                       // SRCID115: (19774-19919)
[004] 000029a6: PUSH2 0x29ae                   // SRCID115: (19868-19912)
[004] 000029a9: DUP2                           // SRCID115: (19906-19911)
[004] 000029aa: PUSH2 0x2984                   // SRCID115: (19868-19912)
[004] 000029ad: JUMP                           // SRCID115: (19868-19912)
[004] 000029ae: JUMPDEST                       // SRCID115: (19868-19912)
[004] 000029af: DUP3                           // SRCID115: (19863-19866)
[004] 000029b0: MSTORE                         // SRCID115: (19856-19913)
[004] 000029b1: POP                            // SRCID115: (19774-19919)
[004] 000029b2: POP                            // SRCID115: (19774-19919)
[004] 000029b3: JUMP                           // SRCID115: (19774-19919)
[004] 000029b4: JUMPDEST                       // SRCID115: (19925-20161)
[004] 000029b5: PUSH0                          // SRCID115: (20025-20029)
[004] 000029b6: PUSH1 0x20                     // SRCID115: (20063-20065)
[004] 000029b8: DUP3                           // SRCID115: (20052-20061)
[004] 000029b9: ADD                            // SRCID115: (20048-20066)
[004] 000029ba: SWAP1                          // SRCID115: (20040-20066)
[004] 000029bb: POP                            // SRCID115: (20040-20066)
[004] 000029bc: PUSH2 0x29c7                   // SRCID115: (20076-20154)
[004] 000029bf: PUSH0                          // SRCID115: (20151-20152)
[004] 000029c0: DUP4                           // SRCID115: (20140-20149)
[004] 000029c1: ADD                            // SRCID115: (20136-20153)
[004] 000029c2: DUP5                           // SRCID115: (20127-20133)
[004] 000029c3: PUSH2 0x29a5                   // SRCID115: (20076-20154)
[004] 000029c6: JUMP                           // SRCID115: (20076-20154)
[004] 000029c7: JUMPDEST                       // SRCID115: (20076-20154)
[004] 000029c8: SWAP3                          // SRCID115: (19925-20161)
[004] 000029c9: SWAP2                          // SRCID115: (19925-20161)
[004] 000029ca: POP                            // SRCID115: (19925-20161)
[004] 000029cb: POP                            // SRCID115: (19925-20161)
[004] 000029cc: JUMP                           // SRCID115: (19925-20161)
[008] 000029cd: JUMPDEST                       // SRCID115: (20167-20309)
[008] 000029ce: PUSH0                          // SRCID115: (20217-20226)
[008] 000029cf: PUSH2 0x29e7                   // SRCID115: (20250-20303)
[008] 000029d2: PUSH2 0x29e2                   // SRCID115: (20268-20302)
[008] 000029d5: PUSH2 0x29dd                   // SRCID115: (20277-20301)
[008] 000029d8: DUP5                           // SRCID115: (20295-20300)
[008] 000029d9: PUSH2 0x225f                   // SRCID115: (20277-20301)
[008] 000029dc: JUMP                           // SRCID115: (20277-20301)
[008] 000029dd: JUMPDEST                       // SRCID115: (20277-20301)
[008] 000029de: PUSH2 0x297b                   // SRCID115: (20268-20302)
[008] 000029e1: JUMP                           // SRCID115: (20268-20302)
[008] 000029e2: JUMPDEST                       // SRCID115: (20268-20302)
[008] 000029e3: PUSH2 0x225f                   // SRCID115: (20250-20303)
[008] 000029e6: JUMP                           // SRCID115: (20250-20303)
[008] 000029e7: JUMPDEST                       // SRCID115: (20250-20303)
[008] 000029e8: SWAP1                          // SRCID115: (20237-20303)
[008] 000029e9: POP                            // SRCID115: (20237-20303)
[008] 000029ea: SWAP2                          // SRCID115: (20167-20309)
[008] 000029eb: SWAP1                          // SRCID115: (20167-20309)
[008] 000029ec: POP                            // SRCID115: (20167-20309)
[008] 000029ed: JUMP                           // SRCID115: (20167-20309)
[008] 000029ee: JUMPDEST                       // SRCID115: (20315-20441)
[008] 000029ef: PUSH0                          // SRCID115: (20365-20374)
[008] 000029f0: PUSH2 0x29f8                   // SRCID115: (20398-20435)
[008] 000029f3: DUP3                           // SRCID115: (20429-20434)
[008] 000029f4: PUSH2 0x29cd                   // SRCID115: (20398-20435)
[008] 000029f7: JUMP                           // SRCID115: (20398-20435)
[008] 000029f8: JUMPDEST                       // SRCID115: (20398-20435)
[008] 000029f9: SWAP1                          // SRCID115: (20385-20435)
[008] 000029fa: POP                            // SRCID115: (20385-20435)
[008] 000029fb: SWAP2                          // SRCID115: (20315-20441)
[008] 000029fc: SWAP1                          // SRCID115: (20315-20441)
[008] 000029fd: POP                            // SRCID115: (20315-20441)
[008] 000029fe: JUMP                           // SRCID115: (20315-20441)
[004] 000029ff: JUMPDEST                       // SRCID115: (20447-20593)
[004] 00002a00: PUSH0                          // SRCID115: (20517-20526)
[004] 00002a01: PUSH2 0x2a09                   // SRCID115: (20550-20587)
[004] 00002a04: DUP3                           // SRCID115: (20581-20586)
[004] 00002a05: PUSH2 0x29ee                   // SRCID115: (20550-20587)
[004] 00002a08: JUMP                           // SRCID115: (20550-20587)
[004] 00002a09: JUMPDEST                       // SRCID115: (20550-20587)
[004] 00002a0a: SWAP1                          // SRCID115: (20537-20587)
[004] 00002a0b: POP                            // SRCID115: (20537-20587)
[004] 00002a0c: SWAP2                          // SRCID115: (20447-20593)
[004] 00002a0d: SWAP1                          // SRCID115: (20447-20593)
[004] 00002a0e: POP                            // SRCID115: (20447-20593)
[004] 00002a0f: JUMP                           // SRCID115: (20447-20593)
[004] 00002a10: JUMPDEST                       // SRCID115: (20599-20770)
[004] 00002a11: PUSH2 0x2a19                   // SRCID115: (20706-20763)
[004] 00002a14: DUP2                           // SRCID115: (20757-20762)
[004] 00002a15: PUSH2 0x29ff                   // SRCID115: (20706-20763)
[004] 00002a18: JUMP                           // SRCID115: (20706-20763)
[004] 00002a19: JUMPDEST                       // SRCID115: (20706-20763)
[004] 00002a1a: DUP3                           // SRCID115: (20701-20704)
[004] 00002a1b: MSTORE                         // SRCID115: (20694-20764)
[004] 00002a1c: POP                            // SRCID115: (20599-20770)
[004] 00002a1d: POP                            // SRCID115: (20599-20770)
[004] 00002a1e: JUMP                           // SRCID115: (20599-20770)
[004] 00002a1f: JUMPDEST                       // SRCID115: (20776-21038)
[004] 00002a20: PUSH0                          // SRCID115: (20889-20893)
[004] 00002a21: PUSH1 0x20                     // SRCID115: (20927-20929)
[004] 00002a23: DUP3                           // SRCID115: (20916-20925)
[004] 00002a24: ADD                            // SRCID115: (20912-20930)
[004] 00002a25: SWAP1                          // SRCID115: (20904-20930)
[004] 00002a26: POP                            // SRCID115: (20904-20930)
[004] 00002a27: PUSH2 0x2a32                   // SRCID115: (20940-21031)
[004] 00002a2a: PUSH0                          // SRCID115: (21028-21029)
[004] 00002a2b: DUP4                           // SRCID115: (21017-21026)
[004] 00002a2c: ADD                            // SRCID115: (21013-21030)
[004] 00002a2d: DUP5                           // SRCID115: (21004-21010)
[004] 00002a2e: PUSH2 0x2a10                   // SRCID115: (20940-21031)
[004] 00002a31: JUMP                           // SRCID115: (20940-21031)
[004] 00002a32: JUMPDEST                       // SRCID115: (20940-21031)
[004] 00002a33: SWAP3                          // SRCID115: (20776-21038)
[004] 00002a34: SWAP2                          // SRCID115: (20776-21038)
[004] 00002a35: POP                            // SRCID115: (20776-21038)
[004] 00002a36: POP                            // SRCID115: (20776-21038)
[004] 00002a37: JUMP                           // SRCID115: (20776-21038)
[040] 00002a38: JUMPDEST                       // SRCID115: (21044-21162)
[040] 00002a39: PUSH2 0x2a41                   // SRCID115: (21131-21155)
[040] 00002a3c: DUP2                           // SRCID115: (21149-21154)
[040] 00002a3d: PUSH2 0x227e                   // SRCID115: (21131-21155)
[040] 00002a40: JUMP                           // SRCID115: (21131-21155)
[040] 00002a41: JUMPDEST                       // SRCID115: (21131-21155)
[040] 00002a42: DUP3                           // SRCID115: (21126-21129)
[040] 00002a43: MSTORE                         // SRCID115: (21119-21156)
[040] 00002a44: POP                            // SRCID115: (21044-21162)
[040] 00002a45: POP                            // SRCID115: (21044-21162)
[040] 00002a46: JUMP                           // SRCID115: (21044-21162)
[004] 00002a47: JUMPDEST                       // SRCID115: (21168-21253)
[004] 00002a48: PUSH0                          // SRCID115: (21213-21220)
[004] 00002a49: DUP2                           // SRCID115: (21242-21247)
[004] 00002a4a: SWAP1                          // SRCID115: (21231-21247)
[004] 00002a4b: POP                            // SRCID115: (21231-21247)
[004] 00002a4c: SWAP2                          // SRCID115: (21168-21253)
[004] 00002a4d: SWAP1                          // SRCID115: (21168-21253)
[004] 00002a4e: POP                            // SRCID115: (21168-21253)
[004] 00002a4f: JUMP                           // SRCID115: (21168-21253)
[016] 00002a50: JUMPDEST                       // SRCID115: (21259-21336)
[016] 00002a51: PUSH0                          // SRCID115: (21296-21303)
[016] 00002a52: DUP2                           // SRCID115: (21325-21330)
[016] 00002a53: SWAP1                          // SRCID115: (21314-21330)
[016] 00002a54: POP                            // SRCID115: (21314-21330)
[016] 00002a55: SWAP2                          // SRCID115: (21259-21336)
[016] 00002a56: SWAP1                          // SRCID115: (21259-21336)
[016] 00002a57: POP                            // SRCID115: (21259-21336)
[016] 00002a58: JUMP                           // SRCID115: (21259-21336)
[004] 00002a59: JUMPDEST                       // SRCID115: (21342-21500)
[004] 00002a5a: PUSH0                          // SRCID115: (21400-21409)
[004] 00002a5b: PUSH2 0x2a73                   // SRCID115: (21433-21494)
[004] 00002a5e: PUSH2 0x2a6e                   // SRCID115: (21451-21493)
[004] 00002a61: PUSH2 0x2a69                   // SRCID115: (21460-21492)
[004] 00002a64: DUP5                           // SRCID115: (21486-21491)
[004] 00002a65: PUSH2 0x2a47                   // SRCID115: (21460-21492)
[004] 00002a68: JUMP                           // SRCID115: (21460-21492)
[004] 00002a69: JUMPDEST                       // SRCID115: (21460-21492)
[004] 00002a6a: PUSH2 0x297b                   // SRCID115: (21451-21493)
[004] 00002a6d: JUMP                           // SRCID115: (21451-21493)
[004] 00002a6e: JUMPDEST                       // SRCID115: (21451-21493)
[004] 00002a6f: PUSH2 0x2a50                   // SRCID115: (21433-21494)
[004] 00002a72: JUMP                           // SRCID115: (21433-21494)
[004] 00002a73: JUMPDEST                       // SRCID115: (21433-21494)
[004] 00002a74: SWAP1                          // SRCID115: (21420-21494)
[004] 00002a75: POP                            // SRCID115: (21420-21494)
[004] 00002a76: SWAP2                          // SRCID115: (21342-21500)
[004] 00002a77: SWAP1                          // SRCID115: (21342-21500)
[004] 00002a78: POP                            // SRCID115: (21342-21500)
[004] 00002a79: JUMP                           // SRCID115: (21342-21500)
[004] 00002a7a: JUMPDEST                       // SRCID115: (21506-21653)
[004] 00002a7b: PUSH2 0x2a83                   // SRCID115: (21601-21646)
[004] 00002a7e: DUP2                           // SRCID115: (21640-21645)
[004] 00002a7f: PUSH2 0x2a59                   // SRCID115: (21601-21646)
[004] 00002a82: JUMP                           // SRCID115: (21601-21646)
[004] 00002a83: JUMPDEST                       // SRCID115: (21601-21646)
[004] 00002a84: DUP3                           // SRCID115: (21596-21599)
[004] 00002a85: MSTORE                         // SRCID115: (21589-21647)
[004] 00002a86: POP                            // SRCID115: (21506-21653)
[004] 00002a87: POP                            // SRCID115: (21506-21653)
[004] 00002a88: JUMP                           // SRCID115: (21506-21653)
[004] 00002a89: JUMPDEST                       // SRCID115: (21659-22007)
[004] 00002a8a: PUSH0                          // SRCID115: (21788-21792)
[004] 00002a8b: PUSH1 0x40                     // SRCID115: (21826-21828)
[004] 00002a8d: DUP3                           // SRCID115: (21815-21824)
[004] 00002a8e: ADD                            // SRCID115: (21811-21829)
[004] 00002a8f: SWAP1                          // SRCID115: (21803-21829)
[004] 00002a90: POP                            // SRCID115: (21803-21829)
[004] 00002a91: PUSH2 0x2a9c                   // SRCID115: (21839-21910)
[004] 00002a94: PUSH0                          // SRCID115: (21907-21908)
[004] 00002a95: DUP4                           // SRCID115: (21896-21905)
[004] 00002a96: ADD                            // SRCID115: (21892-21909)
[004] 00002a97: DUP6                           // SRCID115: (21883-21889)
[004] 00002a98: PUSH2 0x2a38                   // SRCID115: (21839-21910)
[004] 00002a9b: JUMP                           // SRCID115: (21839-21910)
[004] 00002a9c: JUMPDEST                       // SRCID115: (21839-21910)
[004] 00002a9d: PUSH2 0x2aa9                   // SRCID115: (21920-22000)
[004] 00002aa0: PUSH1 0x20                     // SRCID115: (21996-21998)
[004] 00002aa2: DUP4                           // SRCID115: (21985-21994)
[004] 00002aa3: ADD                            // SRCID115: (21981-21999)
[004] 00002aa4: DUP5                           // SRCID115: (21972-21978)
[004] 00002aa5: PUSH2 0x2a7a                   // SRCID115: (21920-22000)
[004] 00002aa8: JUMP                           // SRCID115: (21920-22000)
[004] 00002aa9: JUMPDEST                       // SRCID115: (21920-22000)
[004] 00002aaa: SWAP4                          // SRCID115: (21659-22007)
[004] 00002aab: SWAP3                          // SRCID115: (21659-22007)
[004] 00002aac: POP                            // SRCID115: (21659-22007)
[004] 00002aad: POP                            // SRCID115: (21659-22007)
[004] 00002aae: POP                            // SRCID115: (21659-22007)
[004] 00002aaf: JUMP                           // SRCID115: (21659-22007)
      00002ab0: JUMPDEST                       // SRCID115: (22094-22211)
      00002ab1: PUSH0                          // SRCID115: (22203-22204)
      00002ab2: DUP1                           // SRCID115: (22200-22201)
      00002ab3: REVERT                         // SRCID115: (22193-22205)
[004] 00002ab4: JUMPDEST                       // SRCID115: (22340-22444)
[004] 00002ab5: PUSH0                          // SRCID115: (22385-22392)
[004] 00002ab6: PUSH2 0x2abe                   // SRCID115: (22414-22438)
[004] 00002ab9: DUP3                           // SRCID115: (22432-22437)
[004] 00002aba: PUSH2 0x225f                   // SRCID115: (22414-22438)
[004] 00002abd: JUMP                           // SRCID115: (22414-22438)
[004] 00002abe: JUMPDEST                       // SRCID115: (22414-22438)
[004] 00002abf: SWAP1                          // SRCID115: (22403-22438)
[004] 00002ac0: POP                            // SRCID115: (22403-22438)
[004] 00002ac1: SWAP2                          // SRCID115: (22340-22444)
[004] 00002ac2: SWAP1                          // SRCID115: (22340-22444)
[004] 00002ac3: POP                            // SRCID115: (22340-22444)
[004] 00002ac4: JUMP                           // SRCID115: (22340-22444)
[004] 00002ac5: JUMPDEST                       // SRCID115: (22450-22577)
[004] 00002ac6: PUSH0                          // SRCID115: (22510-22517)
[004] 00002ac7: PUSH2 0x2acf                   // SRCID115: (22539-22571)
[004] 00002aca: DUP3                           // SRCID115: (22565-22570)
[004] 00002acb: PUSH2 0x2ab4                   // SRCID115: (22539-22571)
[004] 00002ace: JUMP                           // SRCID115: (22539-22571)
[004] 00002acf: JUMPDEST                       // SRCID115: (22539-22571)
[004] 00002ad0: SWAP1                          // SRCID115: (22528-22571)
[004] 00002ad1: POP                            // SRCID115: (22528-22571)
[004] 00002ad2: SWAP2                          // SRCID115: (22450-22577)
[004] 00002ad3: SWAP1                          // SRCID115: (22450-22577)
[004] 00002ad4: POP                            // SRCID115: (22450-22577)
[004] 00002ad5: JUMP                           // SRCID115: (22450-22577)
[004] 00002ad6: JUMPDEST                       // SRCID115: (22583-22751)
[004] 00002ad7: PUSH2 0x2adf                   // SRCID115: (22679-22726)
[004] 00002ada: DUP2                           // SRCID115: (22720-22725)
[004] 00002adb: PUSH2 0x2ac5                   // SRCID115: (22679-22726)
[004] 00002ade: JUMP                           // SRCID115: (22679-22726)
[004] 00002adf: JUMPDEST                       // SRCID115: (22679-22726)
[004] 00002ae0: DUP2                           // SRCID115: (22672-22677)
[004] 00002ae1: EQ                             // SRCID115: (22669-22727)
[004] 00002ae2: PUSH2 0x2ae9                   // SRCID115: (22659-22745)
[004] 00002ae5: JUMPI                          // SRCID115: (22659-22745)
      00002ae6: PUSH0                          // SRCID115: (22741-22742)
      00002ae7: DUP1                           // SRCID115: (22738-22739)
      00002ae8: REVERT                         // SRCID115: (22731-22743)
[004] 00002ae9: JUMPDEST                       // SRCID115: (22659-22745)
[004] 00002aea: POP                            // SRCID115: (22583-22751)
[004] 00002aeb: JUMP                           // SRCID115: (22583-22751)
[004] 00002aec: JUMPDEST                       // SRCID115: (22757-22946)
[004] 00002aed: PUSH0                          // SRCID115: (22837-22842)
[004] 00002aee: DUP2                           // SRCID115: (22868-22874)
[004] 00002aef: MLOAD                          // SRCID115: (22862-22875)
[004] 00002af0: SWAP1                          // SRCID115: (22853-22875)
[004] 00002af1: POP                            // SRCID115: (22853-22875)
[004] 00002af2: PUSH2 0x2afa                   // SRCID115: (22884-22940)
[004] 00002af5: DUP2                           // SRCID115: (22934-22939)
[004] 00002af6: PUSH2 0x2ad6                   // SRCID115: (22884-22940)
[004] 00002af9: JUMP                           // SRCID115: (22884-22940)
[004] 00002afa: JUMPDEST                       // SRCID115: (22884-22940)
[004] 00002afb: SWAP3                          // SRCID115: (22757-22946)
[004] 00002afc: SWAP2                          // SRCID115: (22757-22946)
[004] 00002afd: POP                            // SRCID115: (22757-22946)
[004] 00002afe: POP                            // SRCID115: (22757-22946)
[004] 00002aff: JUMP                           // SRCID115: (22757-22946)
[004] 00002b00: JUMPDEST                       // SRCID115: (22952-23349)
[004] 00002b01: PUSH0                          // SRCID115: (23045-23051)
[004] 00002b02: PUSH1 0x20                     // SRCID115: (23094-23096)
[004] 00002b04: DUP3                           // SRCID115: (23082-23091)
[004] 00002b05: DUP5                           // SRCID115: (23073-23080)
[004] 00002b06: SUB                            // SRCID115: (23069-23092)
[004] 00002b07: SLT                            // SRCID115: (23065-23097)
[004] 00002b08: ISZERO                         // SRCID115: (23062-23181)
[004] 00002b09: PUSH2 0x2b15                   // SRCID115: (23062-23181)
[004] 00002b0c: JUMPI                          // SRCID115: (23062-23181)
      00002b0d: PUSH2 0x2b14                   // SRCID115: (23100-23179)
      00002b10: PUSH2 0x2ab0                   // SRCID115: (23100-23179)
      00002b13: JUMP                           // SRCID115: (23100-23179)
      00002b14: JUMPDEST                       // SRCID115: (23100-23179)
[004] 00002b15: JUMPDEST                       // SRCID115: (23062-23181)
[004] 00002b16: PUSH0                          // SRCID115: (23220-23221)
[004] 00002b17: PUSH2 0x2b22                   // SRCID115: (23245-23332)
[004] 00002b1a: DUP5                           // SRCID115: (23324-23331)
[004] 00002b1b: DUP3                           // SRCID115: (23315-23321)
[004] 00002b1c: DUP6                           // SRCID115: (23304-23313)
[004] 00002b1d: ADD                            // SRCID115: (23300-23322)
[004] 00002b1e: PUSH2 0x2aec                   // SRCID115: (23245-23332)
[004] 00002b21: JUMP                           // SRCID115: (23245-23332)
[004] 00002b22: JUMPDEST                       // SRCID115: (23245-23332)
[004] 00002b23: SWAP2                          // SRCID115: (23235-23332)
[004] 00002b24: POP                            // SRCID115: (23235-23332)
[004] 00002b25: POP                            // SRCID115: (23191-23342)
[004] 00002b26: SWAP3                          // SRCID115: (22952-23349)
[004] 00002b27: SWAP2                          // SRCID115: (22952-23349)
[004] 00002b28: POP                            // SRCID115: (22952-23349)
[004] 00002b29: POP                            // SRCID115: (22952-23349)
[004] 00002b2a: JUMP                           // SRCID115: (22952-23349)
[009] 00002b2b: JUMPDEST                       // SRCID115: (23355-23687)
[009] 00002b2c: PUSH0                          // SRCID115: (23476-23480)
[009] 00002b2d: PUSH1 0x40                     // SRCID115: (23514-23516)
[009] 00002b2f: DUP3                           // SRCID115: (23503-23512)
[009] 00002b30: ADD                            // SRCID115: (23499-23517)
[009] 00002b31: SWAP1                          // SRCID115: (23491-23517)
[009] 00002b32: POP                            // SRCID115: (23491-23517)
[009] 00002b33: PUSH2 0x2b3e                   // SRCID115: (23527-23598)
[009] 00002b36: PUSH0                          // SRCID115: (23595-23596)
[009] 00002b37: DUP4                           // SRCID115: (23584-23593)
[009] 00002b38: ADD                            // SRCID115: (23580-23597)
[009] 00002b39: DUP6                           // SRCID115: (23571-23577)
[009] 00002b3a: PUSH2 0x2a38                   // SRCID115: (23527-23598)
[009] 00002b3d: JUMP                           // SRCID115: (23527-23598)
[009] 00002b3e: JUMPDEST                       // SRCID115: (23527-23598)
[009] 00002b3f: PUSH2 0x2b4b                   // SRCID115: (23608-23680)
[009] 00002b42: PUSH1 0x20                     // SRCID115: (23676-23678)
[009] 00002b44: DUP4                           // SRCID115: (23665-23674)
[009] 00002b45: ADD                            // SRCID115: (23661-23679)
[009] 00002b46: DUP5                           // SRCID115: (23652-23658)
[009] 00002b47: PUSH2 0x2a38                   // SRCID115: (23608-23680)
[009] 00002b4a: JUMP                           // SRCID115: (23608-23680)
[009] 00002b4b: JUMPDEST                       // SRCID115: (23608-23680)
[009] 00002b4c: SWAP4                          // SRCID115: (23355-23687)
[009] 00002b4d: SWAP3                          // SRCID115: (23355-23687)
[009] 00002b4e: POP                            // SRCID115: (23355-23687)
[009] 00002b4f: POP                            // SRCID115: (23355-23687)
[009] 00002b50: POP                            // SRCID115: (23355-23687)
[009] 00002b51: JUMP                           // SRCID115: (23355-23687)
      00002b52: JUMPDEST                       // SRCID115: (23693-23873)
      00002b53: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID115: (23741-23818)
      00002b74: PUSH0                          // SRCID115: (23738-23739)
      00002b75: MSTORE                         // SRCID115: (23731-23819)
      00002b76: PUSH1 0x22                     // SRCID115: (23838-23842)
      00002b78: PUSH1 0x4                      // SRCID115: (23835-23836)
      00002b7a: MSTORE                         // SRCID115: (23828-23843)
      00002b7b: PUSH1 0x24                     // SRCID115: (23862-23866)
      00002b7d: PUSH0                          // SRCID115: (23859-23860)
      00002b7e: REVERT                         // SRCID115: (23852-23867)
      00002b7f: JUMPDEST                       // SRCID115: (23879-24199)
      00002b80: PUSH0                          // SRCID115: (23923-23929)
      00002b81: PUSH1 0x2                      // SRCID115: (23960-23961)
      00002b83: DUP3                           // SRCID115: (23954-23958)
      00002b84: DIV                            // SRCID115: (23950-23962)
      00002b85: SWAP1                          // SRCID115: (23940-23962)
      00002b86: POP                            // SRCID115: (23940-23962)
      00002b87: PUSH1 0x1                      // SRCID115: (24007-24008)
      00002b89: DUP3                           // SRCID115: (24001-24005)
      00002b8a: AND                            // SRCID115: (23997-24009)
      00002b8b: DUP1                           // SRCID115: (24028-24046)
      00002b8c: PUSH2 0x2b96                   // SRCID115: (24018-24099)
      00002b8f: JUMPI                          // SRCID115: (24018-24099)
      00002b90: PUSH1 0x7f                     // SRCID115: (24084-24088)
      00002b92: DUP3                           // SRCID115: (24076-24082)
      00002b93: AND                            // SRCID115: (24072-24089)
      00002b94: SWAP2                          // SRCID115: (24062-24089)
      00002b95: POP                            // SRCID115: (24062-24089)
      00002b96: JUMPDEST                       // SRCID115: (24018-24099)
      00002b97: PUSH1 0x20                     // SRCID115: (24146-24148)
      00002b99: DUP3                           // SRCID115: (24138-24144)
      00002b9a: LT                             // SRCID115: (24135-24149)
      00002b9b: DUP2                           // SRCID115: (24115-24133)
      00002b9c: SUB                            // SRCID115: (24112-24150)
      00002b9d: PUSH2 0x2ba9                   // SRCID115: (24109-24193)
      00002ba0: JUMPI                          // SRCID115: (24109-24193)
      00002ba1: PUSH2 0x2ba8                   // SRCID115: (24165-24183)
      00002ba4: PUSH2 0x2b52                   // SRCID115: (24165-24183)
      00002ba7: JUMP                           // SRCID115: (24165-24183)
      00002ba8: JUMPDEST                       // SRCID115: (24165-24183)
      00002ba9: JUMPDEST                       // SRCID115: (24109-24193)
      00002baa: POP                            // SRCID115: (23930-24199)
      00002bab: SWAP2                          // SRCID115: (23879-24199)
      00002bac: SWAP1                          // SRCID115: (23879-24199)
      00002bad: POP                            // SRCID115: (23879-24199)
      00002bae: JUMP                           // SRCID115: (23879-24199)
[001] 00002baf: JUMPDEST                       // SRCID115: (24205-24321)
[001] 00002bb0: PUSH0                          // SRCID115: (24262-24269)
[001] 00002bb1: PUSH2 0x2bb9                   // SRCID115: (24291-24315)
[001] 00002bb4: DUP3                           // SRCID115: (24309-24314)
[001] 00002bb5: PUSH2 0x227e                   // SRCID115: (24291-24315)
[001] 00002bb8: JUMP                           // SRCID115: (24291-24315)
[001] 00002bb9: JUMPDEST                       // SRCID115: (24291-24315)
[001] 00002bba: SWAP1                          // SRCID115: (24280-24315)
[001] 00002bbb: POP                            // SRCID115: (24280-24315)
[001] 00002bbc: SWAP2                          // SRCID115: (24205-24321)
[001] 00002bbd: SWAP1                          // SRCID115: (24205-24321)
[001] 00002bbe: POP                            // SRCID115: (24205-24321)
[001] 00002bbf: JUMP                           // SRCID115: (24205-24321)
[001] 00002bc0: JUMPDEST                       // SRCID115: (24327-24489)
[001] 00002bc1: PUSH2 0x2bc9                   // SRCID115: (24420-24464)
[001] 00002bc4: DUP2                           // SRCID115: (24458-24463)
[001] 00002bc5: PUSH2 0x2baf                   // SRCID115: (24420-24464)
[001] 00002bc8: JUMP                           // SRCID115: (24420-24464)
[001] 00002bc9: JUMPDEST                       // SRCID115: (24420-24464)
[001] 00002bca: DUP2                           // SRCID115: (24413-24418)
[001] 00002bcb: EQ                             // SRCID115: (24410-24465)
[001] 00002bcc: PUSH2 0x2bd3                   // SRCID115: (24400-24483)
[001] 00002bcf: JUMPI                          // SRCID115: (24400-24483)
      00002bd0: PUSH0                          // SRCID115: (24479-24480)
      00002bd1: DUP1                           // SRCID115: (24476-24477)
      00002bd2: REVERT                         // SRCID115: (24469-24481)
[001] 00002bd3: JUMPDEST                       // SRCID115: (24400-24483)
[001] 00002bd4: POP                            // SRCID115: (24327-24489)
[001] 00002bd5: JUMP                           // SRCID115: (24327-24489)
[001] 00002bd6: JUMPDEST                       // SRCID115: (24495-24678)
[001] 00002bd7: PUSH0                          // SRCID115: (24572-24577)
[001] 00002bd8: DUP2                           // SRCID115: (24603-24609)
[001] 00002bd9: MLOAD                          // SRCID115: (24597-24610)
[001] 00002bda: SWAP1                          // SRCID115: (24588-24610)
[001] 00002bdb: POP                            // SRCID115: (24588-24610)
[001] 00002bdc: PUSH2 0x2be4                   // SRCID115: (24619-24672)
[001] 00002bdf: DUP2                           // SRCID115: (24666-24671)
[001] 00002be0: PUSH2 0x2bc0                   // SRCID115: (24619-24672)
[001] 00002be3: JUMP                           // SRCID115: (24619-24672)
[001] 00002be4: JUMPDEST                       // SRCID115: (24619-24672)
[001] 00002be5: SWAP3                          // SRCID115: (24495-24678)
[001] 00002be6: SWAP2                          // SRCID115: (24495-24678)
[001] 00002be7: POP                            // SRCID115: (24495-24678)
[001] 00002be8: POP                            // SRCID115: (24495-24678)
[001] 00002be9: JUMP                           // SRCID115: (24495-24678)
[001] 00002bea: JUMPDEST                       // SRCID115: (24684-25075)
[001] 00002beb: PUSH0                          // SRCID115: (24774-24780)
[001] 00002bec: PUSH1 0x20                     // SRCID115: (24823-24825)
[001] 00002bee: DUP3                           // SRCID115: (24811-24820)
[001] 00002bef: DUP5                           // SRCID115: (24802-24809)
[001] 00002bf0: SUB                            // SRCID115: (24798-24821)
[001] 00002bf1: SLT                            // SRCID115: (24794-24826)
[001] 00002bf2: ISZERO                         // SRCID115: (24791-24910)
[001] 00002bf3: PUSH2 0x2bff                   // SRCID115: (24791-24910)
[001] 00002bf6: JUMPI                          // SRCID115: (24791-24910)
      00002bf7: PUSH2 0x2bfe                   // SRCID115: (24829-24908)
      00002bfa: PUSH2 0x2ab0                   // SRCID115: (24829-24908)
      00002bfd: JUMP                           // SRCID115: (24829-24908)
      00002bfe: JUMPDEST                       // SRCID115: (24829-24908)
[001] 00002bff: JUMPDEST                       // SRCID115: (24791-24910)
[001] 00002c00: PUSH0                          // SRCID115: (24949-24950)
[001] 00002c01: PUSH2 0x2c0c                   // SRCID115: (24974-25058)
[001] 00002c04: DUP5                           // SRCID115: (25050-25057)
[001] 00002c05: DUP3                           // SRCID115: (25041-25047)
[001] 00002c06: DUP6                           // SRCID115: (25030-25039)
[001] 00002c07: ADD                            // SRCID115: (25026-25048)
[001] 00002c08: PUSH2 0x2bd6                   // SRCID115: (24974-25058)
[001] 00002c0b: JUMP                           // SRCID115: (24974-25058)
[001] 00002c0c: JUMPDEST                       // SRCID115: (24974-25058)
[001] 00002c0d: SWAP2                          // SRCID115: (24964-25058)
[001] 00002c0e: POP                            // SRCID115: (24964-25058)
[001] 00002c0f: POP                            // SRCID115: (24920-25068)
[001] 00002c10: SWAP3                          // SRCID115: (24684-25075)
[001] 00002c11: SWAP2                          // SRCID115: (24684-25075)
[001] 00002c12: POP                            // SRCID115: (24684-25075)
[001] 00002c13: POP                            // SRCID115: (24684-25075)
[001] 00002c14: JUMP                           // SRCID115: (24684-25075)
[016] 00002c15: JUMPDEST                       // SRCID115: (25081-25203)
[016] 00002c16: PUSH2 0x2c1e                   // SRCID115: (25154-25178)
[016] 00002c19: DUP2                           // SRCID115: (25172-25177)
[016] 00002c1a: PUSH2 0x227e                   // SRCID115: (25154-25178)
[016] 00002c1d: JUMP                           // SRCID115: (25154-25178)
[016] 00002c1e: JUMPDEST                       // SRCID115: (25154-25178)
[016] 00002c1f: DUP2                           // SRCID115: (25147-25152)
[016] 00002c20: EQ                             // SRCID115: (25144-25179)
[016] 00002c21: PUSH2 0x2c28                   // SRCID115: (25134-25197)
[016] 00002c24: JUMPI                          // SRCID115: (25134-25197)
      00002c25: PUSH0                          // SRCID115: (25193-25194)
      00002c26: DUP1                           // SRCID115: (25190-25191)
      00002c27: REVERT                         // SRCID115: (25183-25195)
[016] 00002c28: JUMPDEST                       // SRCID115: (25134-25197)
[016] 00002c29: POP                            // SRCID115: (25081-25203)
[016] 00002c2a: JUMP                           // SRCID115: (25081-25203)
[016] 00002c2b: JUMPDEST                       // SRCID115: (25209-25352)
[016] 00002c2c: PUSH0                          // SRCID115: (25266-25271)
[016] 00002c2d: DUP2                           // SRCID115: (25297-25303)
[016] 00002c2e: MLOAD                          // SRCID115: (25291-25304)
[016] 00002c2f: SWAP1                          // SRCID115: (25282-25304)
[016] 00002c30: POP                            // SRCID115: (25282-25304)
[016] 00002c31: PUSH2 0x2c39                   // SRCID115: (25313-25346)
[016] 00002c34: DUP2                           // SRCID115: (25340-25345)
[016] 00002c35: PUSH2 0x2c15                   // SRCID115: (25313-25346)
[016] 00002c38: JUMP                           // SRCID115: (25313-25346)
[016] 00002c39: JUMPDEST                       // SRCID115: (25313-25346)
[016] 00002c3a: SWAP3                          // SRCID115: (25209-25352)
[016] 00002c3b: SWAP2                          // SRCID115: (25209-25352)
[016] 00002c3c: POP                            // SRCID115: (25209-25352)
[016] 00002c3d: POP                            // SRCID115: (25209-25352)
[016] 00002c3e: JUMP                           // SRCID115: (25209-25352)
[016] 00002c3f: JUMPDEST                       // SRCID115: (25358-25709)
[016] 00002c40: PUSH0                          // SRCID115: (25428-25434)
[016] 00002c41: PUSH1 0x20                     // SRCID115: (25477-25479)
[016] 00002c43: DUP3                           // SRCID115: (25465-25474)
[016] 00002c44: DUP5                           // SRCID115: (25456-25463)
[016] 00002c45: SUB                            // SRCID115: (25452-25475)
[016] 00002c46: SLT                            // SRCID115: (25448-25480)
[016] 00002c47: ISZERO                         // SRCID115: (25445-25564)
[016] 00002c48: PUSH2 0x2c54                   // SRCID115: (25445-25564)
[016] 00002c4b: JUMPI                          // SRCID115: (25445-25564)
      00002c4c: PUSH2 0x2c53                   // SRCID115: (25483-25562)
      00002c4f: PUSH2 0x2ab0                   // SRCID115: (25483-25562)
      00002c52: JUMP                           // SRCID115: (25483-25562)
      00002c53: JUMPDEST                       // SRCID115: (25483-25562)
[016] 00002c54: JUMPDEST                       // SRCID115: (25445-25564)
[016] 00002c55: PUSH0                          // SRCID115: (25603-25604)
[016] 00002c56: PUSH2 0x2c61                   // SRCID115: (25628-25692)
[016] 00002c59: DUP5                           // SRCID115: (25684-25691)
[016] 00002c5a: DUP3                           // SRCID115: (25675-25681)
[016] 00002c5b: DUP6                           // SRCID115: (25664-25673)
[016] 00002c5c: ADD                            // SRCID115: (25660-25682)
[016] 00002c5d: PUSH2 0x2c2b                   // SRCID115: (25628-25692)
[016] 00002c60: JUMP                           // SRCID115: (25628-25692)
[016] 00002c61: JUMPDEST                       // SRCID115: (25628-25692)
[016] 00002c62: SWAP2                          // SRCID115: (25618-25692)
[016] 00002c63: POP                            // SRCID115: (25618-25692)
[016] 00002c64: POP                            // SRCID115: (25574-25702)
[016] 00002c65: SWAP3                          // SRCID115: (25358-25709)
[016] 00002c66: SWAP2                          // SRCID115: (25358-25709)
[016] 00002c67: POP                            // SRCID115: (25358-25709)
[016] 00002c68: POP                            // SRCID115: (25358-25709)
[016] 00002c69: JUMP                           // SRCID115: (25358-25709)
[006] 00002c6a: JUMPDEST                       // SRCID115: (25715-25937)
[006] 00002c6b: PUSH0                          // SRCID115: (25808-25812)
[006] 00002c6c: PUSH1 0x20                     // SRCID115: (25846-25848)
[006] 00002c6e: DUP3                           // SRCID115: (25835-25844)
[006] 00002c6f: ADD                            // SRCID115: (25831-25849)
[006] 00002c70: SWAP1                          // SRCID115: (25823-25849)
[006] 00002c71: POP                            // SRCID115: (25823-25849)
[006] 00002c72: PUSH2 0x2c7d                   // SRCID115: (25859-25930)
[006] 00002c75: PUSH0                          // SRCID115: (25927-25928)
[006] 00002c76: DUP4                           // SRCID115: (25916-25925)
[006] 00002c77: ADD                            // SRCID115: (25912-25929)
[006] 00002c78: DUP5                           // SRCID115: (25903-25909)
[006] 00002c79: PUSH2 0x2a38                   // SRCID115: (25859-25930)
[006] 00002c7c: JUMP                           // SRCID115: (25859-25930)
[006] 00002c7d: JUMPDEST                       // SRCID115: (25859-25930)
[006] 00002c7e: SWAP3                          // SRCID115: (25715-25937)
[006] 00002c7f: SWAP2                          // SRCID115: (25715-25937)
[006] 00002c80: POP                            // SRCID115: (25715-25937)
[006] 00002c81: POP                            // SRCID115: (25715-25937)
[006] 00002c82: JUMP                           // SRCID115: (25715-25937)
[004] 00002c83: JUMPDEST                       // SRCID115: (25943-26077)
[004] 00002c84: PUSH0                          // SRCID115: (26001-26010)
[004] 00002c85: PUSH2 0x2c8d                   // SRCID115: (26034-26071)
[004] 00002c88: DUP3                           // SRCID115: (26065-26070)
[004] 00002c89: PUSH2 0x29ee                   // SRCID115: (26034-26071)
[004] 00002c8c: JUMP                           // SRCID115: (26034-26071)
[004] 00002c8d: JUMPDEST                       // SRCID115: (26034-26071)
[004] 00002c8e: SWAP1                          // SRCID115: (26021-26071)
[004] 00002c8f: POP                            // SRCID115: (26021-26071)
[004] 00002c90: SWAP2                          // SRCID115: (25943-26077)
[004] 00002c91: SWAP1                          // SRCID115: (25943-26077)
[004] 00002c92: POP                            // SRCID115: (25943-26077)
[004] 00002c93: JUMP                           // SRCID115: (25943-26077)
[004] 00002c94: JUMPDEST                       // SRCID115: (26083-26230)
[004] 00002c95: PUSH2 0x2c9d                   // SRCID115: (26178-26223)
[004] 00002c98: DUP2                           // SRCID115: (26217-26222)
[004] 00002c99: PUSH2 0x2c83                   // SRCID115: (26178-26223)
[004] 00002c9c: JUMP                           // SRCID115: (26178-26223)
[004] 00002c9d: JUMPDEST                       // SRCID115: (26178-26223)
[004] 00002c9e: DUP3                           // SRCID115: (26173-26176)
[004] 00002c9f: MSTORE                         // SRCID115: (26166-26224)
[004] 00002ca0: POP                            // SRCID115: (26083-26230)
[004] 00002ca1: POP                            // SRCID115: (26083-26230)
[004] 00002ca2: JUMP                           // SRCID115: (26083-26230)
[004] 00002ca3: JUMPDEST                       // SRCID115: (26236-26474)
[004] 00002ca4: PUSH0                          // SRCID115: (26337-26341)
[004] 00002ca5: PUSH1 0x20                     // SRCID115: (26375-26377)
[004] 00002ca7: DUP3                           // SRCID115: (26364-26373)
[004] 00002ca8: ADD                            // SRCID115: (26360-26378)
[004] 00002ca9: SWAP1                          // SRCID115: (26352-26378)
[004] 00002caa: POP                            // SRCID115: (26352-26378)
[004] 00002cab: PUSH2 0x2cb6                   // SRCID115: (26388-26467)
[004] 00002cae: PUSH0                          // SRCID115: (26464-26465)
[004] 00002caf: DUP4                           // SRCID115: (26453-26462)
[004] 00002cb0: ADD                            // SRCID115: (26449-26466)
[004] 00002cb1: DUP5                           // SRCID115: (26440-26446)
[004] 00002cb2: PUSH2 0x2c94                   // SRCID115: (26388-26467)
[004] 00002cb5: JUMP                           // SRCID115: (26388-26467)
[004] 00002cb6: JUMPDEST                       // SRCID115: (26388-26467)
[004] 00002cb7: SWAP3                          // SRCID115: (26236-26474)
[004] 00002cb8: SWAP2                          // SRCID115: (26236-26474)
[004] 00002cb9: POP                            // SRCID115: (26236-26474)
[004] 00002cba: POP                            // SRCID115: (26236-26474)
[004] 00002cbb: JUMP                           // SRCID115: (26236-26474)
[004] 00002cbc: JUMPDEST                       // SRCID115: (26480-26596)
[004] 00002cbd: PUSH2 0x2cc5                   // SRCID115: (26550-26571)
[004] 00002cc0: DUP2                           // SRCID115: (26565-26570)
[004] 00002cc1: PUSH2 0x2933                   // SRCID115: (26550-26571)
[004] 00002cc4: JUMP                           // SRCID115: (26550-26571)
[004] 00002cc5: JUMPDEST                       // SRCID115: (26550-26571)
[004] 00002cc6: DUP2                           // SRCID115: (26543-26548)
[004] 00002cc7: EQ                             // SRCID115: (26540-26572)
[004] 00002cc8: PUSH2 0x2ccf                   // SRCID115: (26530-26590)
[004] 00002ccb: JUMPI                          // SRCID115: (26530-26590)
      00002ccc: PUSH0                          // SRCID115: (26586-26587)
      00002ccd: DUP1                           // SRCID115: (26583-26584)
      00002cce: REVERT                         // SRCID115: (26576-26588)
[004] 00002ccf: JUMPDEST                       // SRCID115: (26530-26590)
[004] 00002cd0: POP                            // SRCID115: (26480-26596)
[004] 00002cd1: JUMP                           // SRCID115: (26480-26596)
[004] 00002cd2: JUMPDEST                       // SRCID115: (26602-26739)
[004] 00002cd3: PUSH0                          // SRCID115: (26656-26661)
[004] 00002cd4: DUP2                           // SRCID115: (26687-26693)
[004] 00002cd5: MLOAD                          // SRCID115: (26681-26694)
[004] 00002cd6: SWAP1                          // SRCID115: (26672-26694)
[004] 00002cd7: POP                            // SRCID115: (26672-26694)
[004] 00002cd8: PUSH2 0x2ce0                   // SRCID115: (26703-26733)
[004] 00002cdb: DUP2                           // SRCID115: (26727-26732)
[004] 00002cdc: PUSH2 0x2cbc                   // SRCID115: (26703-26733)
[004] 00002cdf: JUMP                           // SRCID115: (26703-26733)
[004] 00002ce0: JUMPDEST                       // SRCID115: (26703-26733)
[004] 00002ce1: SWAP3                          // SRCID115: (26602-26739)
[004] 00002ce2: SWAP2                          // SRCID115: (26602-26739)
[004] 00002ce3: POP                            // SRCID115: (26602-26739)
[004] 00002ce4: POP                            // SRCID115: (26602-26739)
[004] 00002ce5: JUMP                           // SRCID115: (26602-26739)
[004] 00002ce6: JUMPDEST                       // SRCID115: (26745-27090)
[004] 00002ce7: PUSH0                          // SRCID115: (26812-26818)
[004] 00002ce8: PUSH1 0x20                     // SRCID115: (26861-26863)
[004] 00002cea: DUP3                           // SRCID115: (26849-26858)
[004] 00002ceb: DUP5                           // SRCID115: (26840-26847)
[004] 00002cec: SUB                            // SRCID115: (26836-26859)
[004] 00002ced: SLT                            // SRCID115: (26832-26864)
[004] 00002cee: ISZERO                         // SRCID115: (26829-26948)
[004] 00002cef: PUSH2 0x2cfb                   // SRCID115: (26829-26948)
[004] 00002cf2: JUMPI                          // SRCID115: (26829-26948)
      00002cf3: PUSH2 0x2cfa                   // SRCID115: (26867-26946)
      00002cf6: PUSH2 0x2ab0                   // SRCID115: (26867-26946)
      00002cf9: JUMP                           // SRCID115: (26867-26946)
      00002cfa: JUMPDEST                       // SRCID115: (26867-26946)
[004] 00002cfb: JUMPDEST                       // SRCID115: (26829-26948)
[004] 00002cfc: PUSH0                          // SRCID115: (26987-26988)
[004] 00002cfd: PUSH2 0x2d08                   // SRCID115: (27012-27073)
[004] 00002d00: DUP5                           // SRCID115: (27065-27072)
[004] 00002d01: DUP3                           // SRCID115: (27056-27062)
[004] 00002d02: DUP6                           // SRCID115: (27045-27054)
[004] 00002d03: ADD                            // SRCID115: (27041-27063)
[004] 00002d04: PUSH2 0x2cd2                   // SRCID115: (27012-27073)
[004] 00002d07: JUMP                           // SRCID115: (27012-27073)
[004] 00002d08: JUMPDEST                       // SRCID115: (27012-27073)
[004] 00002d09: SWAP2                          // SRCID115: (27002-27073)
[004] 00002d0a: POP                            // SRCID115: (27002-27073)
[004] 00002d0b: POP                            // SRCID115: (26958-27083)
[004] 00002d0c: SWAP3                          // SRCID115: (26745-27090)
[004] 00002d0d: SWAP2                          // SRCID115: (26745-27090)
[004] 00002d0e: POP                            // SRCID115: (26745-27090)
[004] 00002d0f: POP                            // SRCID115: (26745-27090)
[004] 00002d10: JUMP                           // SRCID115: (26745-27090)
      00002d11: JUMPDEST                       // SRCID115: (27096-27173)
      00002d12: PUSH0                          // SRCID115: (27133-27140)
      00002d13: DUP2                           // SRCID115: (27162-27167)
      00002d14: SWAP1                          // SRCID115: (27151-27167)
      00002d15: POP                            // SRCID115: (27151-27167)
      00002d16: SWAP2                          // SRCID115: (27096-27173)
      00002d17: SWAP1                          // SRCID115: (27096-27173)
      00002d18: POP                            // SRCID115: (27096-27173)
      00002d19: JUMP                           // SRCID115: (27096-27173)
      00002d1a: JUMPDEST                       // SRCID115: (27179-27297)
      00002d1b: PUSH2 0x2d23                   // SRCID115: (27266-27290)
      00002d1e: DUP2                           // SRCID115: (27284-27289)
      00002d1f: PUSH2 0x2d11                   // SRCID115: (27266-27290)
      00002d22: JUMP                           // SRCID115: (27266-27290)
      00002d23: JUMPDEST                       // SRCID115: (27266-27290)
      00002d24: DUP3                           // SRCID115: (27261-27264)
      00002d25: MSTORE                         // SRCID115: (27254-27291)
      00002d26: POP                            // SRCID115: (27179-27297)
      00002d27: POP                            // SRCID115: (27179-27297)
      00002d28: JUMP                           // SRCID115: (27179-27297)
      00002d29: JUMPDEST                       // SRCID115: (27303-27635)
      00002d2a: PUSH0                          // SRCID115: (27424-27428)
      00002d2b: PUSH1 0x40                     // SRCID115: (27462-27464)
      00002d2d: DUP3                           // SRCID115: (27451-27460)
      00002d2e: ADD                            // SRCID115: (27447-27465)
      00002d2f: SWAP1                          // SRCID115: (27439-27465)
      00002d30: POP                            // SRCID115: (27439-27465)
      00002d31: PUSH2 0x2d3c                   // SRCID115: (27475-27546)
      00002d34: PUSH0                          // SRCID115: (27543-27544)
      00002d35: DUP4                           // SRCID115: (27532-27541)
      00002d36: ADD                            // SRCID115: (27528-27545)
      00002d37: DUP6                           // SRCID115: (27519-27525)
      00002d38: PUSH2 0x2a38                   // SRCID115: (27475-27546)
      00002d3b: JUMP                           // SRCID115: (27475-27546)
      00002d3c: JUMPDEST                       // SRCID115: (27475-27546)
      00002d3d: PUSH2 0x2d49                   // SRCID115: (27556-27628)
      00002d40: PUSH1 0x20                     // SRCID115: (27624-27626)
      00002d42: DUP4                           // SRCID115: (27613-27622)
      00002d43: ADD                            // SRCID115: (27609-27627)
      00002d44: DUP5                           // SRCID115: (27600-27606)
      00002d45: PUSH2 0x2d1a                   // SRCID115: (27556-27628)
      00002d48: JUMP                           // SRCID115: (27556-27628)
      00002d49: JUMPDEST                       // SRCID115: (27556-27628)
      00002d4a: SWAP4                          // SRCID115: (27303-27635)
      00002d4b: SWAP3                          // SRCID115: (27303-27635)
      00002d4c: POP                            // SRCID115: (27303-27635)
      00002d4d: POP                            // SRCID115: (27303-27635)
      00002d4e: POP                            // SRCID115: (27303-27635)
      00002d4f: JUMP                           // SRCID115: (27303-27635)
      00002d50: JUMPDEST                       // SRCID115: (27641-27763)
      00002d51: PUSH2 0x2d59                   // SRCID115: (27714-27738)
      00002d54: DUP2                           // SRCID115: (27732-27737)
      00002d55: PUSH2 0x2d11                   // SRCID115: (27714-27738)
      00002d58: JUMP                           // SRCID115: (27714-27738)
      00002d59: JUMPDEST                       // SRCID115: (27714-27738)
      00002d5a: DUP2                           // SRCID115: (27707-27712)
      00002d5b: EQ                             // SRCID115: (27704-27739)
      00002d5c: PUSH2 0x2d63                   // SRCID115: (27694-27757)
      00002d5f: JUMPI                          // SRCID115: (27694-27757)
      00002d60: PUSH0                          // SRCID115: (27753-27754)
      00002d61: DUP1                           // SRCID115: (27750-27751)
      00002d62: REVERT                         // SRCID115: (27743-27755)
      00002d63: JUMPDEST                       // SRCID115: (27694-27757)
      00002d64: POP                            // SRCID115: (27641-27763)
      00002d65: JUMP                           // SRCID115: (27641-27763)
      00002d66: JUMPDEST                       // SRCID115: (27769-27912)
      00002d67: PUSH0                          // SRCID115: (27826-27831)
      00002d68: DUP2                           // SRCID115: (27857-27863)
      00002d69: MLOAD                          // SRCID115: (27851-27864)
      00002d6a: SWAP1                          // SRCID115: (27842-27864)
      00002d6b: POP                            // SRCID115: (27842-27864)
      00002d6c: PUSH2 0x2d74                   // SRCID115: (27873-27906)
      00002d6f: DUP2                           // SRCID115: (27900-27905)
      00002d70: PUSH2 0x2d50                   // SRCID115: (27873-27906)
      00002d73: JUMP                           // SRCID115: (27873-27906)
      00002d74: JUMPDEST                       // SRCID115: (27873-27906)
      00002d75: SWAP3                          // SRCID115: (27769-27912)
      00002d76: SWAP2                          // SRCID115: (27769-27912)
      00002d77: POP                            // SRCID115: (27769-27912)
      00002d78: POP                            // SRCID115: (27769-27912)
      00002d79: JUMP                           // SRCID115: (27769-27912)
      00002d7a: JUMPDEST                       // SRCID115: (27918-28269)
      00002d7b: PUSH0                          // SRCID115: (27988-27994)
      00002d7c: PUSH1 0x20                     // SRCID115: (28037-28039)
      00002d7e: DUP3                           // SRCID115: (28025-28034)
      00002d7f: DUP5                           // SRCID115: (28016-28023)
      00002d80: SUB                            // SRCID115: (28012-28035)
      00002d81: SLT                            // SRCID115: (28008-28040)
      00002d82: ISZERO                         // SRCID115: (28005-28124)
      00002d83: PUSH2 0x2d8f                   // SRCID115: (28005-28124)
      00002d86: JUMPI                          // SRCID115: (28005-28124)
      00002d87: PUSH2 0x2d8e                   // SRCID115: (28043-28122)
      00002d8a: PUSH2 0x2ab0                   // SRCID115: (28043-28122)
      00002d8d: JUMP                           // SRCID115: (28043-28122)
      00002d8e: JUMPDEST                       // SRCID115: (28043-28122)
      00002d8f: JUMPDEST                       // SRCID115: (28005-28124)
      00002d90: PUSH0                          // SRCID115: (28163-28164)
      00002d91: PUSH2 0x2d9c                   // SRCID115: (28188-28252)
      00002d94: DUP5                           // SRCID115: (28244-28251)
      00002d95: DUP3                           // SRCID115: (28235-28241)
      00002d96: DUP6                           // SRCID115: (28224-28233)
      00002d97: ADD                            // SRCID115: (28220-28242)
      00002d98: PUSH2 0x2d66                   // SRCID115: (28188-28252)
      00002d9b: JUMP                           // SRCID115: (28188-28252)
      00002d9c: JUMPDEST                       // SRCID115: (28188-28252)
      00002d9d: SWAP2                          // SRCID115: (28178-28252)
      00002d9e: POP                            // SRCID115: (28178-28252)
      00002d9f: POP                            // SRCID115: (28134-28262)
      00002da0: SWAP3                          // SRCID115: (27918-28269)
      00002da1: SWAP2                          // SRCID115: (27918-28269)
      00002da2: POP                            // SRCID115: (27918-28269)
      00002da3: POP                            // SRCID115: (27918-28269)
      00002da4: JUMP                           // SRCID115: (27918-28269)
[012] 00002da5: JUMPDEST                       // SRCID115: (28275-28423)
[012] 00002da6: PUSH0                          // SRCID115: (28377-28388)
[012] 00002da7: DUP2                           // SRCID115: (28414-28417)
[012] 00002da8: SWAP1                          // SRCID115: (28399-28417)
[012] 00002da9: POP                            // SRCID115: (28399-28417)
[012] 00002daa: SWAP3                          // SRCID115: (28275-28423)
[012] 00002dab: SWAP2                          // SRCID115: (28275-28423)
[012] 00002dac: POP                            // SRCID115: (28275-28423)
[012] 00002dad: POP                            // SRCID115: (28275-28423)
[012] 00002dae: JUMP                           // SRCID115: (28275-28423)
[012] 00002daf: JUMPDEST                       // SRCID115: (28429-28819)
[012] 00002db0: PUSH0                          // SRCID115: (28535-28538)
[012] 00002db1: PUSH2 0x2db9                   // SRCID115: (28563-28602)
[012] 00002db4: DUP3                           // SRCID115: (28596-28601)
[012] 00002db5: PUSH2 0x238f                   // SRCID115: (28563-28602)
[012] 00002db8: JUMP                           // SRCID115: (28563-28602)
[012] 00002db9: JUMPDEST                       // SRCID115: (28563-28602)
[012] 00002dba: PUSH2 0x2dc3                   // SRCID115: (28618-28707)
[012] 00002dbd: DUP2                           // SRCID115: (28700-28706)
[012] 00002dbe: DUP6                           // SRCID115: (28695-28698)
[012] 00002dbf: PUSH2 0x2da5                   // SRCID115: (28618-28707)
[012] 00002dc2: JUMP                           // SRCID115: (28618-28707)
[012] 00002dc3: JUMPDEST                       // SRCID115: (28618-28707)
[012] 00002dc4: SWAP4                          // SRCID115: (28611-28707)
[012] 00002dc5: POP                            // SRCID115: (28611-28707)
[012] 00002dc6: PUSH2 0x2dd3                   // SRCID115: (28716-28781)
[012] 00002dc9: DUP2                           // SRCID115: (28774-28780)
[012] 00002dca: DUP6                           // SRCID115: (28769-28772)
[012] 00002dcb: PUSH1 0x20                     // SRCID115: (28762-28766)
[012] 00002dcd: DUP7                           // SRCID115: (28755-28760)
[012] 00002dce: ADD                            // SRCID115: (28751-28767)
[012] 00002dcf: PUSH2 0x23a9                   // SRCID115: (28716-28781)
[012] 00002dd2: JUMP                           // SRCID115: (28716-28781)
[012] 00002dd3: JUMPDEST                       // SRCID115: (28716-28781)
[012] 00002dd4: DUP1                           // SRCID115: (28806-28812)
[012] 00002dd5: DUP5                           // SRCID115: (28801-28804)
[012] 00002dd6: ADD                            // SRCID115: (28797-28813)
[012] 00002dd7: SWAP2                          // SRCID115: (28790-28813)
[012] 00002dd8: POP                            // SRCID115: (28790-28813)
[012] 00002dd9: POP                            // SRCID115: (28539-28819)
[012] 00002dda: SWAP3                          // SRCID115: (28429-28819)
[012] 00002ddb: SWAP2                          // SRCID115: (28429-28819)
[012] 00002ddc: POP                            // SRCID115: (28429-28819)
[012] 00002ddd: POP                            // SRCID115: (28429-28819)
[012] 00002dde: JUMP                           // SRCID115: (28429-28819)
[012] 00002ddf: JUMPDEST                       // SRCID115: (28825-29100)
[012] 00002de0: PUSH0                          // SRCID115: (28957-28960)
[012] 00002de1: PUSH2 0x2dea                   // SRCID115: (28979-29074)
[012] 00002de4: DUP3                           // SRCID115: (29070-29073)
[012] 00002de5: DUP5                           // SRCID115: (29061-29067)
[012] 00002de6: PUSH2 0x2daf                   // SRCID115: (28979-29074)
[012] 00002de9: JUMP                           // SRCID115: (28979-29074)
[012] 00002dea: JUMPDEST                       // SRCID115: (28979-29074)
[012] 00002deb: SWAP2                          // SRCID115: (28972-29074)
[012] 00002dec: POP                            // SRCID115: (28972-29074)
[012] 00002ded: DUP2                           // SRCID115: (29091-29094)
[012] 00002dee: SWAP1                          // SRCID115: (29084-29094)
[012] 00002def: POP                            // SRCID115: (29084-29094)
[012] 00002df0: SWAP3                          // SRCID115: (28825-29100)
[012] 00002df1: SWAP2                          // SRCID115: (28825-29100)
[012] 00002df2: POP                            // SRCID115: (28825-29100)
[012] 00002df3: POP                            // SRCID115: (28825-29100)
[012] 00002df4: JUMP                           // SRCID115: (28825-29100)
[012] 00002df5: JUMPDEST                       // SRCID115: (29106-29224)
[012] 00002df6: PUSH2 0x2dfe                   // SRCID115: (29193-29217)
[012] 00002df9: DUP2                           // SRCID115: (29211-29216)
[012] 00002dfa: PUSH2 0x2a50                   // SRCID115: (29193-29217)
[012] 00002dfd: JUMP                           // SRCID115: (29193-29217)
[012] 00002dfe: JUMPDEST                       // SRCID115: (29193-29217)
[012] 00002dff: DUP3                           // SRCID115: (29188-29191)
[012] 00002e00: MSTORE                         // SRCID115: (29181-29218)
[012] 00002e01: POP                            // SRCID115: (29106-29224)
[012] 00002e02: POP                            // SRCID115: (29106-29224)
[012] 00002e03: JUMP                           // SRCID115: (29106-29224)
[012] 00002e04: JUMPDEST                       // SRCID115: (29230-29452)
[012] 00002e05: PUSH0                          // SRCID115: (29323-29327)
[012] 00002e06: PUSH1 0x20                     // SRCID115: (29361-29363)
[012] 00002e08: DUP3                           // SRCID115: (29350-29359)
[012] 00002e09: ADD                            // SRCID115: (29346-29364)
[012] 00002e0a: SWAP1                          // SRCID115: (29338-29364)
[012] 00002e0b: POP                            // SRCID115: (29338-29364)
[012] 00002e0c: PUSH2 0x2e17                   // SRCID115: (29374-29445)
[012] 00002e0f: PUSH0                          // SRCID115: (29442-29443)
[012] 00002e10: DUP4                           // SRCID115: (29431-29440)
[012] 00002e11: ADD                            // SRCID115: (29427-29444)
[012] 00002e12: DUP5                           // SRCID115: (29418-29424)
[012] 00002e13: PUSH2 0x2df5                   // SRCID115: (29374-29445)
[012] 00002e16: JUMP                           // SRCID115: (29374-29445)
[012] 00002e17: JUMPDEST                       // SRCID115: (29374-29445)
[012] 00002e18: SWAP3                          // SRCID115: (29230-29452)
[012] 00002e19: SWAP2                          // SRCID115: (29230-29452)
[012] 00002e1a: POP                            // SRCID115: (29230-29452)
[012] 00002e1b: POP                            // SRCID115: (29230-29452)
[012] 00002e1c: JUMP                           // SRCID115: (29230-29452)
[012] 00002e1d: JUMPDEST                       // SRCID115: (29458-29627)
[012] 00002e1e: PUSH0                          // SRCID115: (29542-29553)
[012] 00002e1f: DUP3                           // SRCID115: (29576-29582)
[012] 00002e20: DUP3                           // SRCID115: (29571-29574)
[012] 00002e21: MSTORE                         // SRCID115: (29564-29583)
[012] 00002e22: PUSH1 0x20                     // SRCID115: (29616-29620)
[012] 00002e24: DUP3                           // SRCID115: (29611-29614)
[012] 00002e25: ADD                            // SRCID115: (29607-29621)
[012] 00002e26: SWAP1                          // SRCID115: (29592-29621)
[012] 00002e27: POP                            // SRCID115: (29592-29621)
[012] 00002e28: SWAP3                          // SRCID115: (29458-29627)
[012] 00002e29: SWAP2                          // SRCID115: (29458-29627)
[012] 00002e2a: POP                            // SRCID115: (29458-29627)
[012] 00002e2b: POP                            // SRCID115: (29458-29627)
[012] 00002e2c: JUMP                           // SRCID115: (29458-29627)
[012] 00002e2d: JUMPDEST                       // SRCID115: (29633-30010)
[012] 00002e2e: PUSH0                          // SRCID115: (29721-29724)
[012] 00002e2f: PUSH2 0x2e37                   // SRCID115: (29749-29788)
[012] 00002e32: DUP3                           // SRCID115: (29782-29787)
[012] 00002e33: PUSH2 0x238f                   // SRCID115: (29749-29788)
[012] 00002e36: JUMP                           // SRCID115: (29749-29788)
[012] 00002e37: JUMPDEST                       // SRCID115: (29749-29788)
[012] 00002e38: PUSH2 0x2e41                   // SRCID115: (29804-29875)
[012] 00002e3b: DUP2                           // SRCID115: (29868-29874)
[012] 00002e3c: DUP6                           // SRCID115: (29863-29866)
[012] 00002e3d: PUSH2 0x2e1d                   // SRCID115: (29804-29875)
[012] 00002e40: JUMP                           // SRCID115: (29804-29875)
[012] 00002e41: JUMPDEST                       // SRCID115: (29804-29875)
[012] 00002e42: SWAP4                          // SRCID115: (29797-29875)
[012] 00002e43: POP                            // SRCID115: (29797-29875)
[012] 00002e44: PUSH2 0x2e51                   // SRCID115: (29884-29949)
[012] 00002e47: DUP2                           // SRCID115: (29942-29948)
[012] 00002e48: DUP6                           // SRCID115: (29937-29940)
[012] 00002e49: PUSH1 0x20                     // SRCID115: (29930-29934)
[012] 00002e4b: DUP7                           // SRCID115: (29923-29928)
[012] 00002e4c: ADD                            // SRCID115: (29919-29935)
[012] 00002e4d: PUSH2 0x23a9                   // SRCID115: (29884-29949)
[012] 00002e50: JUMP                           // SRCID115: (29884-29949)
[012] 00002e51: JUMPDEST                       // SRCID115: (29884-29949)
[012] 00002e52: PUSH2 0x2e5a                   // SRCID115: (29974-30003)
[012] 00002e55: DUP2                           // SRCID115: (29996-30002)
[012] 00002e56: PUSH2 0x23b7                   // SRCID115: (29974-30003)
[012] 00002e59: JUMP                           // SRCID115: (29974-30003)
[012] 00002e5a: JUMPDEST                       // SRCID115: (29974-30003)
[012] 00002e5b: DUP5                           // SRCID115: (29969-29972)
[012] 00002e5c: ADD                            // SRCID115: (29965-30004)
[012] 00002e5d: SWAP2                          // SRCID115: (29958-30004)
[012] 00002e5e: POP                            // SRCID115: (29958-30004)
[012] 00002e5f: POP                            // SRCID115: (29725-30010)
[012] 00002e60: SWAP3                          // SRCID115: (29633-30010)
[012] 00002e61: SWAP2                          // SRCID115: (29633-30010)
[012] 00002e62: POP                            // SRCID115: (29633-30010)
[012] 00002e63: POP                            // SRCID115: (29633-30010)
[012] 00002e64: JUMP                           // SRCID115: (29633-30010)
[012] 00002e65: JUMPDEST                       // SRCID115: (30016-30439)
[012] 00002e66: PUSH0                          // SRCID115: (30157-30161)
[012] 00002e67: PUSH1 0x40                     // SRCID115: (30195-30197)
[012] 00002e69: DUP3                           // SRCID115: (30184-30193)
[012] 00002e6a: ADD                            // SRCID115: (30180-30198)
[012] 00002e6b: SWAP1                          // SRCID115: (30172-30198)
[012] 00002e6c: POP                            // SRCID115: (30172-30198)
[012] 00002e6d: PUSH2 0x2e78                   // SRCID115: (30208-30279)
[012] 00002e70: PUSH0                          // SRCID115: (30276-30277)
[012] 00002e71: DUP4                           // SRCID115: (30265-30274)
[012] 00002e72: ADD                            // SRCID115: (30261-30278)
[012] 00002e73: DUP6                           // SRCID115: (30252-30258)
[012] 00002e74: PUSH2 0x2a38                   // SRCID115: (30208-30279)
[012] 00002e77: JUMP                           // SRCID115: (30208-30279)
[012] 00002e78: JUMPDEST                       // SRCID115: (30208-30279)
[012] 00002e79: DUP2                           // SRCID115: (30326-30335)
[012] 00002e7a: DUP2                           // SRCID115: (30320-30324)
[012] 00002e7b: SUB                            // SRCID115: (30316-30336)
[012] 00002e7c: PUSH1 0x20                     // SRCID115: (30311-30313)
[012] 00002e7e: DUP4                           // SRCID115: (30300-30309)
[012] 00002e7f: ADD                            // SRCID115: (30296-30314)
[012] 00002e80: MSTORE                         // SRCID115: (30289-30337)
[012] 00002e81: PUSH2 0x2e8a                   // SRCID115: (30354-30432)
[012] 00002e84: DUP2                           // SRCID115: (30427-30431)
[012] 00002e85: DUP5                           // SRCID115: (30418-30424)
[012] 00002e86: PUSH2 0x2e2d                   // SRCID115: (30354-30432)
[012] 00002e89: JUMP                           // SRCID115: (30354-30432)
[012] 00002e8a: JUMPDEST                       // SRCID115: (30354-30432)
[012] 00002e8b: SWAP1                          // SRCID115: (30346-30432)
[012] 00002e8c: POP                            // SRCID115: (30346-30432)
[012] 00002e8d: SWAP4                          // SRCID115: (30016-30439)
[012] 00002e8e: SWAP3                          // SRCID115: (30016-30439)
[012] 00002e8f: POP                            // SRCID115: (30016-30439)
[012] 00002e90: POP                            // SRCID115: (30016-30439)
[012] 00002e91: POP                            // SRCID115: (30016-30439)
[012] 00002e92: JUMP                           // SRCID115: (30016-30439)
